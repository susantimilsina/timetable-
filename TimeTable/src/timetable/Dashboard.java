package timetable;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import algorithm.GeneticAlgorithm;
import algorithm.Group;
import algorithm.Individual;
import algorithm.Module;
import algorithm.Population;
import algorithm.Professor;
import algorithm.Room;
import algorithm.Timeslot;
import algorithm.Timetable;
import algorithm.TimetableGa;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Frame;
import java.awt.Graphics;
import java.awt.GraphicsEnvironment;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.Insets;
import java.awt.Panel;
import java.awt.Rectangle;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.ListModel;
import javax.swing.ListSelectionModel;
import javax.swing.ScrollPaneConstants;
import javax.swing.ScrollPaneLayout;
import javax.swing.SwingConstants;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;
import javax.swing.plaf.basic.BasicSplitPaneUI;
import javax.swing.table.DefaultTableModel;
import algorithm.ExistingClass;
import algorithm.parallelTest;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Comparator;
import java.util.stream.Collectors;

/**
 *
 * @author Rahmans
 */
public class Dashboard extends javax.swing.JFrame {

    static boolean maximized = true;
    int xMouse;
    int yMouse;
    public static Timetable t = null;
    public static ArrayList<ExistingClass> existingClasses = null;
    public static ArrayList<Double> generalFitness = null;
    public static Output op = null;
    public static long generalTimetaken;
    public static ArrayList<Output> AlgorithmAnalysisop = new ArrayList<>();
//    public static ArrayList<Output> populationSizeop = null;
//    public static ArrayList<Output> generationop = null;
//    public static ArrayList<Output> mutationop = null;
//    public static ArrayList<Output> crossoverop = null;

    public Dashboard(String adminName) {

        initComponents();
        welcomelbl.setText("Welcome " + adminName);
        clearAddFacultyWarnings();
        clearAddSubjectWarnings();
        AlgorithmAnalysisParameter.loadParameter();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlHeader = new javax.swing.JPanel();
        btnExit = new javax.swing.JButton();
        btnMaximize = new javax.swing.JButton();
        btnMinimize = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        pnlMenu = new javax.swing.JPanel();
        btnSchedule = new javax.swing.JButton();
        lblTimeline = new javax.swing.JLabel();
        btnProffessor = new javax.swing.JButton();
        lblNews = new javax.swing.JLabel();
        btnFaculty = new javax.swing.JButton();
        lblTrending = new javax.swing.JLabel();
        btnClass = new javax.swing.JButton();
        lblQA = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        logoutlbl = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        welcomelbl = new javax.swing.JLabel();
        pnlBody = new javax.swing.JPanel();
        jspSchedule = new javax.swing.JScrollPane();
        pnlSchedule = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel43 = new javax.swing.JPanel();
        jLabel137 = new javax.swing.JLabel();
        jLabel138 = new javax.swing.JLabel();
        pnlProffesor = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        pnlFaculty = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        pnlClass = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        pnlAddFaculty = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        facultyNametxt = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        facultyDesctxtarea = new javax.swing.JTextArea();
        jPanel13 = new javax.swing.JPanel();
        facultyNamelbl = new javax.swing.JLabel();
        FacultyDesclbl = new javax.swing.JLabel();
        FacultyDesclbl1 = new javax.swing.JLabel();
        pnlAddSubject = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        subjectNametxt = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel34 = new javax.swing.JLabel();
        subjectCodetxt = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        subjectFaultyCombo = new javax.swing.JComboBox<>();
        jLabel37 = new javax.swing.JLabel();
        subjectSemesterCombo = new javax.swing.JComboBox<>();
        jLabel38 = new javax.swing.JLabel();
        subjectCodelbl = new javax.swing.JLabel();
        SubjectNamelbl = new javax.swing.JLabel();
        subjectFacultylbl = new javax.swing.JLabel();
        subjectSemesterlbl = new javax.swing.JLabel();
        subjectProffesorlbl = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        profScrollPane = new javax.swing.JScrollPane();
        jLabel35 = new javax.swing.JLabel();
        pnlAddProffesor = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        professorFnametxt = new javax.swing.JTextField();
        professorLnametxt = new javax.swing.JTextField();
        professorUnametxt = new javax.swing.JTextField();
        professorPhonetxt = new javax.swing.JTextField();
        professorEmailtxt = new javax.swing.JTextField();
        professorPasswordtxt = new javax.swing.JPasswordField();
        professorCpasswordtxt = new javax.swing.JPasswordField();
        professorFnamelbl = new javax.swing.JLabel();
        professorLnamelbl = new javax.swing.JLabel();
        professorUnamelbl = new javax.swing.JLabel();
        professorPasswordlbl = new javax.swing.JLabel();
        professorCpasswordlbl = new javax.swing.JLabel();
        professorPhonelbl = new javax.swing.JLabel();
        professorEmaillbl = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jPanel19 = new javax.swing.JPanel();
        jLabel51 = new javax.swing.JLabel();
        phonelbl1 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        pnlAddClass = new javax.swing.JPanel();
        formPnl = new javax.swing.JPanel();
        classCapacitytxt = new javax.swing.JTextField();
        classNumbertxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        classFloortxt = new javax.swing.JTextField();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jPanel22 = new javax.swing.JPanel();
        jLabel59 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        classNumberlbl = new javax.swing.JLabel();
        classFloorlbl = new javax.swing.JLabel();
        classCapacitylbl = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        pnlmainViewClass = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        jLabel64 = new javax.swing.JLabel();
        SPclass = new javax.swing.JScrollPane();
        pnlViewClass = new javax.swing.JPanel();
        pnlUpdateProfessor = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        professorFnametxt1 = new javax.swing.JTextField();
        professorLnametxt1 = new javax.swing.JTextField();
        professorUnametxt1 = new javax.swing.JTextField();
        professorPhonetxt1 = new javax.swing.JTextField();
        professorEmailtxt1 = new javax.swing.JTextField();
        professorPasswordtxt1 = new javax.swing.JPasswordField();
        professorCpasswordtxt1 = new javax.swing.JPasswordField();
        professorFnamelbl1 = new javax.swing.JLabel();
        professorLnamelbl1 = new javax.swing.JLabel();
        professorUnamelbl1 = new javax.swing.JLabel();
        professorPasswordlbl1 = new javax.swing.JLabel();
        professorCpasswordlbl1 = new javax.swing.JLabel();
        professorPhonelbl1 = new javax.swing.JLabel();
        professorEmaillbl1 = new javax.swing.JLabel();
        jPanel24 = new javax.swing.JPanel();
        jLabel72 = new javax.swing.JLabel();
        phonelbl2 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel75 = new javax.swing.JLabel();
        pnlUpdateFaculty = new javax.swing.JPanel();
        pnlViewSemester = new javax.swing.JPanel();
        jPanel25 = new javax.swing.JPanel();
        facName = new javax.swing.JLabel();
        facultyDescriptionviewsemlbl = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        semIpnl = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        semIIIpnl = new javax.swing.JPanel();
        jLabel81 = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        semIIpnl = new javax.swing.JPanel();
        jLabel83 = new javax.swing.JLabel();
        jLabel84 = new javax.swing.JLabel();
        semIVpnl = new javax.swing.JPanel();
        jLabel85 = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        semVpnl = new javax.swing.JPanel();
        jLabel87 = new javax.swing.JLabel();
        jLabel88 = new javax.swing.JLabel();
        semVIIpnl = new javax.swing.JPanel();
        jLabel89 = new javax.swing.JLabel();
        jLabel90 = new javax.swing.JLabel();
        semVIpnl = new javax.swing.JPanel();
        jLabel91 = new javax.swing.JLabel();
        jLabel92 = new javax.swing.JLabel();
        semVIIIpnl = new javax.swing.JPanel();
        jLabel93 = new javax.swing.JLabel();
        jLabel94 = new javax.swing.JLabel();
        pnlUpdateSubject = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        jPanel31 = new javax.swing.JPanel();
        jLabel96 = new javax.swing.JLabel();
        jLabel97 = new javax.swing.JLabel();
        subjectNametxt1 = new javax.swing.JTextField();
        jLabel98 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel99 = new javax.swing.JLabel();
        subjectCodetxt1 = new javax.swing.JTextField();
        jLabel100 = new javax.swing.JLabel();
        subjectFaultyCombo1 = new javax.swing.JComboBox<>();
        jLabel101 = new javax.swing.JLabel();
        subjectSemesterCombo1 = new javax.swing.JComboBox<>();
        jLabel102 = new javax.swing.JLabel();
        subjectCodelbl1 = new javax.swing.JLabel();
        SubjectNamelbl1 = new javax.swing.JLabel();
        subjectFacultylbl1 = new javax.swing.JLabel();
        subjectSemesterlbl1 = new javax.swing.JLabel();
        subjectProffesorlbl1 = new javax.swing.JLabel();
        jLabel103 = new javax.swing.JLabel();
        profScrollPane1 = new javax.swing.JScrollPane();
        jButton9 = new javax.swing.JButton();
        jLabel104 = new javax.swing.JLabel();
        pnlmainViewProfessor = new javax.swing.JPanel();
        jPanel32 = new javax.swing.JPanel();
        jLabel105 = new javax.swing.JLabel();
        SPprofessor = new javax.swing.JScrollPane();
        pnlViewProffesor = new javax.swing.JPanel();
        pnlmainViewFaculty = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel78 = new javax.swing.JLabel();
        SPfaculty = new javax.swing.JScrollPane();
        pnlViewFaculty = new javax.swing.JPanel();
        pnlmainViewSubject = new javax.swing.JPanel();
        jPanel26 = new javax.swing.JPanel();
        jLabel79 = new javax.swing.JLabel();
        SPsubject = new javax.swing.JScrollPane();
        pnlSubjectSemester = new javax.swing.JPanel();
        pnlUpdateClass = new javax.swing.JPanel();
        jLabel80 = new javax.swing.JLabel();
        formPnl1 = new javax.swing.JPanel();
        classCapacitytxt1 = new javax.swing.JTextField();
        classNumbertxt1 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        classFloortxt1 = new javax.swing.JTextField();
        jLabel95 = new javax.swing.JLabel();
        jLabel106 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jPanel28 = new javax.swing.JPanel();
        jLabel107 = new javax.swing.JLabel();
        jLabel108 = new javax.swing.JLabel();
        classNumberlbl1 = new javax.swing.JLabel();
        classFloorlbl1 = new javax.swing.JLabel();
        classCapacitylbl1 = new javax.swing.JLabel();
        jLabel109 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        pnlGenerate = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel37 = new javax.swing.JPanel();
        studentGroupSP = new javax.swing.JScrollPane();
        jLabel126 = new javax.swing.JLabel();
        timeSP = new javax.swing.JScrollPane();
        jLabel127 = new javax.swing.JLabel();
        classSP = new javax.swing.JScrollPane();
        jLabel128 = new javax.swing.JLabel();
        jButton13 = new javax.swing.JButton();
        lblgrouplist = new javax.swing.JLabel();
        lbltimelist = new javax.swing.JLabel();
        lblclasslist = new javax.swing.JLabel();
        jLabel129 = new javax.swing.JLabel();
        pnlAddStudentGroup = new javax.swing.JPanel();
        jLabel110 = new javax.swing.JLabel();
        jPanel29 = new javax.swing.JPanel();
        jPanel33 = new javax.swing.JPanel();
        jLabel111 = new javax.swing.JLabel();
        jLabel112 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        jLabel114 = new javax.swing.JLabel();
        numberOfStudenttxt = new javax.swing.JTextField();
        jLabel115 = new javax.swing.JLabel();
        facultyStudentCombo = new javax.swing.JComboBox<>();
        jLabel116 = new javax.swing.JLabel();
        semesterStudentCombo = new javax.swing.JComboBox<>();
        facultyStudentlbl = new javax.swing.JLabel();
        semesterStudentlbl = new javax.swing.JLabel();
        numberOfStudentlbl = new javax.swing.JLabel();
        jLabel118 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        pnlmainViewStudent = new javax.swing.JPanel();
        SPstudent = new javax.swing.JScrollPane();
        pnlViewStudent = new javax.swing.JPanel();
        jPanel34 = new javax.swing.JPanel();
        jLabel113 = new javax.swing.JLabel();
        pnlUpdateStudent = new javax.swing.JPanel();
        jPanel35 = new javax.swing.JPanel();
        jPanel36 = new javax.swing.JPanel();
        jLabel117 = new javax.swing.JLabel();
        jLabel119 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        jLabel120 = new javax.swing.JLabel();
        numberOfStudentUpdatetxt = new javax.swing.JTextField();
        jLabel121 = new javax.swing.JLabel();
        facultyStudentUpdateCombo = new javax.swing.JComboBox<>();
        jLabel122 = new javax.swing.JLabel();
        semesterStudentUpdateCombo = new javax.swing.JComboBox<>();
        facultyStudentUpdatelbl = new javax.swing.JLabel();
        semesterStudentUpdatelbl = new javax.swing.JLabel();
        numberOfStudentUpdatelbl = new javax.swing.JLabel();
        jLabel123 = new javax.swing.JLabel();
        jLabel124 = new javax.swing.JLabel();
        jButton17 = new javax.swing.JButton();
        jLabel125 = new javax.swing.JLabel();
        pnlDisplaySchedule = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        schedulePnl = new javax.swing.JPanel();
        jPanel38 = new javax.swing.JPanel();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jLabel130 = new javax.swing.JLabel();
        jButton19 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        pnlAddTimeslot = new javax.swing.JPanel();
        jPanel39 = new javax.swing.JPanel();
        jPanel40 = new javax.swing.JPanel();
        jLabel131 = new javax.swing.JLabel();
        jLabel132 = new javax.swing.JLabel();
        jLabel133 = new javax.swing.JLabel();
        jButton18 = new javax.swing.JButton();
        jPanel41 = new javax.swing.JPanel();
        FacultyDesclbl3 = new javax.swing.JLabel();
        lbltime = new javax.swing.JLabel();
        lblday = new javax.swing.JLabel();
        starttime = new lu.tudor.santec.jtimechooser.JTimeChooser();
        endtime = new lu.tudor.santec.jtimechooser.JTimeChooser();
        jLabel134 = new javax.swing.JLabel();
        jLabel135 = new javax.swing.JLabel();
        txtday = new javax.swing.JTextField();
        pnlmainViewSchedule = new javax.swing.JPanel();
        jPanel42 = new javax.swing.JPanel();
        jLabel136 = new javax.swing.JLabel();
        SPschedule = new javax.swing.JScrollPane();
        schedulePnl1 = new javax.swing.JPanel();
        pnlUpdateAnalysisParameter = new javax.swing.JPanel();
        jPanel44 = new javax.swing.JPanel();
        mr1 = new javax.swing.JTextField();
        ps2 = new javax.swing.JTextField();
        ps3 = new javax.swing.JTextField();
        ps4 = new javax.swing.JTextField();
        cr4 = new javax.swing.JTextField();
        cr3 = new javax.swing.JTextField();
        cr2 = new javax.swing.JTextField();
        cr1 = new javax.swing.JTextField();
        mr4 = new javax.swing.JTextField();
        mr3 = new javax.swing.JTextField();
        mr2 = new javax.swing.JTextField();
        ps1 = new javax.swing.JTextField();
        jLabel139 = new javax.swing.JLabel();
        jLabel140 = new javax.swing.JLabel();
        jLabel141 = new javax.swing.JLabel();
        jButton21 = new javax.swing.JButton();
        lblps = new javax.swing.JLabel();
        lblcr = new javax.swing.JLabel();
        lblmr = new javax.swing.JLabel();
        lblmr1 = new javax.swing.JLabel();
        jLabel142 = new javax.swing.JLabel();
        jLabel143 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cube UI");
        setUndecorated(true);
        setSize(new java.awt.Dimension(1000, 600));

        pnlHeader.setBackground(new java.awt.Color(255, 255, 255));
        pnlHeader.setForeground(new java.awt.Color(255, 255, 255));
        pnlHeader.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pnlHeaderMouseDragged(evt);
            }
        });
        pnlHeader.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlHeaderMousePressed(evt);
            }
        });

        btnExit.setBackground(new java.awt.Color(255, 255, 255));
        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/Exit.png"))); // NOI18N
        btnExit.setContentAreaFilled(false);
        btnExit.setFocusable(false);
        btnExit.setOpaque(true);
        btnExit.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/Exit (2).png"))); // NOI18N
        btnExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnExitMouseExited(evt);
            }
        });
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnMaximize.setBackground(new java.awt.Color(255, 255, 255));
        btnMaximize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/Maximize.png"))); // NOI18N
        btnMaximize.setContentAreaFilled(false);
        btnMaximize.setFocusable(false);
        btnMaximize.setOpaque(true);
        btnMaximize.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/Maximize (2).png"))); // NOI18N
        btnMaximize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnMaximizeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnMaximizeMouseExited(evt);
            }
        });
        btnMaximize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMaximizeActionPerformed(evt);
            }
        });

        btnMinimize.setBackground(new java.awt.Color(255, 255, 255));
        btnMinimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/Minimize.png"))); // NOI18N
        btnMinimize.setContentAreaFilled(false);
        btnMinimize.setFocusable(false);
        btnMinimize.setOpaque(true);
        btnMinimize.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/Minimize (2).png"))); // NOI18N
        btnMinimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnMinimizeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnMinimizeMouseExited(evt);
            }
        });
        btnMinimize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinimizeActionPerformed(evt);
            }
        });

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/smallLogo.png"))); // NOI18N
        jLabel19.setText("Time-Table");

        javax.swing.GroupLayout pnlHeaderLayout = new javax.swing.GroupLayout(pnlHeader);
        pnlHeader.setLayout(pnlHeaderLayout);
        pnlHeaderLayout.setHorizontalGroup(
            pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHeaderLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnMinimize, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnMaximize, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnExit))
        );
        pnlHeaderLayout.setVerticalGroup(
            pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnMaximize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnMinimize, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlHeaderLayout.createSequentialGroup()
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
        );

        pnlMenu.setBackground(new java.awt.Color(255, 255, 255));

        btnSchedule.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 16)); // NOI18N
        btnSchedule.setForeground(new java.awt.Color(44, 62, 80));
        btnSchedule.setText("SCHEDULE");
        btnSchedule.setContentAreaFilled(false);
        btnSchedule.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSchedule.setFocusable(false);
        btnSchedule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnScheduleActionPerformed(evt);
            }
        });

        lblTimeline.setBackground(new java.awt.Color(0, 204, 106));
        lblTimeline.setOpaque(true);

        btnProffessor.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 16)); // NOI18N
        btnProffessor.setForeground(new java.awt.Color(44, 62, 80));
        btnProffessor.setText("PROFESSOR");
        btnProffessor.setContentAreaFilled(false);
        btnProffessor.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnProffessor.setFocusable(false);
        btnProffessor.setPreferredSize(new java.awt.Dimension(100, 27));
        btnProffessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProffessorActionPerformed(evt);
            }
        });

        lblNews.setBackground(new java.awt.Color(255, 255, 255));
        lblNews.setOpaque(true);

        btnFaculty.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 16)); // NOI18N
        btnFaculty.setForeground(new java.awt.Color(44, 62, 80));
        btnFaculty.setText("FACULTY");
        btnFaculty.setContentAreaFilled(false);
        btnFaculty.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnFaculty.setFocusable(false);
        btnFaculty.setPreferredSize(new java.awt.Dimension(100, 27));
        btnFaculty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFacultyActionPerformed(evt);
            }
        });

        lblTrending.setBackground(new java.awt.Color(255, 255, 255));
        lblTrending.setOpaque(true);
        lblTrending.setPreferredSize(new java.awt.Dimension(100, 0));

        btnClass.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 16)); // NOI18N
        btnClass.setForeground(new java.awt.Color(44, 62, 80));
        btnClass.setText("CLASS");
        btnClass.setContentAreaFilled(false);
        btnClass.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClass.setFocusable(false);
        btnClass.setPreferredSize(new java.awt.Dimension(100, 27));
        btnClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClassActionPerformed(evt);
            }
        });

        lblQA.setBackground(new java.awt.Color(255, 255, 255));
        lblQA.setOpaque(true);
        lblQA.setPreferredSize(new java.awt.Dimension(100, 0));

        jPanel6.setBackground(new java.awt.Color(0, 204, 204));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/logo.png"))); // NOI18N

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("You are login as Admin, ");

        logoutlbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        logoutlbl.setForeground(new java.awt.Color(51, 51, 51));
        logoutlbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        logoutlbl.setText("Logout ?");
        logoutlbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logoutlbl.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                logoutlblFocusGained(evt);
            }
        });
        logoutlbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutlblMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logoutlblMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logoutlblMouseExited(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Elephant", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Time-Table Generation System");

        welcomelbl.setForeground(new java.awt.Color(255, 255, 255));
        welcomelbl.setText("Welcome Username");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel1)
                .addGap(49, 49, 49)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 649, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(welcomelbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(37, 37, 37)
                .addComponent(logoutlbl)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(logoutlbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(welcomelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlMenuLayout = new javax.swing.GroupLayout(pnlMenu);
        pnlMenu.setLayout(pnlMenuLayout);
        pnlMenuLayout.setHorizontalGroup(
            pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenuLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblTimeline, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSchedule, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(60, 60, 60)
                .addGroup(pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNews, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnProffessor, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMenuLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(lblTrending, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMenuLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFaculty, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)))
                .addGroup(pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblQA, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlMenuLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnClass, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlMenuLayout.setVerticalGroup(
            pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenuLayout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(31, 31, 31)
                .addGroup(pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMenuLayout.createSequentialGroup()
                        .addGroup(pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSchedule)
                            .addComponent(btnProffessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblTimeline, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNews, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblTrending, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMenuLayout.createSequentialGroup()
                        .addGroup(pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnFaculty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addComponent(lblQA, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        pnlBody.setLayout(new java.awt.CardLayout());

        jspSchedule.setBorder(null);
        jspSchedule.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        pnlSchedule.setBackground(new java.awt.Color(242, 242, 242));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(0, 204, 106));
        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Generate Schedule");
        jLabel6.setOpaque(true);

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/file-viewer.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
        });

        jLabel7.setBackground(new java.awt.Color(52, 152, 219));
        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Add Student Group");
        jLabel7.setOpaque(true);

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/note.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel3MouseClicked(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(243, 156, 18));
        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("View and Manage Student Group");
        jLabel8.setOpaque(true);

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/settings.png"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel4MouseClicked(evt);
            }
        });

        jLabel9.setBackground(new java.awt.Color(149, 165, 166));
        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Add Timeslot");
        jLabel9.setOpaque(true);

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/browser.png"))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel5MouseClicked(evt);
            }
        });
        jPanel5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel5KeyPressed(evt);
            }
        });

        jLabel10.setBackground(new java.awt.Color(149, 165, 166));
        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Update Analysis Parameters");
        jLabel10.setOpaque(true);

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/bar-chart.png"))); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel43.setBackground(new java.awt.Color(255, 255, 255));
        jPanel43.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel43.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel43MouseClicked(evt);
            }
        });

        jLabel137.setBackground(new java.awt.Color(0, 204, 204));
        jLabel137.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel137.setForeground(new java.awt.Color(255, 255, 255));
        jLabel137.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel137.setText("View and Manage Schedule");
        jLabel137.setOpaque(true);

        jLabel138.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel138.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/bar-chart.png"))); // NOI18N

        javax.swing.GroupLayout jPanel43Layout = new javax.swing.GroupLayout(jPanel43);
        jPanel43.setLayout(jPanel43Layout);
        jPanel43Layout.setHorizontalGroup(
            jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel137, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
            .addGroup(jPanel43Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel138, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel43Layout.setVerticalGroup(
            jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel43Layout.createSequentialGroup()
                .addComponent(jLabel137, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel138, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlScheduleLayout = new javax.swing.GroupLayout(pnlSchedule);
        pnlSchedule.setLayout(pnlScheduleLayout);
        pnlScheduleLayout.setHorizontalGroup(
            pnlScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlScheduleLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(pnlScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(pnlScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlScheduleLayout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlScheduleLayout.createSequentialGroup()
                        .addComponent(jPanel43, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlScheduleLayout.setVerticalGroup(
            pnlScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlScheduleLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(pnlScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel43, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnlScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlScheduleLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlScheduleLayout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addGroup(pnlScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(574, Short.MAX_VALUE))
        );

        jspSchedule.setViewportView(pnlSchedule);

        pnlBody.add(jspSchedule, "card2");

        pnlProffesor.setBackground(new java.awt.Color(242, 242, 242));

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));
        jPanel16.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel16MouseClicked(evt);
            }
        });

        jLabel40.setBackground(new java.awt.Color(52, 152, 219));
        jLabel40.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(255, 255, 255));
        jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel40.setText("View And Manage Professor");
        jLabel40.setOpaque(true);

        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel41.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/note.png"))); // NOI18N

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel41, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel41, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel17.setBackground(new java.awt.Color(255, 255, 255));
        jPanel17.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel17MouseClicked(evt);
            }
        });

        jLabel42.setBackground(new java.awt.Color(0, 204, 106));
        jLabel42.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(255, 255, 255));
        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel42.setText("Add Professor");
        jLabel42.setOpaque(true);

        jLabel43.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel43.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/file-viewer.png"))); // NOI18N

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel42, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlProffesorLayout = new javax.swing.GroupLayout(pnlProffesor);
        pnlProffesor.setLayout(pnlProffesorLayout);
        pnlProffesorLayout.setHorizontalGroup(
            pnlProffesorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProffesorLayout.createSequentialGroup()
                .addGap(196, 196, 196)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(1144, Short.MAX_VALUE))
        );
        pnlProffesorLayout.setVerticalGroup(
            pnlProffesorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProffesorLayout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addGroup(pnlProffesorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(782, Short.MAX_VALUE))
        );

        pnlBody.add(pnlProffesor, "card4");

        pnlFaculty.setBackground(new java.awt.Color(242, 242, 242));
        pnlFaculty.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlFacultyMouseClicked(evt);
            }
        });

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel7MouseClicked(evt);
            }
        });
        jPanel7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel7KeyPressed(evt);
            }
        });

        jLabel17.setBackground(new java.awt.Color(0, 204, 106));
        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("View And Manage Faculty and Subject");
        jLabel17.setOpaque(true);

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/file-viewer.png"))); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel8MouseClicked(evt);
            }
        });

        jLabel21.setBackground(new java.awt.Color(0, 204, 106));
        jLabel21.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Add Subject");
        jLabel21.setOpaque(true);

        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/file-viewer.png"))); // NOI18N

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel9MouseClicked(evt);
            }
        });

        jLabel23.setBackground(new java.awt.Color(0, 204, 106));
        jLabel23.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Add Faculty");
        jLabel23.setOpaque(true);

        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/file-viewer.png"))); // NOI18N

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlFacultyLayout = new javax.swing.GroupLayout(pnlFaculty);
        pnlFaculty.setLayout(pnlFacultyLayout);
        pnlFacultyLayout.setHorizontalGroup(
            pnlFacultyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFacultyLayout.createSequentialGroup()
                .addContainerGap(323, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(259, 259, 259)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(203, 203, 203)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(384, 384, 384))
        );
        pnlFacultyLayout.setVerticalGroup(
            pnlFacultyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFacultyLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(pnlFacultyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(888, Short.MAX_VALUE))
        );

        pnlBody.add(pnlFaculty, "card4");

        pnlClass.setBackground(new java.awt.Color(242, 242, 242));

        jPanel20.setBackground(new java.awt.Color(255, 255, 255));
        jPanel20.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel20MouseClicked(evt);
            }
        });
        jPanel20.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel20KeyPressed(evt);
            }
        });

        jLabel53.setBackground(new java.awt.Color(0, 204, 106));
        jLabel53.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel53.setForeground(new java.awt.Color(255, 255, 255));
        jLabel53.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel53.setText("Add Class");
        jLabel53.setOpaque(true);

        jLabel54.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel54.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/file-viewer.png"))); // NOI18N

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel53, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        jPanel21.setBackground(new java.awt.Color(255, 255, 255));
        jPanel21.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel21MouseClicked(evt);
            }
        });
        jPanel21.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel21KeyPressed(evt);
            }
        });

        jLabel55.setBackground(new java.awt.Color(0, 204, 106));
        jLabel55.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel55.setForeground(new java.awt.Color(255, 255, 255));
        jLabel55.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel55.setText("View And Manage Class");
        jLabel55.setOpaque(true);

        jLabel56.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel56.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/file-viewer.png"))); // NOI18N

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel55, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlClassLayout = new javax.swing.GroupLayout(pnlClass);
        pnlClass.setLayout(pnlClassLayout);
        pnlClassLayout.setHorizontalGroup(
            pnlClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClassLayout.createSequentialGroup()
                .addGap(456, 456, 456)
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(248, 248, 248)
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(715, Short.MAX_VALUE))
        );
        pnlClassLayout.setVerticalGroup(
            pnlClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClassLayout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addGroup(pnlClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(789, Short.MAX_VALUE))
        );

        pnlBody.add(pnlClass, "card5");

        pnlAddFaculty.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/back.png"))); // NOI18N
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        jPanel11.setBackground(new java.awt.Color(204, 204, 204));

        jPanel12.setBackground(new java.awt.Color(0, 204, 204));
        jPanel12.setFocusTraversalPolicyProvider(true);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/course.png"))); // NOI18N

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel27.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(102, 102, 102));
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("ADD FACULTY");

        facultyNametxt.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        facultyNametxt.setForeground(new java.awt.Color(51, 51, 51));
        facultyNametxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        facultyNametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facultyNametxtActionPerformed(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(51, 51, 51));
        jLabel28.setText("Faculty Name");

        jButton1.setBackground(new java.awt.Color(0, 204, 204));
        jButton1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("SAVE");
        jButton1.setBorder(null);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(51, 51, 51));
        jLabel29.setText("Faculty Description");

        facultyDesctxtarea.setColumns(20);
        facultyDesctxtarea.setRows(5);
        jScrollPane1.setViewportView(facultyDesctxtarea);

        jPanel13.setBackground(new java.awt.Color(204, 204, 204));

        facultyNamelbl.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        facultyNamelbl.setForeground(new java.awt.Color(255, 0, 51));
        facultyNamelbl.setText("*Enter Faculty name");

        FacultyDesclbl.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        FacultyDesclbl.setForeground(new java.awt.Color(255, 0, 51));
        FacultyDesclbl.setText("*Enter Faculty Description");

        FacultyDesclbl1.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        FacultyDesclbl1.setForeground(new java.awt.Color(204, 204, 204));
        FacultyDesclbl1.setText("*Enter Faculty Description fsdfj;sdfkj;saldfk");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(facultyNamelbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addComponent(FacultyDesclbl, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(FacultyDesclbl1, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(facultyNamelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(FacultyDesclbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FacultyDesclbl, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(facultyNametxt, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                                .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel28, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(55, 55, 55)
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(131, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(jLabel28)
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(facultyNametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74)
                        .addComponent(jLabel29)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout pnlAddFacultyLayout = new javax.swing.GroupLayout(pnlAddFaculty);
        pnlAddFaculty.setLayout(pnlAddFacultyLayout);
        pnlAddFacultyLayout.setHorizontalGroup(
            pnlAddFacultyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddFacultyLayout.createSequentialGroup()
                .addGroup(pnlAddFacultyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAddFacultyLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel2))
                    .addGroup(pnlAddFacultyLayout.createSequentialGroup()
                        .addGap(324, 324, 324)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(439, Short.MAX_VALUE))
        );
        pnlAddFacultyLayout.setVerticalGroup(
            pnlAddFacultyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddFacultyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(477, Short.MAX_VALUE))
        );

        pnlBody.add(pnlAddFaculty, "card6");

        pnlAddSubject.setBackground(new java.awt.Color(255, 255, 255));

        jPanel14.setBackground(new java.awt.Color(204, 204, 204));

        jPanel15.setBackground(new java.awt.Color(0, 204, 204));
        jPanel15.setFocusTraversalPolicyProvider(true);

        jLabel31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/subject.png"))); // NOI18N

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(jLabel31)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel32.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(102, 102, 102));
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel32.setText("ADD SUBJECT");

        subjectNametxt.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        subjectNametxt.setForeground(new java.awt.Color(51, 51, 51));
        subjectNametxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        subjectNametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectNametxtActionPerformed(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(51, 51, 51));
        jLabel33.setText("Subject Name");

        jButton2.setBackground(new java.awt.Color(0, 204, 204));
        jButton2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("SAVE");
        jButton2.setBorder(null);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(51, 51, 51));
        jLabel34.setText("Subject Code");

        subjectCodetxt.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        subjectCodetxt.setForeground(new java.awt.Color(51, 51, 51));
        subjectCodetxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        subjectCodetxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectCodetxtActionPerformed(evt);
            }
        });

        jLabel36.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(51, 51, 51));
        jLabel36.setText("Faculty");

        jLabel37.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(51, 51, 51));
        jLabel37.setText("Semester");

        subjectSemesterCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Sem I", "Sem II", "Sem III", "Sem IV", "Sem V", "Sem VI", "Sem VII", "Sem VIII" }));

        jLabel38.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(51, 51, 51));
        jLabel38.setText("Proffesor");

        subjectCodelbl.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        subjectCodelbl.setForeground(new java.awt.Color(255, 0, 51));
        subjectCodelbl.setText("*Enter Subject Code");

        SubjectNamelbl.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        SubjectNamelbl.setForeground(new java.awt.Color(255, 0, 51));
        SubjectNamelbl.setText("*Enter Subject name");

        subjectFacultylbl.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        subjectFacultylbl.setForeground(new java.awt.Color(255, 0, 51));
        subjectFacultylbl.setText("* Select Faculty");

        subjectSemesterlbl.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        subjectSemesterlbl.setForeground(new java.awt.Color(255, 0, 51));
        subjectSemesterlbl.setText("* Select Semester");

        subjectProffesorlbl.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        subjectProffesorlbl.setForeground(new java.awt.Color(255, 0, 51));
        subjectProffesorlbl.setText("* Select Proffesor");

        jLabel39.setForeground(new java.awt.Color(204, 204, 204));
        jLabel39.setText("*Enter Subject anme Namejjsd");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(subjectNametxt)
                            .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                            .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(subjectCodetxt)
                            .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(subjectFaultyCombo, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(subjectSemesterCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(profScrollPane))
                        .addGap(46, 46, 46)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(subjectSemesterlbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(subjectFacultylbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(subjectCodelbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SubjectNamelbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel39, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(subjectProffesorlbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(374, 374, 374))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subjectNametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SubjectNamelbl))
                .addGap(18, 18, 18)
                .addComponent(jLabel34)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subjectCodetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subjectCodelbl))
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(jLabel39))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(subjectFaultyCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subjectFacultylbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel37)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subjectSemesterCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subjectSemesterlbl))
                .addGap(18, 18, 18)
                .addComponent(jLabel38)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(subjectProffesorlbl)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(profScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jLabel35.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/back.png"))); // NOI18N
        jLabel35.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel35MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlAddSubjectLayout = new javax.swing.GroupLayout(pnlAddSubject);
        pnlAddSubject.setLayout(pnlAddSubjectLayout);
        pnlAddSubjectLayout.setHorizontalGroup(
            pnlAddSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddSubjectLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel35)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAddSubjectLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(356, 356, 356))
        );
        pnlAddSubjectLayout.setVerticalGroup(
            pnlAddSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddSubjectLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel35)
                .addGap(29, 29, 29)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(432, Short.MAX_VALUE))
        );

        pnlBody.add(pnlAddSubject, "card8");

        pnlAddProffesor.setBackground(new java.awt.Color(255, 255, 255));

        jPanel18.setBackground(new java.awt.Color(204, 204, 204));

        jLabel44.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(255, 255, 255));
        jLabel44.setText("First Name");

        jLabel45.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(255, 255, 255));
        jLabel45.setText("Last Name");

        jLabel46.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(255, 255, 255));
        jLabel46.setText("Password");

        jLabel47.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(255, 255, 255));
        jLabel47.setText("Username");

        jLabel48.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(255, 255, 255));
        jLabel48.setText("Confirm Password");

        jLabel49.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(255, 255, 255));
        jLabel49.setText("Phone");

        jLabel50.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel50.setForeground(new java.awt.Color(255, 255, 255));
        jLabel50.setText("Email");

        professorFnametxt.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        professorFnametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                professorFnametxtActionPerformed(evt);
            }
        });

        professorLnametxt.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        professorUnametxt.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        professorUnametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                professorUnametxtActionPerformed(evt);
            }
        });

        professorPhonetxt.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        professorEmailtxt.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        professorPasswordtxt.setMinimumSize(new java.awt.Dimension(6, 28));
        professorPasswordtxt.setPreferredSize(new java.awt.Dimension(126, 28));

        professorCpasswordtxt.setMinimumSize(new java.awt.Dimension(6, 28));
        professorCpasswordtxt.setPreferredSize(new java.awt.Dimension(126, 28));

        professorFnamelbl.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        professorFnamelbl.setForeground(new java.awt.Color(204, 0, 0));
        professorFnamelbl.setText("jLabel5");

        professorLnamelbl.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        professorLnamelbl.setForeground(new java.awt.Color(204, 0, 0));
        professorLnamelbl.setText("jLabel5");

        professorUnamelbl.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        professorUnamelbl.setForeground(new java.awt.Color(204, 0, 0));
        professorUnamelbl.setText("jLabel5");

        professorPasswordlbl.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        professorPasswordlbl.setForeground(new java.awt.Color(204, 0, 0));
        professorPasswordlbl.setText("jLabel5");

        professorCpasswordlbl.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        professorCpasswordlbl.setForeground(new java.awt.Color(204, 0, 0));
        professorCpasswordlbl.setText("jLabel5");

        professorPhonelbl.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        professorPhonelbl.setForeground(new java.awt.Color(204, 0, 0));
        professorPhonelbl.setText("jLabel5");

        professorEmaillbl.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        professorEmaillbl.setForeground(new java.awt.Color(204, 0, 0));
        professorEmaillbl.setText("jLabel5");

        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("CREATE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel19.setBackground(new java.awt.Color(0, 204, 204));
        jPanel19.setFocusTraversalPolicyProvider(true);

        jLabel51.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/professor.png"))); // NOI18N

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel51, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(jLabel51)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        phonelbl1.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        phonelbl1.setForeground(new java.awt.Color(204, 204, 204));
        phonelbl1.setText("csc sdn sdf osdf i  dsfnoisdjf sdf");

        jLabel18.setBackground(new java.awt.Color(204, 204, 204));
        jLabel18.setForeground(new java.awt.Color(204, 204, 204));
        jLabel18.setText("dxcvzvzskjfhdkhfkdhfkdhfdhldskfhsdl");

        jLabel60.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        jLabel60.setForeground(new java.awt.Color(102, 102, 102));
        jLabel60.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel60.setText("ADD PROFESSOR");

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(274, 274, 274)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(professorFnametxt)
                                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jButton3)
                                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(professorPasswordtxt, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
                                            .addComponent(professorCpasswordtxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(professorPhonetxt)
                                            .addComponent(professorEmailtxt)
                                            .addComponent(professorUnametxt, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(professorLnametxt)))))
                            .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(phonelbl1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel18Layout.createSequentialGroup()
                                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(professorLnamelbl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                                        .addComponent(professorCpasswordlbl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(professorUnamelbl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(professorPasswordlbl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(professorFnamelbl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(professorPhonelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(professorEmaillbl, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)))
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(professorFnametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(professorFnamelbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(professorLnametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(professorLnamelbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(professorUnametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(professorUnamelbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(professorPasswordtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(professorPasswordlbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(professorCpasswordtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(professorCpasswordlbl)))
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(phonelbl1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(professorPhonetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(professorPhonelbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(professorEmailtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(professorEmaillbl))
                .addGap(21, 21, 21)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel52.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/back.png"))); // NOI18N
        jLabel52.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel52MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlAddProffesorLayout = new javax.swing.GroupLayout(pnlAddProffesor);
        pnlAddProffesor.setLayout(pnlAddProffesorLayout);
        pnlAddProffesorLayout.setHorizontalGroup(
            pnlAddProffesorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddProffesorLayout.createSequentialGroup()
                .addGroup(pnlAddProffesorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAddProffesorLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel52))
                    .addGroup(pnlAddProffesorLayout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(557, Short.MAX_VALUE))
        );
        pnlAddProffesorLayout.setVerticalGroup(
            pnlAddProffesorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAddProffesorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel52)
                .addGap(41, 41, 41)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(413, Short.MAX_VALUE))
        );

        pnlBody.add(pnlAddProffesor, "card9");

        pnlAddClass.setBackground(new java.awt.Color(255, 255, 255));

        formPnl.setBackground(new java.awt.Color(204, 204, 204));

        classCapacitytxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        classNumbertxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        classNumbertxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classNumbertxtActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Class Number :");

        classFloortxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel57.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel57.setText("Floor of Class  :");

        jLabel58.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel58.setText("Class Capacity :");

        jButton4.setBackground(new java.awt.Color(0, 255, 255));
        jButton4.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Register");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jPanel22.setBackground(new java.awt.Color(0, 204, 204));
        jPanel22.setFocusTraversalPolicyProvider(true);

        jLabel59.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/classroomFinal.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel59, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(jLabel59)
                .addContainerGap(255, Short.MAX_VALUE))
        );

        jLabel61.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        jLabel61.setForeground(new java.awt.Color(102, 102, 102));
        jLabel61.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel61.setText("ADD CLASS");

        classNumberlbl.setForeground(new java.awt.Color(241, 41, 41));
        classNumberlbl.setText("jLabel62");

        classFloorlbl.setForeground(new java.awt.Color(241, 41, 41));
        classFloorlbl.setText("jLabel63");

        classCapacitylbl.setForeground(new java.awt.Color(241, 41, 41));
        classCapacitylbl.setText("jLabel64");

        jLabel62.setForeground(new java.awt.Color(204, 204, 204));
        jLabel62.setText("jLabel62sldsa sdk d sdsds akskdnslkdjsd");

        javax.swing.GroupLayout formPnlLayout = new javax.swing.GroupLayout(formPnl);
        formPnl.setLayout(formPnlLayout);
        formPnlLayout.setHorizontalGroup(
            formPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formPnlLayout.createSequentialGroup()
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(formPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(formPnlLayout.createSequentialGroup()
                        .addGap(184, 184, 184)
                        .addComponent(jLabel61, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(formPnlLayout.createSequentialGroup()
                        .addGap(221, 221, 221)
                        .addGroup(formPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(formPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(classFloortxt, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
                                .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(classCapacitytxt)
                                .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(classNumbertxt)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(formPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(classNumberlbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(classFloorlbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(classCapacitylbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel62, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)))))
        );
        formPnlLayout.setVerticalGroup(
            formPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel61, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(110, 110, 110)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(classNumbertxt, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(classNumberlbl))
                .addGap(11, 11, 11)
                .addComponent(jLabel57)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(classFloortxt, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(classFloorlbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(formPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel58, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel62))
                .addGap(2, 2, 2)
                .addGroup(formPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(classCapacitytxt, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(classCapacitylbl))
                .addGap(60, 60, 60)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(355, 355, 355))
            .addGroup(formPnlLayout.createSequentialGroup()
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabel63.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/back.png"))); // NOI18N
        jLabel63.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel63MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlAddClassLayout = new javax.swing.GroupLayout(pnlAddClass);
        pnlAddClass.setLayout(pnlAddClassLayout);
        pnlAddClassLayout.setHorizontalGroup(
            pnlAddClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddClassLayout.createSequentialGroup()
                .addGroup(pnlAddClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAddClassLayout.createSequentialGroup()
                        .addGap(368, 368, 368)
                        .addComponent(formPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlAddClassLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel63)))
                .addContainerGap(368, Short.MAX_VALUE))
        );
        pnlAddClassLayout.setVerticalGroup(
            pnlAddClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddClassLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel63)
                .addGap(40, 40, 40)
                .addComponent(formPnl, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(471, Short.MAX_VALUE))
        );

        pnlBody.add(pnlAddClass, "card10");

        pnlmainViewClass.setBackground(new java.awt.Color(255, 255, 255));

        jPanel27.setBackground(new java.awt.Color(255, 255, 255));

        jLabel64.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/back.png"))); // NOI18N
        jLabel64.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel64MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel64)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel64)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        SPclass.setBorder(null);
        SPclass.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        SPclass.setPreferredSize(new java.awt.Dimension(1500, 1200));

        pnlViewClass.setBackground(new java.awt.Color(255, 255, 255));
        pnlViewClass.setMaximumSize(new java.awt.Dimension(1500, 1200));
        pnlViewClass.setMinimumSize(new java.awt.Dimension(1500, 1200));
        pnlViewClass.setPreferredSize(new java.awt.Dimension(1500, 1200));

        javax.swing.GroupLayout pnlViewClassLayout = new javax.swing.GroupLayout(pnlViewClass);
        pnlViewClass.setLayout(pnlViewClassLayout);
        pnlViewClassLayout.setHorizontalGroup(
            pnlViewClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1898, Short.MAX_VALUE)
        );
        pnlViewClassLayout.setVerticalGroup(
            pnlViewClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
        );

        SPclass.setViewportView(pnlViewClass);

        javax.swing.GroupLayout pnlmainViewClassLayout = new javax.swing.GroupLayout(pnlmainViewClass);
        pnlmainViewClass.setLayout(pnlmainViewClassLayout);
        pnlmainViewClassLayout.setHorizontalGroup(
            pnlmainViewClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(SPclass, javax.swing.GroupLayout.DEFAULT_SIZE, 1919, Short.MAX_VALUE)
        );
        pnlmainViewClassLayout.setVerticalGroup(
            pnlmainViewClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlmainViewClassLayout.createSequentialGroup()
                .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SPclass, javax.swing.GroupLayout.PREFERRED_SIZE, 977, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(148, 148, 148))
        );

        pnlBody.add(pnlmainViewClass, "card11");

        pnlUpdateProfessor.setBackground(new java.awt.Color(255, 255, 255));

        jPanel23.setBackground(new java.awt.Color(204, 204, 204));

        jLabel65.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel65.setForeground(new java.awt.Color(255, 255, 255));
        jLabel65.setText("First Name");

        jLabel66.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel66.setForeground(new java.awt.Color(255, 255, 255));
        jLabel66.setText("Last Name");

        jLabel67.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel67.setForeground(new java.awt.Color(255, 255, 255));
        jLabel67.setText("Password");

        jLabel68.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel68.setForeground(new java.awt.Color(255, 255, 255));
        jLabel68.setText("Username");

        jLabel69.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel69.setForeground(new java.awt.Color(255, 255, 255));
        jLabel69.setText("Confirm Password");

        jLabel70.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel70.setForeground(new java.awt.Color(255, 255, 255));
        jLabel70.setText("Phone");

        jLabel71.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel71.setForeground(new java.awt.Color(255, 255, 255));
        jLabel71.setText("Email");

        professorFnametxt1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        professorFnametxt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                professorFnametxt1ActionPerformed(evt);
            }
        });

        professorLnametxt1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        professorUnametxt1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        professorUnametxt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                professorUnametxt1ActionPerformed(evt);
            }
        });

        professorPhonetxt1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        professorEmailtxt1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        professorPasswordtxt1.setMinimumSize(new java.awt.Dimension(6, 28));
        professorPasswordtxt1.setPreferredSize(new java.awt.Dimension(126, 28));

        professorCpasswordtxt1.setMinimumSize(new java.awt.Dimension(6, 28));
        professorCpasswordtxt1.setPreferredSize(new java.awt.Dimension(126, 28));

        professorFnamelbl1.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        professorFnamelbl1.setForeground(new java.awt.Color(204, 0, 0));
        professorFnamelbl1.setText("jLabel5");

        professorLnamelbl1.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        professorLnamelbl1.setForeground(new java.awt.Color(204, 0, 0));
        professorLnamelbl1.setText("jLabel5");

        professorUnamelbl1.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        professorUnamelbl1.setForeground(new java.awt.Color(204, 0, 0));
        professorUnamelbl1.setText("jLabel5");

        professorPasswordlbl1.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        professorPasswordlbl1.setForeground(new java.awt.Color(204, 0, 0));
        professorPasswordlbl1.setText("jLabel5");

        professorCpasswordlbl1.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        professorCpasswordlbl1.setForeground(new java.awt.Color(204, 0, 0));
        professorCpasswordlbl1.setText("jLabel5");

        professorPhonelbl1.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        professorPhonelbl1.setForeground(new java.awt.Color(204, 0, 0));
        professorPhonelbl1.setText("jLabel5");

        professorEmaillbl1.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        professorEmaillbl1.setForeground(new java.awt.Color(204, 0, 0));
        professorEmaillbl1.setText("jLabel5");

        jPanel24.setBackground(new java.awt.Color(0, 204, 204));
        jPanel24.setFocusTraversalPolicyProvider(true);

        jLabel72.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/professor.png"))); // NOI18N

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel72, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(jLabel72)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        phonelbl2.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        phonelbl2.setForeground(new java.awt.Color(204, 204, 204));
        phonelbl2.setText("csc sdn sdf osdf i  dsfnoisdjf sdf");

        jLabel73.setBackground(new java.awt.Color(204, 204, 204));
        jLabel73.setForeground(new java.awt.Color(204, 204, 204));
        jLabel73.setText("dxcvzvzskjfhdkhfkdhfkdhfdhldskfhsdl");

        jLabel74.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        jLabel74.setForeground(new java.awt.Color(102, 102, 102));
        jLabel74.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel74.setText("UPDATE PROFESSOR");

        jButton6.setBackground(new java.awt.Color(0, 204, 204));
        jButton6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("UPDATE");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(0, 204, 204));
        jButton7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("DELETE");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(274, 274, 274)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(professorFnametxt1)
                                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel71, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(professorPasswordtxt1, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
                                        .addComponent(professorCpasswordtxt1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(professorPhonetxt1)
                                        .addComponent(professorEmailtxt1)
                                        .addComponent(professorUnametxt1, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel68, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(professorLnametxt1))))
                            .addComponent(jLabel70, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel69, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(phonelbl2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel23Layout.createSequentialGroup()
                                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(professorLnamelbl1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                                        .addComponent(professorCpasswordlbl1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(professorUnamelbl1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(professorPasswordlbl1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(professorFnamelbl1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(professorPhonelbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(professorEmaillbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jLabel73, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)))
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel67, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel66, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel65, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel74, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton7))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                    .addContainerGap(860, Short.MAX_VALUE)
                    .addComponent(jButton6)
                    .addGap(241, 241, 241)))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel74, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel65, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(professorFnametxt1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(professorFnamelbl1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel66, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(professorLnametxt1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(professorLnamelbl1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel68, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(professorUnametxt1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(professorUnamelbl1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel67, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(professorPasswordtxt1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(professorPasswordlbl1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addComponent(jLabel69, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(professorCpasswordtxt1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(professorCpasswordlbl1)))
                    .addComponent(jLabel73))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel70, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(phonelbl2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(professorPhonetxt1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(professorPhonelbl1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel71, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(professorEmailtxt1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(professorEmaillbl1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
            .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                    .addContainerGap(629, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(23, 23, 23)))
        );

        jLabel75.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/back.png"))); // NOI18N
        jLabel75.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel75MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlUpdateProfessorLayout = new javax.swing.GroupLayout(pnlUpdateProfessor);
        pnlUpdateProfessor.setLayout(pnlUpdateProfessorLayout);
        pnlUpdateProfessorLayout.setHorizontalGroup(
            pnlUpdateProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUpdateProfessorLayout.createSequentialGroup()
                .addGroup(pnlUpdateProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlUpdateProfessorLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel75))
                    .addGroup(pnlUpdateProfessorLayout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(556, Short.MAX_VALUE))
        );
        pnlUpdateProfessorLayout.setVerticalGroup(
            pnlUpdateProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlUpdateProfessorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel75)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
        );

        pnlBody.add(pnlUpdateProfessor, "card13");

        javax.swing.GroupLayout pnlUpdateFacultyLayout = new javax.swing.GroupLayout(pnlUpdateFaculty);
        pnlUpdateFaculty.setLayout(pnlUpdateFacultyLayout);
        pnlUpdateFacultyLayout.setHorizontalGroup(
            pnlUpdateFacultyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1919, Short.MAX_VALUE)
        );
        pnlUpdateFacultyLayout.setVerticalGroup(
            pnlUpdateFacultyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1210, Short.MAX_VALUE)
        );

        pnlBody.add(pnlUpdateFaculty, "card14");

        pnlViewSemester.setBackground(new java.awt.Color(255, 255, 255));

        jPanel25.setBackground(new java.awt.Color(255, 255, 255));

        facName.setFont(new java.awt.Font("Engravers MT", 1, 36)); // NOI18N
        facName.setText("Faculty Name");

        facultyDescriptionviewsemlbl.setFont(new java.awt.Font("Tahoma", 2, 24)); // NOI18N

        jLabel77.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/back.png"))); // NOI18N
        jLabel77.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel77MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addGap(274, 274, 274)
                        .addComponent(facultyDescriptionviewsemlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 1279, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel77)
                        .addGap(744, 744, 744)
                        .addComponent(facName, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(366, Short.MAX_VALUE))
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(facName)
                    .addComponent(jLabel77))
                .addGap(18, 18, 18)
                .addComponent(facultyDescriptionviewsemlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        semIpnl.setBackground(new java.awt.Color(255, 255, 255));
        semIpnl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 102), 2));
        semIpnl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        semIpnl.setName("Sem I"); // NOI18N
        semIpnl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                semIpnlMouseClicked(evt);
            }
        });

        jLabel30.setBackground(new java.awt.Color(0, 204, 106));
        jLabel30.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setText("SEMESTER");
        jLabel30.setOpaque(true);

        jLabel76.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel76.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/one.png"))); // NOI18N

        javax.swing.GroupLayout semIpnlLayout = new javax.swing.GroupLayout(semIpnl);
        semIpnl.setLayout(semIpnlLayout);
        semIpnlLayout.setHorizontalGroup(
            semIpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(semIpnlLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel76, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );
        semIpnlLayout.setVerticalGroup(
            semIpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(semIpnlLayout.createSequentialGroup()
                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel76, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        semIIIpnl.setBackground(new java.awt.Color(255, 255, 255));
        semIIIpnl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 102), 2));
        semIIIpnl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        semIIIpnl.setName("Sem III"); // NOI18N
        semIIIpnl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                semIIIpnlMouseClicked(evt);
            }
        });

        jLabel81.setBackground(new java.awt.Color(0, 204, 106));
        jLabel81.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel81.setForeground(new java.awt.Color(255, 255, 255));
        jLabel81.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel81.setText("SEMESTER");
        jLabel81.setOpaque(true);

        jLabel82.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel82.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/three.png"))); // NOI18N

        javax.swing.GroupLayout semIIIpnlLayout = new javax.swing.GroupLayout(semIIIpnl);
        semIIIpnl.setLayout(semIIIpnlLayout);
        semIIIpnlLayout.setHorizontalGroup(
            semIIIpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel81, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(semIIIpnlLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel82, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );
        semIIIpnlLayout.setVerticalGroup(
            semIIIpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(semIIIpnlLayout.createSequentialGroup()
                .addComponent(jLabel81, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel82, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        semIIpnl.setBackground(new java.awt.Color(255, 255, 255));
        semIIpnl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 102), 2));
        semIIpnl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        semIIpnl.setName("Sem II"); // NOI18N
        semIIpnl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                semIIpnlMouseClicked(evt);
            }
        });

        jLabel83.setBackground(new java.awt.Color(0, 204, 106));
        jLabel83.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel83.setForeground(new java.awt.Color(255, 255, 255));
        jLabel83.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel83.setText("SEMESTER");
        jLabel83.setOpaque(true);

        jLabel84.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel84.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/two.png"))); // NOI18N

        javax.swing.GroupLayout semIIpnlLayout = new javax.swing.GroupLayout(semIIpnl);
        semIIpnl.setLayout(semIIpnlLayout);
        semIIpnlLayout.setHorizontalGroup(
            semIIpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel83, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(semIIpnlLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel84, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );
        semIIpnlLayout.setVerticalGroup(
            semIIpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(semIIpnlLayout.createSequentialGroup()
                .addComponent(jLabel83, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel84, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        semIVpnl.setBackground(new java.awt.Color(255, 255, 255));
        semIVpnl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 102), 2));
        semIVpnl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        semIVpnl.setName("Sem IV"); // NOI18N
        semIVpnl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                semIVpnlMouseClicked(evt);
            }
        });

        jLabel85.setBackground(new java.awt.Color(0, 204, 106));
        jLabel85.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel85.setForeground(new java.awt.Color(255, 255, 255));
        jLabel85.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel85.setText("SEMESTER");
        jLabel85.setOpaque(true);

        jLabel86.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel86.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/four.png"))); // NOI18N

        javax.swing.GroupLayout semIVpnlLayout = new javax.swing.GroupLayout(semIVpnl);
        semIVpnl.setLayout(semIVpnlLayout);
        semIVpnlLayout.setHorizontalGroup(
            semIVpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel85, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(semIVpnlLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel86, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );
        semIVpnlLayout.setVerticalGroup(
            semIVpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(semIVpnlLayout.createSequentialGroup()
                .addComponent(jLabel85, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel86, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        semVpnl.setBackground(new java.awt.Color(255, 255, 255));
        semVpnl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 102), 2));
        semVpnl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        semVpnl.setName("Sem V"); // NOI18N
        semVpnl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                semVpnlMouseClicked(evt);
            }
        });

        jLabel87.setBackground(new java.awt.Color(0, 204, 106));
        jLabel87.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel87.setForeground(new java.awt.Color(255, 255, 255));
        jLabel87.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel87.setText("SEMESTER");
        jLabel87.setOpaque(true);

        jLabel88.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel88.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/five.png"))); // NOI18N

        javax.swing.GroupLayout semVpnlLayout = new javax.swing.GroupLayout(semVpnl);
        semVpnl.setLayout(semVpnlLayout);
        semVpnlLayout.setHorizontalGroup(
            semVpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel87, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(semVpnlLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel88, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );
        semVpnlLayout.setVerticalGroup(
            semVpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(semVpnlLayout.createSequentialGroup()
                .addComponent(jLabel87, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel88, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        semVIIpnl.setBackground(new java.awt.Color(255, 255, 255));
        semVIIpnl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 102), 2));
        semVIIpnl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        semVIIpnl.setName("Sem VII"); // NOI18N
        semVIIpnl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                semVIIpnlMouseClicked(evt);
            }
        });

        jLabel89.setBackground(new java.awt.Color(0, 204, 106));
        jLabel89.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel89.setForeground(new java.awt.Color(255, 255, 255));
        jLabel89.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel89.setText("SEMESTER");
        jLabel89.setOpaque(true);

        jLabel90.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel90.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/seven.png"))); // NOI18N

        javax.swing.GroupLayout semVIIpnlLayout = new javax.swing.GroupLayout(semVIIpnl);
        semVIIpnl.setLayout(semVIIpnlLayout);
        semVIIpnlLayout.setHorizontalGroup(
            semVIIpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel89, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
            .addGroup(semVIIpnlLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel90, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        semVIIpnlLayout.setVerticalGroup(
            semVIIpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(semVIIpnlLayout.createSequentialGroup()
                .addComponent(jLabel89, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel90, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        semVIpnl.setBackground(new java.awt.Color(255, 255, 255));
        semVIpnl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 102), 2));
        semVIpnl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        semVIpnl.setName("Sem VI"); // NOI18N
        semVIpnl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                semVIpnlMouseClicked(evt);
            }
        });

        jLabel91.setBackground(new java.awt.Color(0, 204, 106));
        jLabel91.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel91.setForeground(new java.awt.Color(255, 255, 255));
        jLabel91.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel91.setText("SEMESTER");
        jLabel91.setOpaque(true);

        jLabel92.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel92.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/six.png"))); // NOI18N

        javax.swing.GroupLayout semVIpnlLayout = new javax.swing.GroupLayout(semVIpnl);
        semVIpnl.setLayout(semVIpnlLayout);
        semVIpnlLayout.setHorizontalGroup(
            semVIpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel91, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(semVIpnlLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel92, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );
        semVIpnlLayout.setVerticalGroup(
            semVIpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(semVIpnlLayout.createSequentialGroup()
                .addComponent(jLabel91, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel92, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        semVIIIpnl.setBackground(new java.awt.Color(255, 255, 255));
        semVIIIpnl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 102), 2));
        semVIIIpnl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        semVIIIpnl.setName("Sem VIII"); // NOI18N
        semVIIIpnl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                semVIIIpnlMouseClicked(evt);
            }
        });

        jLabel93.setBackground(new java.awt.Color(0, 204, 106));
        jLabel93.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel93.setForeground(new java.awt.Color(255, 255, 255));
        jLabel93.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel93.setText("SEMESTER");
        jLabel93.setOpaque(true);

        jLabel94.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel94.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/eight.png"))); // NOI18N

        javax.swing.GroupLayout semVIIIpnlLayout = new javax.swing.GroupLayout(semVIIIpnl);
        semVIIIpnl.setLayout(semVIIIpnlLayout);
        semVIIIpnlLayout.setHorizontalGroup(
            semVIIIpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel93, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
            .addGroup(semVIIIpnlLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel94)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        semVIIIpnlLayout.setVerticalGroup(
            semVIIIpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(semVIIIpnlLayout.createSequentialGroup()
                .addComponent(jLabel93, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel94, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlViewSemesterLayout = new javax.swing.GroupLayout(pnlViewSemester);
        pnlViewSemester.setLayout(pnlViewSemesterLayout);
        pnlViewSemesterLayout.setHorizontalGroup(
            pnlViewSemesterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlViewSemesterLayout.createSequentialGroup()
                .addGap(151, 151, 151)
                .addGroup(pnlViewSemesterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlViewSemesterLayout.createSequentialGroup()
                        .addComponent(semVpnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(semVIpnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlViewSemesterLayout.createSequentialGroup()
                        .addComponent(semIpnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(197, 197, 197)
                        .addComponent(semIIpnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlViewSemesterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(semIIIpnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(semVIIpnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(182, 182, 182)
                .addGroup(pnlViewSemesterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(semIVpnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(semVIIIpnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlViewSemesterLayout.setVerticalGroup(
            pnlViewSemesterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlViewSemesterLayout.createSequentialGroup()
                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlViewSemesterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(semIIpnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(semIpnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(semIIIpnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(semIVpnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 409, Short.MAX_VALUE)
                .addGroup(pnlViewSemesterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlViewSemesterLayout.createSequentialGroup()
                        .addComponent(semVpnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88))
                    .addGroup(pnlViewSemesterLayout.createSequentialGroup()
                        .addGroup(pnlViewSemesterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(semVIpnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(semVIIpnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(semVIIIpnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );

        pnlBody.add(pnlViewSemester, "card15");

        pnlUpdateSubject.setBackground(new java.awt.Color(255, 255, 255));

        jPanel30.setBackground(new java.awt.Color(204, 204, 204));

        jPanel31.setBackground(new java.awt.Color(0, 204, 204));
        jPanel31.setFocusTraversalPolicyProvider(true);

        jLabel96.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/subject.png"))); // NOI18N

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel96, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(jLabel96)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel97.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        jLabel97.setForeground(new java.awt.Color(102, 102, 102));
        jLabel97.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel97.setText("UPDATE SUBJECT");

        subjectNametxt1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        subjectNametxt1.setForeground(new java.awt.Color(51, 51, 51));
        subjectNametxt1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        subjectNametxt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectNametxt1ActionPerformed(evt);
            }
        });

        jLabel98.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel98.setForeground(new java.awt.Color(51, 51, 51));
        jLabel98.setText("Subject Name");

        jButton5.setBackground(new java.awt.Color(0, 204, 204));
        jButton5.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("UPDATE");
        jButton5.setBorder(null);
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel99.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel99.setForeground(new java.awt.Color(51, 51, 51));
        jLabel99.setText("Subject Code");

        subjectCodetxt1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        subjectCodetxt1.setForeground(new java.awt.Color(51, 51, 51));
        subjectCodetxt1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        subjectCodetxt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectCodetxt1ActionPerformed(evt);
            }
        });

        jLabel100.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel100.setForeground(new java.awt.Color(51, 51, 51));
        jLabel100.setText("Faculty");

        jLabel101.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel101.setForeground(new java.awt.Color(51, 51, 51));
        jLabel101.setText("Semester");

        subjectSemesterCombo1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Sem I", "Sem II", "Sem III", "Sem IV", "Sem V", "Sem VI", "Sem VII", "Sem VIII" }));

        jLabel102.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel102.setForeground(new java.awt.Color(51, 51, 51));
        jLabel102.setText("Proffesor");

        subjectCodelbl1.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        subjectCodelbl1.setForeground(new java.awt.Color(255, 0, 51));
        subjectCodelbl1.setText("*Enter Subject Code");

        SubjectNamelbl1.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        SubjectNamelbl1.setForeground(new java.awt.Color(255, 0, 51));
        SubjectNamelbl1.setText("*Enter Subject name");

        subjectFacultylbl1.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        subjectFacultylbl1.setForeground(new java.awt.Color(255, 0, 51));
        subjectFacultylbl1.setText("* Select Faculty");

        subjectSemesterlbl1.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        subjectSemesterlbl1.setForeground(new java.awt.Color(255, 0, 51));
        subjectSemesterlbl1.setText("* Select Semester");

        subjectProffesorlbl1.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        subjectProffesorlbl1.setForeground(new java.awt.Color(255, 0, 51));
        subjectProffesorlbl1.setText("* Select Proffesor");

        jLabel103.setForeground(new java.awt.Color(204, 204, 204));
        jLabel103.setText("*Enter Subject anme Namejjsd");

        jButton9.setBackground(new java.awt.Color(0, 204, 204));
        jButton9.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("DELETE");
        jButton9.setBorder(null);
        jButton9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel30Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel30Layout.createSequentialGroup()
                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 131, Short.MAX_VALUE)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(subjectNametxt1)
                            .addComponent(jLabel99, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel98, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(subjectCodetxt1)
                            .addComponent(jLabel100, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(subjectFaultyCombo1, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel101, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(subjectSemesterCombo1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel102, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(profScrollPane1))
                        .addGap(46, 46, 46)
                        .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(subjectSemesterlbl1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(subjectFacultylbl1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(subjectCodelbl1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SubjectNamelbl1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel103, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(subjectProffesorlbl1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(374, 374, 374))
                    .addGroup(jPanel30Layout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addComponent(jLabel97, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel97, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel98)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subjectNametxt1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SubjectNamelbl1))
                .addGap(18, 18, 18)
                .addComponent(jLabel99)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subjectCodetxt1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subjectCodelbl1))
                .addGap(18, 18, 18)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel100)
                    .addComponent(jLabel103))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(subjectFaultyCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subjectFacultylbl1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel101)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subjectSemesterCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subjectSemesterlbl1))
                .addGap(18, 18, 18)
                .addComponent(jLabel102)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel30Layout.createSequentialGroup()
                        .addComponent(subjectProffesorlbl1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel30Layout.createSequentialGroup()
                        .addComponent(profScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        jLabel104.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/back.png"))); // NOI18N
        jLabel104.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel104MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlUpdateSubjectLayout = new javax.swing.GroupLayout(pnlUpdateSubject);
        pnlUpdateSubject.setLayout(pnlUpdateSubjectLayout);
        pnlUpdateSubjectLayout.setHorizontalGroup(
            pnlUpdateSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUpdateSubjectLayout.createSequentialGroup()
                .addGroup(pnlUpdateSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlUpdateSubjectLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel104))
                    .addGroup(pnlUpdateSubjectLayout.createSequentialGroup()
                        .addGap(243, 243, 243)
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, 1036, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(640, Short.MAX_VALUE))
        );
        pnlUpdateSubjectLayout.setVerticalGroup(
            pnlUpdateSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUpdateSubjectLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel104)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(448, Short.MAX_VALUE))
        );

        pnlBody.add(pnlUpdateSubject, "card17");

        pnlmainViewProfessor.setBackground(new java.awt.Color(255, 255, 255));

        jPanel32.setBackground(new java.awt.Color(255, 255, 255));

        jLabel105.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/back.png"))); // NOI18N
        jLabel105.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel105MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel105)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel32Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel105)
                .addContainerGap())
        );

        SPprofessor.setBorder(null);
        SPprofessor.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        pnlViewProffesor.setBackground(new java.awt.Color(255, 255, 255));
        pnlViewProffesor.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pnlViewProffesor.setMaximumSize(new java.awt.Dimension(1500, 1200));
        pnlViewProffesor.setMinimumSize(new java.awt.Dimension(1500, 1200));
        pnlViewProffesor.setPreferredSize(new java.awt.Dimension(1500, 1200));

        javax.swing.GroupLayout pnlViewProffesorLayout = new javax.swing.GroupLayout(pnlViewProffesor);
        pnlViewProffesor.setLayout(pnlViewProffesorLayout);
        pnlViewProffesorLayout.setHorizontalGroup(
            pnlViewProffesorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1886, Short.MAX_VALUE)
        );
        pnlViewProffesorLayout.setVerticalGroup(
            pnlViewProffesorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
        );

        SPprofessor.setViewportView(pnlViewProffesor);

        javax.swing.GroupLayout pnlmainViewProfessorLayout = new javax.swing.GroupLayout(pnlmainViewProfessor);
        pnlmainViewProfessor.setLayout(pnlmainViewProfessorLayout);
        pnlmainViewProfessorLayout.setHorizontalGroup(
            pnlmainViewProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlmainViewProfessorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SPprofessor, javax.swing.GroupLayout.DEFAULT_SIZE, 1907, Short.MAX_VALUE))
        );
        pnlmainViewProfessorLayout.setVerticalGroup(
            pnlmainViewProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlmainViewProfessorLayout.createSequentialGroup()
                .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SPprofessor, javax.swing.GroupLayout.PREFERRED_SIZE, 738, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 381, Short.MAX_VALUE))
        );

        pnlBody.add(pnlmainViewProfessor, "card18");

        pnlmainViewFaculty.setBackground(new java.awt.Color(255, 255, 255));

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));

        jLabel78.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/back.png"))); // NOI18N
        jLabel78.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel78MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel78)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel78)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        SPfaculty.setBorder(null);
        SPfaculty.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        SPfaculty.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        SPfaculty.setPreferredSize(new java.awt.Dimension(1500, 1200));

        pnlViewFaculty.setBackground(new java.awt.Color(255, 255, 255));
        pnlViewFaculty.setMaximumSize(new java.awt.Dimension(1500, 1200));
        pnlViewFaculty.setMinimumSize(new java.awt.Dimension(1500, 1200));
        pnlViewFaculty.setPreferredSize(new java.awt.Dimension(1500, 1200));

        javax.swing.GroupLayout pnlViewFacultyLayout = new javax.swing.GroupLayout(pnlViewFaculty);
        pnlViewFaculty.setLayout(pnlViewFacultyLayout);
        pnlViewFacultyLayout.setHorizontalGroup(
            pnlViewFacultyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1837, Short.MAX_VALUE)
        );
        pnlViewFacultyLayout.setVerticalGroup(
            pnlViewFacultyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
        );

        SPfaculty.setViewportView(pnlViewFaculty);

        javax.swing.GroupLayout pnlmainViewFacultyLayout = new javax.swing.GroupLayout(pnlmainViewFaculty);
        pnlmainViewFaculty.setLayout(pnlmainViewFacultyLayout);
        pnlmainViewFacultyLayout.setHorizontalGroup(
            pnlmainViewFacultyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlmainViewFacultyLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(SPfaculty, javax.swing.GroupLayout.PREFERRED_SIZE, 1858, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlmainViewFacultyLayout.setVerticalGroup(
            pnlmainViewFacultyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlmainViewFacultyLayout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SPfaculty, javax.swing.GroupLayout.PREFERRED_SIZE, 821, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(114, 114, 114))
        );

        pnlBody.add(pnlmainViewFaculty, "card18");

        pnlmainViewSubject.setBackground(new java.awt.Color(255, 255, 255));
        pnlmainViewSubject.setToolTipText("");

        jPanel26.setBackground(new java.awt.Color(255, 255, 255));

        jLabel79.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/back.png"))); // NOI18N
        jLabel79.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel79MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel79)
                .addContainerGap(1855, Short.MAX_VALUE))
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel79)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        SPsubject.setBorder(null);
        SPsubject.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        SPsubject.setMinimumSize(new java.awt.Dimension(25, 26));
        SPsubject.setPreferredSize(new java.awt.Dimension(1500, 1200));

        pnlSubjectSemester.setBackground(new java.awt.Color(255, 255, 255));
        pnlSubjectSemester.setMaximumSize(new java.awt.Dimension(1500, 1200));
        pnlSubjectSemester.setMinimumSize(new java.awt.Dimension(1500, 1200));
        pnlSubjectSemester.setPreferredSize(new java.awt.Dimension(1500, 1200));
        pnlSubjectSemester.setRequestFocusEnabled(false);

        javax.swing.GroupLayout pnlSubjectSemesterLayout = new javax.swing.GroupLayout(pnlSubjectSemester);
        pnlSubjectSemester.setLayout(pnlSubjectSemesterLayout);
        pnlSubjectSemesterLayout.setHorizontalGroup(
            pnlSubjectSemesterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1898, Short.MAX_VALUE)
        );
        pnlSubjectSemesterLayout.setVerticalGroup(
            pnlSubjectSemesterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
        );

        SPsubject.setViewportView(pnlSubjectSemester);

        javax.swing.GroupLayout pnlmainViewSubjectLayout = new javax.swing.GroupLayout(pnlmainViewSubject);
        pnlmainViewSubject.setLayout(pnlmainViewSubjectLayout);
        pnlmainViewSubjectLayout.setHorizontalGroup(
            pnlmainViewSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel26, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(SPsubject, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlmainViewSubjectLayout.setVerticalGroup(
            pnlmainViewSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlmainViewSubjectLayout.createSequentialGroup()
                .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SPsubject, javax.swing.GroupLayout.PREFERRED_SIZE, 699, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(244, 244, 244))
        );

        pnlBody.add(pnlmainViewSubject, "card18");

        pnlUpdateClass.setBackground(new java.awt.Color(255, 255, 255));

        jLabel80.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/back.png"))); // NOI18N
        jLabel80.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel80MouseClicked(evt);
            }
        });

        formPnl1.setBackground(new java.awt.Color(204, 204, 204));

        classCapacitytxt1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        classNumbertxt1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        classNumbertxt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classNumbertxt1ActionPerformed(evt);
            }
        });

        jLabel25.setBackground(new java.awt.Color(255, 255, 255));
        jLabel25.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel25.setText("Class Number :");

        classFloortxt1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel95.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel95.setText("Floor of Class  :");

        jLabel106.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel106.setText("Class Capacity :");

        jButton8.setBackground(new java.awt.Color(0, 255, 255));
        jButton8.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("UPDATE");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jPanel28.setBackground(new java.awt.Color(0, 204, 204));
        jPanel28.setFocusTraversalPolicyProvider(true);

        jLabel107.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/classroomFinal.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel107, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(jLabel107)
                .addContainerGap(255, Short.MAX_VALUE))
        );

        jLabel108.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        jLabel108.setForeground(new java.awt.Color(102, 102, 102));
        jLabel108.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel108.setText("UPDATE CLASS");

        classNumberlbl1.setForeground(new java.awt.Color(241, 41, 41));
        classNumberlbl1.setText("jLabel62");

        classFloorlbl1.setForeground(new java.awt.Color(241, 41, 41));
        classFloorlbl1.setText("jLabel63");

        classCapacitylbl1.setForeground(new java.awt.Color(241, 41, 41));
        classCapacitylbl1.setText("jLabel64");

        jLabel109.setForeground(new java.awt.Color(204, 204, 204));
        jLabel109.setText("jLabel62sldsa sdk d sdsds akskdnslkdjsd");

        jButton10.setBackground(new java.awt.Color(0, 255, 255));
        jButton10.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jButton10.setForeground(new java.awt.Color(255, 255, 255));
        jButton10.setText("DELETE");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout formPnl1Layout = new javax.swing.GroupLayout(formPnl1);
        formPnl1.setLayout(formPnl1Layout);
        formPnl1Layout.setHorizontalGroup(
            formPnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formPnl1Layout.createSequentialGroup()
                .addComponent(jPanel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(formPnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(formPnl1Layout.createSequentialGroup()
                        .addGap(184, 184, 184)
                        .addComponent(jLabel108, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(formPnl1Layout.createSequentialGroup()
                        .addGap(221, 221, 221)
                        .addGroup(formPnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(formPnl1Layout.createSequentialGroup()
                                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(classFloortxt1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
                            .addComponent(jLabel95, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(classCapacitytxt1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel106, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(classNumbertxt1, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(formPnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(classNumberlbl1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(classFloorlbl1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(classCapacitylbl1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel109, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)))))
        );
        formPnl1Layout.setVerticalGroup(
            formPnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formPnl1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel108, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(110, 110, 110)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formPnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(classNumbertxt1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(classNumberlbl1))
                .addGap(11, 11, 11)
                .addComponent(jLabel95)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formPnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(classFloortxt1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(classFloorlbl1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(formPnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel106, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel109))
                .addGap(2, 2, 2)
                .addGroup(formPnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(classCapacitytxt1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(classCapacitylbl1))
                .addGap(60, 60, 60)
                .addGroup(formPnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(355, 355, 355))
            .addGroup(formPnl1Layout.createSequentialGroup()
                .addComponent(jPanel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlUpdateClassLayout = new javax.swing.GroupLayout(pnlUpdateClass);
        pnlUpdateClass.setLayout(pnlUpdateClassLayout);
        pnlUpdateClassLayout.setHorizontalGroup(
            pnlUpdateClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUpdateClassLayout.createSequentialGroup()
                .addGroup(pnlUpdateClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlUpdateClassLayout.createSequentialGroup()
                        .addGap(368, 368, 368)
                        .addComponent(formPnl1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlUpdateClassLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel80)))
                .addContainerGap(368, Short.MAX_VALUE))
        );
        pnlUpdateClassLayout.setVerticalGroup(
            pnlUpdateClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUpdateClassLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel80)
                .addGap(40, 40, 40)
                .addComponent(formPnl1, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(471, Short.MAX_VALUE))
        );

        pnlBody.add(pnlUpdateClass, "card18");

        pnlGenerate.setBackground(new java.awt.Color(255, 255, 255));

        jPanel37.setBackground(new java.awt.Color(255, 255, 255));

        jLabel126.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel126.setText("Student Group(Number of Students)");

        jLabel127.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel127.setText("Schedule Time");

        jLabel128.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel128.setText("Classes(Capacity)");

        jButton13.setBackground(new java.awt.Color(0, 204, 204));
        jButton13.setText("GENERATE");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        lblgrouplist.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        lblgrouplist.setForeground(new java.awt.Color(204, 0, 51));
        lblgrouplist.setText("jLabel129");

        lbltimelist.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        lbltimelist.setForeground(new java.awt.Color(204, 0, 51));
        lbltimelist.setText("jLabel129");

        lblclasslist.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        lblclasslist.setForeground(new java.awt.Color(204, 0, 51));
        lblclasslist.setText("jLabel129");

        javax.swing.GroupLayout jPanel37Layout = new javax.swing.GroupLayout(jPanel37);
        jPanel37.setLayout(jPanel37Layout);
        jPanel37Layout.setHorizontalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel37Layout.createSequentialGroup()
                .addGap(210, 210, 210)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblgrouplist, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(studentGroupSP)
                    .addComponent(jLabel126, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(218, 218, 218)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbltimelist, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                    .addComponent(timeSP, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                    .addComponent(jLabel127, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel37Layout.createSequentialGroup()
                        .addGap(246, 246, 246)
                        .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(classSP, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                            .addComponent(lblclasslist, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                            .addComponent(jLabel128, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(381, Short.MAX_VALUE))
                    .addGroup(jPanel37Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton13)
                        .addGap(396, 396, 396))))
        );
        jPanel37Layout.setVerticalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel37Layout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel126)
                    .addComponent(jLabel127)
                    .addComponent(jLabel128))
                .addGap(18, 18, 18)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(classSP, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(timeSP)
                    .addComponent(studentGroupSP))
                .addGap(41, 41, 41)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblgrouplist, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbltimelist, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblclasslist, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(89, 89, 89)
                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(428, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(jPanel37);

        jLabel129.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/back.png"))); // NOI18N
        jLabel129.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel129MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlGenerateLayout = new javax.swing.GroupLayout(pnlGenerate);
        pnlGenerate.setLayout(pnlGenerateLayout);
        pnlGenerateLayout.setHorizontalGroup(
            pnlGenerateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1630, Short.MAX_VALUE)
            .addGroup(pnlGenerateLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel129)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlGenerateLayout.setVerticalGroup(
            pnlGenerateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGenerateLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel129)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 834, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(282, Short.MAX_VALUE))
        );

        pnlBody.add(pnlGenerate, "card19");

        pnlAddStudentGroup.setBackground(new java.awt.Color(255, 255, 255));

        jLabel110.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/back.png"))); // NOI18N
        jLabel110.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel110MouseClicked(evt);
            }
        });

        jPanel29.setBackground(new java.awt.Color(204, 204, 204));

        jPanel33.setBackground(new java.awt.Color(0, 204, 204));
        jPanel33.setFocusTraversalPolicyProvider(true);

        jLabel111.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/subject.png"))); // NOI18N

        javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel111, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(jLabel111)
                .addContainerGap(267, Short.MAX_VALUE))
        );

        jLabel112.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        jLabel112.setForeground(new java.awt.Color(102, 102, 102));
        jLabel112.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel112.setText("ADD STUDENT GROUP");

        jButton11.setBackground(new java.awt.Color(0, 204, 204));
        jButton11.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton11.setForeground(new java.awt.Color(255, 255, 255));
        jButton11.setText("SAVE");
        jButton11.setBorder(null);
        jButton11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jLabel114.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel114.setForeground(new java.awt.Color(51, 51, 51));
        jLabel114.setText("Number Of Student");

        numberOfStudenttxt.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        numberOfStudenttxt.setForeground(new java.awt.Color(51, 51, 51));
        numberOfStudenttxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        numberOfStudenttxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberOfStudenttxtActionPerformed(evt);
            }
        });

        jLabel115.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel115.setForeground(new java.awt.Color(51, 51, 51));
        jLabel115.setText("Faculty");

        jLabel116.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel116.setForeground(new java.awt.Color(51, 51, 51));
        jLabel116.setText("Semester");

        semesterStudentCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Sem I", "Sem II", "Sem III", "Sem IV", "Sem V", "Sem VI", "Sem VII", "Sem VIII" }));

        facultyStudentlbl.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        facultyStudentlbl.setForeground(new java.awt.Color(255, 0, 51));
        facultyStudentlbl.setText("* Select Faculty");

        semesterStudentlbl.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        semesterStudentlbl.setForeground(new java.awt.Color(255, 0, 51));
        semesterStudentlbl.setText("* Select Semester");

        numberOfStudentlbl.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        numberOfStudentlbl.setForeground(new java.awt.Color(255, 0, 51));
        numberOfStudentlbl.setText("* Select Proffesor");

        jLabel118.setForeground(new java.awt.Color(204, 204, 204));
        jLabel118.setText("*Enter Subject anme Namejjsd");

        jLabel26.setForeground(new java.awt.Color(204, 204, 204));
        jLabel26.setText("dsfkjdfjasd dsfjdalsfjdfjadlfjasdlkkfjdslkfjkldsjflsdjf");

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addComponent(jPanel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel29Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel114, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                            .addComponent(numberOfStudenttxt)
                            .addComponent(jLabel115, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(facultyStudentCombo, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel116, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(semesterStudentCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(58, 58, 58)
                        .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel29Layout.createSequentialGroup()
                                .addComponent(semesterStudentlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel118, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(463, 463, 463))
                            .addGroup(jPanel29Layout.createSequentialGroup()
                                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(facultyStudentlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(numberOfStudentlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel29Layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(jLabel112, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel112, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jLabel115)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(facultyStudentCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(facultyStudentlbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel116)
                    .addComponent(jLabel26))
                .addGap(6, 6, 6)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel118)
                    .addComponent(semesterStudentlbl)
                    .addComponent(semesterStudentCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel114)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberOfStudenttxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numberOfStudentlbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
        );

        javax.swing.GroupLayout pnlAddStudentGroupLayout = new javax.swing.GroupLayout(pnlAddStudentGroup);
        pnlAddStudentGroup.setLayout(pnlAddStudentGroupLayout);
        pnlAddStudentGroupLayout.setHorizontalGroup(
            pnlAddStudentGroupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddStudentGroupLayout.createSequentialGroup()
                .addGroup(pnlAddStudentGroupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAddStudentGroupLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel110))
                    .addGroup(pnlAddStudentGroupLayout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, 1041, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(699, Short.MAX_VALUE))
        );
        pnlAddStudentGroupLayout.setVerticalGroup(
            pnlAddStudentGroupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddStudentGroupLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel110)
                .addGap(57, 57, 57)
                .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(443, Short.MAX_VALUE))
        );

        pnlBody.add(pnlAddStudentGroup, "card20");

        pnlmainViewStudent.setBackground(new java.awt.Color(255, 255, 255));

        SPstudent.setBorder(null);
        SPstudent.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        SPstudent.setMinimumSize(new java.awt.Dimension(25, 26));
        SPstudent.setPreferredSize(new java.awt.Dimension(1500, 1200));

        pnlViewStudent.setBackground(new java.awt.Color(255, 255, 255));
        pnlViewStudent.setMaximumSize(new java.awt.Dimension(1500, 1200));
        pnlViewStudent.setMinimumSize(new java.awt.Dimension(1500, 1200));
        pnlViewStudent.setPreferredSize(new java.awt.Dimension(1500, 1200));
        pnlViewStudent.setRequestFocusEnabled(false);

        javax.swing.GroupLayout pnlViewStudentLayout = new javax.swing.GroupLayout(pnlViewStudent);
        pnlViewStudent.setLayout(pnlViewStudentLayout);
        pnlViewStudentLayout.setHorizontalGroup(
            pnlViewStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1898, Short.MAX_VALUE)
        );
        pnlViewStudentLayout.setVerticalGroup(
            pnlViewStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
        );

        SPstudent.setViewportView(pnlViewStudent);

        jPanel34.setBackground(new java.awt.Color(255, 255, 255));

        jLabel113.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/back.png"))); // NOI18N
        jLabel113.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel113MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel34Layout = new javax.swing.GroupLayout(jPanel34);
        jPanel34.setLayout(jPanel34Layout);
        jPanel34Layout.setHorizontalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel34Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel113)
                .addContainerGap(1855, Short.MAX_VALUE))
        );
        jPanel34Layout.setVerticalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel34Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel113))
        );

        javax.swing.GroupLayout pnlmainViewStudentLayout = new javax.swing.GroupLayout(pnlmainViewStudent);
        pnlmainViewStudent.setLayout(pnlmainViewStudentLayout);
        pnlmainViewStudentLayout.setHorizontalGroup(
            pnlmainViewStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel34, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(SPstudent, javax.swing.GroupLayout.DEFAULT_SIZE, 1919, Short.MAX_VALUE)
        );
        pnlmainViewStudentLayout.setVerticalGroup(
            pnlmainViewStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlmainViewStudentLayout.createSequentialGroup()
                .addComponent(jPanel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SPstudent, javax.swing.GroupLayout.PREFERRED_SIZE, 753, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(244, 244, 244))
        );

        pnlBody.add(pnlmainViewStudent, "card21");

        pnlUpdateStudent.setBackground(new java.awt.Color(255, 255, 255));

        jPanel35.setBackground(new java.awt.Color(204, 204, 204));

        jPanel36.setBackground(new java.awt.Color(0, 204, 204));
        jPanel36.setFocusTraversalPolicyProvider(true);

        jLabel117.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/subject.png"))); // NOI18N

        javax.swing.GroupLayout jPanel36Layout = new javax.swing.GroupLayout(jPanel36);
        jPanel36.setLayout(jPanel36Layout);
        jPanel36Layout.setHorizontalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel117, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel36Layout.setVerticalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel36Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(jLabel117)
                .addContainerGap(267, Short.MAX_VALUE))
        );

        jLabel119.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        jLabel119.setForeground(new java.awt.Color(102, 102, 102));
        jLabel119.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel119.setText("UPDATE STUDENT GROUP");

        jButton12.setBackground(new java.awt.Color(0, 204, 204));
        jButton12.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton12.setForeground(new java.awt.Color(255, 255, 255));
        jButton12.setText("UPDATE");
        jButton12.setBorder(null);
        jButton12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jLabel120.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel120.setForeground(new java.awt.Color(51, 51, 51));
        jLabel120.setText("Number Of Student");

        numberOfStudentUpdatetxt.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        numberOfStudentUpdatetxt.setForeground(new java.awt.Color(51, 51, 51));
        numberOfStudentUpdatetxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        numberOfStudentUpdatetxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberOfStudentUpdatetxtActionPerformed(evt);
            }
        });

        jLabel121.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel121.setForeground(new java.awt.Color(51, 51, 51));
        jLabel121.setText("Faculty");

        jLabel122.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel122.setForeground(new java.awt.Color(51, 51, 51));
        jLabel122.setText("Semester");

        semesterStudentUpdateCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Sem I", "Sem II", "Sem III", "Sem IV", "Sem V", "Sem VI", "Sem VII", "Sem VIII" }));

        facultyStudentUpdatelbl.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        facultyStudentUpdatelbl.setForeground(new java.awt.Color(255, 0, 51));
        facultyStudentUpdatelbl.setText("* Select Faculty");

        semesterStudentUpdatelbl.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        semesterStudentUpdatelbl.setForeground(new java.awt.Color(255, 0, 51));
        semesterStudentUpdatelbl.setText("* Select Semester");

        numberOfStudentUpdatelbl.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        numberOfStudentUpdatelbl.setForeground(new java.awt.Color(255, 0, 51));
        numberOfStudentUpdatelbl.setText("* Select Proffesor");

        jLabel123.setForeground(new java.awt.Color(204, 204, 204));
        jLabel123.setText("*Enter Subject anme Namejjsd");

        jLabel124.setForeground(new java.awt.Color(204, 204, 204));
        jLabel124.setText("dsfkjdfjasd dsfjdalsfjdfjadlfjasdlkkfjdslkfjkldsjflsdjf");

        jButton17.setBackground(new java.awt.Color(0, 204, 204));
        jButton17.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton17.setForeground(new java.awt.Color(255, 255, 255));
        jButton17.setText("DELETE");
        jButton17.setBorder(null);
        jButton17.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel35Layout = new javax.swing.GroupLayout(jPanel35);
        jPanel35.setLayout(jPanel35Layout);
        jPanel35Layout.setHorizontalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addComponent(jPanel36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel35Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel35Layout.createSequentialGroup()
                                .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel120, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                            .addComponent(numberOfStudentUpdatetxt)
                            .addComponent(jLabel121, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(facultyStudentUpdateCombo, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel122, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(semesterStudentUpdateCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(58, 58, 58)
                        .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel35Layout.createSequentialGroup()
                                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(numberOfStudentUpdatelbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel35Layout.createSequentialGroup()
                                        .addComponent(semesterStudentUpdatelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel123, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(463, 463, 463))
                            .addGroup(jPanel35Layout.createSequentialGroup()
                                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel124, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(facultyStudentUpdatelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel35Layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(jLabel119, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel35Layout.setVerticalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel119, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jLabel121)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(facultyStudentUpdateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(facultyStudentUpdatelbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel122)
                    .addComponent(jLabel124))
                .addGap(6, 6, 6)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel123)
                    .addComponent(semesterStudentUpdatelbl)
                    .addComponent(semesterStudentUpdateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel120)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberOfStudentUpdatetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numberOfStudentUpdatelbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(100, 100, 100))
        );

        jLabel125.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/back.png"))); // NOI18N
        jLabel125.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel125MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlUpdateStudentLayout = new javax.swing.GroupLayout(pnlUpdateStudent);
        pnlUpdateStudent.setLayout(pnlUpdateStudentLayout);
        pnlUpdateStudentLayout.setHorizontalGroup(
            pnlUpdateStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUpdateStudentLayout.createSequentialGroup()
                .addGroup(pnlUpdateStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlUpdateStudentLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel125))
                    .addGroup(pnlUpdateStudentLayout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(jPanel35, javax.swing.GroupLayout.PREFERRED_SIZE, 1041, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(699, Short.MAX_VALUE))
        );
        pnlUpdateStudentLayout.setVerticalGroup(
            pnlUpdateStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUpdateStudentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel125)
                .addGap(57, 57, 57)
                .addComponent(jPanel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(443, Short.MAX_VALUE))
        );

        pnlBody.add(pnlUpdateStudent, "card22");

        pnlDisplaySchedule.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane3.setPreferredSize(new java.awt.Dimension(1500, 1200));

        schedulePnl.setBackground(new java.awt.Color(255, 255, 255));
        schedulePnl.setMaximumSize(new java.awt.Dimension(1500, 1200));
        schedulePnl.setMinimumSize(new java.awt.Dimension(1500, 1200));
        schedulePnl.setPreferredSize(new java.awt.Dimension(1500, 1200));

        javax.swing.GroupLayout schedulePnlLayout = new javax.swing.GroupLayout(schedulePnl);
        schedulePnl.setLayout(schedulePnlLayout);
        schedulePnlLayout.setHorizontalGroup(
            schedulePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1896, Short.MAX_VALUE)
        );
        schedulePnlLayout.setVerticalGroup(
            schedulePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
        );

        jScrollPane3.setViewportView(schedulePnl);

        javax.swing.GroupLayout jPanel38Layout = new javax.swing.GroupLayout(jPanel38);
        jPanel38.setLayout(jPanel38Layout);
        jPanel38Layout.setHorizontalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1919, Short.MAX_VALUE)
        );
        jPanel38Layout.setVerticalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jButton14.setBackground(new java.awt.Color(0, 204, 204));
        jButton14.setText("SAVE");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setBackground(new java.awt.Color(0, 204, 204));
        jButton15.setText("PRINT");

        jButton16.setBackground(new java.awt.Color(0, 204, 204));
        jButton16.setText("SAVE & PRINT");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jLabel130.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/back.png"))); // NOI18N
        jLabel130.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel130MouseClicked(evt);
            }
        });

        jButton19.setBackground(new java.awt.Color(0, 204, 204));
        jButton19.setText("Analyze Result");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jButton20.setBackground(new java.awt.Color(0, 204, 204));
        jButton20.setText("Algorithm Analysis");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDisplayScheduleLayout = new javax.swing.GroupLayout(pnlDisplaySchedule);
        pnlDisplaySchedule.setLayout(pnlDisplayScheduleLayout);
        pnlDisplayScheduleLayout.setHorizontalGroup(
            pnlDisplayScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1919, Short.MAX_VALUE)
            .addComponent(jPanel38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDisplayScheduleLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton14)
                .addGap(83, 83, 83)
                .addComponent(jButton15)
                .addGap(71, 71, 71)
                .addComponent(jButton16)
                .addGap(47, 47, 47)
                .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(206, 206, 206))
            .addGroup(pnlDisplayScheduleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel130)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(94, 94, 94))
        );
        pnlDisplayScheduleLayout.setVerticalGroup(
            pnlDisplayScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDisplayScheduleLayout.createSequentialGroup()
                .addGroup(pnlDisplayScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDisplayScheduleLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel130))
                    .addGroup(pnlDisplayScheduleLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 716, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(pnlDisplayScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jPanel38, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 24, Short.MAX_VALUE))
        );

        pnlBody.add(pnlDisplaySchedule, "card23");

        jPanel39.setBackground(new java.awt.Color(204, 204, 204));

        jPanel40.setBackground(new java.awt.Color(0, 204, 204));
        jPanel40.setFocusTraversalPolicyProvider(true);

        jLabel131.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/course.png"))); // NOI18N

        javax.swing.GroupLayout jPanel40Layout = new javax.swing.GroupLayout(jPanel40);
        jPanel40.setLayout(jPanel40Layout);
        jPanel40Layout.setHorizontalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel131, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel40Layout.setVerticalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel40Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(jLabel131)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel132.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        jLabel132.setForeground(new java.awt.Color(102, 102, 102));
        jLabel132.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel132.setText("ADD TIMESLOT");

        jLabel133.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel133.setForeground(new java.awt.Color(51, 51, 51));
        jLabel133.setText("Start Time");

        jButton18.setBackground(new java.awt.Color(0, 204, 204));
        jButton18.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton18.setForeground(new java.awt.Color(255, 255, 255));
        jButton18.setText("SAVE");
        jButton18.setBorder(null);
        jButton18.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jPanel41.setBackground(new java.awt.Color(204, 204, 204));

        FacultyDesclbl3.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        FacultyDesclbl3.setForeground(new java.awt.Color(204, 204, 204));
        FacultyDesclbl3.setText("*Enter Faculty Description fsdfj;sdfkj;saldfk");

        lbltime.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        lbltime.setForeground(new java.awt.Color(255, 0, 51));
        lbltime.setText("*Invalid times");

        lblday.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        lblday.setForeground(new java.awt.Color(255, 0, 51));
        lblday.setText("*Enter Week day");

        javax.swing.GroupLayout jPanel41Layout = new javax.swing.GroupLayout(jPanel41);
        jPanel41.setLayout(jPanel41Layout);
        jPanel41Layout.setHorizontalGroup(
            jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel41Layout.createSequentialGroup()
                .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FacultyDesclbl3, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                    .addGroup(jPanel41Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(lbltime, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel41Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(lblday, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel41Layout.setVerticalGroup(
            jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel41Layout.createSequentialGroup()
                .addComponent(lbltime, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 161, Short.MAX_VALUE)
                .addComponent(FacultyDesclbl3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblday, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78))
        );

        jLabel134.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel134.setForeground(new java.awt.Color(51, 51, 51));
        jLabel134.setText("End Time");

        jLabel135.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel135.setForeground(new java.awt.Color(51, 51, 51));
        jLabel135.setText("Week Day");

        javax.swing.GroupLayout jPanel39Layout = new javax.swing.GroupLayout(jPanel39);
        jPanel39.setLayout(jPanel39Layout);
        jPanel39Layout.setHorizontalGroup(
            jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel39Layout.createSequentialGroup()
                .addComponent(jPanel40, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel39Layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(jLabel132, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel39Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(starttime, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel39Layout.createSequentialGroup()
                                .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel133, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(endtime, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel134, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtday, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel135, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)))
                                .addGap(53, 53, 53)
                                .addComponent(jPanel41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(131, Short.MAX_VALUE))
        );
        jPanel39Layout.setVerticalGroup(
            jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel39Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel132, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(jLabel133)
                .addGap(18, 18, 18)
                .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel39Layout.createSequentialGroup()
                        .addComponent(starttime, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jLabel134)
                        .addGap(18, 18, 18)
                        .addComponent(endtime, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel135)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtday, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout pnlAddTimeslotLayout = new javax.swing.GroupLayout(pnlAddTimeslot);
        pnlAddTimeslot.setLayout(pnlAddTimeslotLayout);
        pnlAddTimeslotLayout.setHorizontalGroup(
            pnlAddTimeslotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAddTimeslotLayout.createSequentialGroup()
                .addContainerGap(378, Short.MAX_VALUE)
                .addComponent(jPanel39, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(327, 327, 327))
        );
        pnlAddTimeslotLayout.setVerticalGroup(
            pnlAddTimeslotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddTimeslotLayout.createSequentialGroup()
                .addGap(147, 147, 147)
                .addComponent(jPanel39, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(408, Short.MAX_VALUE))
        );

        pnlBody.add(pnlAddTimeslot, "card24");

        jPanel42.setBackground(new java.awt.Color(255, 255, 255));

        jLabel136.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/back.png"))); // NOI18N
        jLabel136.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel136MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel42Layout = new javax.swing.GroupLayout(jPanel42);
        jPanel42.setLayout(jPanel42Layout);
        jPanel42Layout.setHorizontalGroup(
            jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel42Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel136)
                .addContainerGap(1566, Short.MAX_VALUE))
        );
        jPanel42Layout.setVerticalGroup(
            jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel42Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel136)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        SPschedule.setBackground(new java.awt.Color(255, 51, 51));
        SPschedule.setBorder(null);
        SPschedule.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        SPschedule.setMaximumSize(new java.awt.Dimension(1500, 1200));
        SPschedule.setMinimumSize(new java.awt.Dimension(1500, 1200));

        schedulePnl1.setBackground(new java.awt.Color(255, 255, 255));
        schedulePnl1.setMaximumSize(new java.awt.Dimension(1500, 1200));
        schedulePnl1.setMinimumSize(new java.awt.Dimension(1500, 1200));
        schedulePnl1.setPreferredSize(new java.awt.Dimension(1500, 1200));
        schedulePnl1.setRequestFocusEnabled(false);

        javax.swing.GroupLayout schedulePnl1Layout = new javax.swing.GroupLayout(schedulePnl1);
        schedulePnl1.setLayout(schedulePnl1Layout);
        schedulePnl1Layout.setHorizontalGroup(
            schedulePnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1609, Short.MAX_VALUE)
        );
        schedulePnl1Layout.setVerticalGroup(
            schedulePnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
        );

        SPschedule.setViewportView(schedulePnl1);

        javax.swing.GroupLayout pnlmainViewScheduleLayout = new javax.swing.GroupLayout(pnlmainViewSchedule);
        pnlmainViewSchedule.setLayout(pnlmainViewScheduleLayout);
        pnlmainViewScheduleLayout.setHorizontalGroup(
            pnlmainViewScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel42, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(SPschedule, javax.swing.GroupLayout.DEFAULT_SIZE, 1630, Short.MAX_VALUE)
        );
        pnlmainViewScheduleLayout.setVerticalGroup(
            pnlmainViewScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlmainViewScheduleLayout.createSequentialGroup()
                .addComponent(jPanel42, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SPschedule, javax.swing.GroupLayout.PREFERRED_SIZE, 699, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(244, 244, 244))
        );

        pnlBody.add(pnlmainViewSchedule, "card25");

        pnlUpdateAnalysisParameter.setBackground(new java.awt.Color(255, 255, 255));

        jPanel44.setBackground(new java.awt.Color(204, 204, 204));

        mr1.setToolTipText("Valid Range 0.01-0.09");

        ps2.setToolTipText("Valid Range 25-200");

        ps3.setToolTipText("Valid Range 25-200");

        ps4.setToolTipText("Valid Range 25-200");

        cr4.setToolTipText("Valid Range 0.1-0.9");

        cr3.setToolTipText("Valid Range 0.1-0.9");

        cr2.setToolTipText("Valid Range 0.1-0.9");

        cr1.setToolTipText("Valid Range 0.1-0.9");

        mr4.setToolTipText("Valid Range 0.01-0.09");

        mr3.setToolTipText("Valid Range 0.01-0.09");

        mr2.setToolTipText("Valid Range 0.01-0.09");

        ps1.setToolTipText("Valid Range 25-200");

        jLabel139.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel139.setText("Population Sizes");

        jLabel140.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel140.setText("Crossover Rates");

        jLabel141.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel141.setText("Mutation Rates");

        jButton21.setBackground(new java.awt.Color(0, 204, 204));
        jButton21.setText("UPDATE");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        lblps.setForeground(new java.awt.Color(204, 0, 0));
        lblps.setText("jLabel144");

        lblcr.setForeground(new java.awt.Color(204, 0, 0));
        lblcr.setText("jLabel144");

        lblmr.setForeground(new java.awt.Color(204, 0, 0));
        lblmr.setText("jLabel144");

        lblmr1.setBackground(new java.awt.Color(204, 204, 204));
        lblmr1.setForeground(new java.awt.Color(204, 204, 204));
        lblmr1.setText("xxxxxxxxxxxxxxxxxxxxxxxxxcxxxxxxxxxxxxxxxxxxx");

        javax.swing.GroupLayout jPanel44Layout = new javax.swing.GroupLayout(jPanel44);
        jPanel44.setLayout(jPanel44Layout);
        jPanel44Layout.setHorizontalGroup(
            jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel44Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel140, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel139, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel141, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(75, 75, 75)
                .addGroup(jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel44Layout.createSequentialGroup()
                        .addComponent(ps1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63)
                        .addComponent(ps2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75)
                        .addComponent(ps3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel44Layout.createSequentialGroup()
                        .addGroup(jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cr1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mr1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(63, 63, 63)
                        .addGroup(jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cr2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mr2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(75, 75, 75)
                        .addGroup(jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mr3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cr3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(69, 69, 69)
                .addGroup(jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton21)
                    .addComponent(ps4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(cr4)
                        .addComponent(mr4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel44Layout.createSequentialGroup()
                        .addComponent(lblmr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(lblcr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblps, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblmr1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, Short.MAX_VALUE)))
        );
        jPanel44Layout.setVerticalGroup(
            jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel44Layout.createSequentialGroup()
                .addContainerGap(102, Short.MAX_VALUE)
                .addGroup(jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel44Layout.createSequentialGroup()
                        .addGroup(jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ps4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblps, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(73, 73, 73)
                        .addGroup(jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cr4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblcr, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addComponent(lblmr1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mr4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblmr, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel44Layout.createSequentialGroup()
                        .addGroup(jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ps2)
                            .addComponent(jLabel139, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ps3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ps1))
                        .addGap(73, 73, 73)
                        .addGroup(jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel44Layout.createSequentialGroup()
                                .addGroup(jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel44Layout.createSequentialGroup()
                                        .addComponent(cr3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(66, 66, 66))
                                    .addGroup(jPanel44Layout.createSequentialGroup()
                                        .addGroup(jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(cr2, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cr1))
                                        .addGap(64, 64, 64)))
                                .addGroup(jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(mr3)
                                    .addComponent(jLabel141, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(mr1, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                                    .addComponent(mr2)))
                            .addComponent(jLabel140, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(40, 40, 40)
                .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        jLabel142.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/back.png"))); // NOI18N
        jLabel142.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel142MouseClicked(evt);
            }
        });
        jLabel142.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jLabel142KeyPressed(evt);
            }
        });

        jLabel143.setBackground(new java.awt.Color(255, 255, 255));
        jLabel143.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel143.setForeground(new java.awt.Color(0, 204, 204));
        jLabel143.setText("      Update Analysis Parameter");

        javax.swing.GroupLayout pnlUpdateAnalysisParameterLayout = new javax.swing.GroupLayout(pnlUpdateAnalysisParameter);
        pnlUpdateAnalysisParameter.setLayout(pnlUpdateAnalysisParameterLayout);
        pnlUpdateAnalysisParameterLayout.setHorizontalGroup(
            pnlUpdateAnalysisParameterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUpdateAnalysisParameterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel142)
                .addGap(275, 275, 275)
                .addGroup(pnlUpdateAnalysisParameterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel143, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel44, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(236, Short.MAX_VALUE))
        );
        pnlUpdateAnalysisParameterLayout.setVerticalGroup(
            pnlUpdateAnalysisParameterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUpdateAnalysisParameterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel142)
                .addGap(49, 49, 49)
                .addComponent(jLabel143, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jPanel44, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(303, Short.MAX_VALUE))
        );

        pnlBody.add(pnlUpdateAnalysisParameter, "card26");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlBody, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1630, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlBody, javax.swing.GroupLayout.DEFAULT_SIZE, 966, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(1500, 1200));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public boolean isAlphabet(String name) {
        return name.matches("[a-zA-Z]+");
    }
    private void btnExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMouseEntered
        btnExit.setBackground(new Color(232, 17, 35));
    }//GEN-LAST:event_btnExitMouseEntered

    private void btnExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMouseExited
        btnExit.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_btnExitMouseExited

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnMaximizeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMaximizeMouseEntered
        btnMaximize.setBackground(new Color(229, 229, 229));
    }//GEN-LAST:event_btnMaximizeMouseEntered

    private void btnMaximizeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMaximizeMouseExited
        btnMaximize.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_btnMaximizeMouseExited

    private void btnMaximizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMaximizeActionPerformed
        if (maximized) {
            //handle fullscreen - taskbar
            Dashboard.this.setExtendedState(JFrame.MAXIMIZED_BOTH);
            GraphicsEnvironment env = GraphicsEnvironment.getLocalGraphicsEnvironment();
            Dashboard.this.setMaximizedBounds(env.getMaximumWindowBounds());
            maximized = false;
        } else {
            setExtendedState(JFrame.NORMAL);
            maximized = true;
        }
    }//GEN-LAST:event_btnMaximizeActionPerformed

    private void btnMinimizeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMinimizeMouseEntered
        btnMinimize.setBackground(new Color(229, 229, 229));
    }//GEN-LAST:event_btnMinimizeMouseEntered

    private void btnMinimizeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMinimizeMouseExited
        btnMinimize.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_btnMinimizeMouseExited

    private void btnMinimizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinimizeActionPerformed
        this.setState(Frame.ICONIFIED);
    }//GEN-LAST:event_btnMinimizeActionPerformed

    private void pnlHeaderMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlHeaderMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_pnlHeaderMousePressed

    private void pnlHeaderMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlHeaderMouseDragged
        if (maximized) {
            int x = evt.getXOnScreen();
            int y = evt.getYOnScreen();
            this.setLocation(x - xMouse, y - yMouse);
        }
    }//GEN-LAST:event_pnlHeaderMouseDragged

    private void btnProffessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProffessorActionPerformed
        lblNews.setBackground(new Color(0, 204, 106));

        lblTimeline.setBackground(new Color(255, 255, 255));
        lblTrending.setBackground(new Color(255, 255, 255));
        lblQA.setBackground(new Color(255, 255, 255));

        pnlBody.removeAll();
        pnlBody.repaint();
        pnlBody.revalidate();
        pnlBody.add(pnlProffesor);
        pnlBody.repaint();
        pnlBody.revalidate();
    }//GEN-LAST:event_btnProffessorActionPerformed

    private void btnFacultyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFacultyActionPerformed
        lblTrending.setBackground(new Color(0, 204, 106));

        lblTimeline.setBackground(new Color(255, 255, 255));
        lblNews.setBackground(new Color(255, 255, 255));
        lblQA.setBackground(new Color(255, 255, 255));

        pnlBody.removeAll();
        pnlBody.repaint();
        pnlBody.revalidate();
        pnlBody.add(pnlFaculty);
        pnlBody.repaint();
        pnlBody.revalidate();
    }//GEN-LAST:event_btnFacultyActionPerformed

    private void btnClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClassActionPerformed
        lblQA.setBackground(new Color(0, 204, 106));

        lblTimeline.setBackground(new Color(255, 255, 255));
        lblNews.setBackground(new Color(255, 255, 255));
        lblTrending.setBackground(new Color(255, 255, 255));

        pnlBody.removeAll();
        pnlBody.repaint();
        pnlBody.revalidate();
        pnlBody.add(pnlClass);
        pnlBody.repaint();
        pnlBody.revalidate();
    }//GEN-LAST:event_btnClassActionPerformed

    private void btnScheduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnScheduleActionPerformed
        lblTimeline.setBackground(new Color(0, 204, 106));

        lblQA.setBackground(new Color(255, 255, 255));
        lblNews.setBackground(new Color(255, 255, 255));
        lblTrending.setBackground(new Color(255, 255, 255));

        pnlBody.removeAll();
        pnlBody.repaint();
        pnlBody.revalidate();
        pnlBody.add(jspSchedule);
        pnlBody.repaint();
        pnlBody.revalidate();
    }//GEN-LAST:event_btnScheduleActionPerformed

    private void logoutlblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutlblMouseClicked
        login l = new login();
        l.setVisible(true);
        this.hide();
        // TODO add your handling code here:
    }//GEN-LAST:event_logoutlblMouseClicked

    private void logoutlblFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_logoutlblFocusGained

        // TODO add your handling code here:
    }//GEN-LAST:event_logoutlblFocusGained

    private void logoutlblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutlblMouseEntered
        logoutlbl.setForeground(Color.white);        // TODO add your handling code here:
    }//GEN-LAST:event_logoutlblMouseEntered

    private void logoutlblMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutlblMouseExited
        logoutlbl.setForeground(new Color(51, 51, 51));        // TODO add your handling code here:
    }//GEN-LAST:event_logoutlblMouseExited

    private void facultyNametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facultyNametxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_facultyNametxtActionPerformed
    public boolean isValidFacultyInput() {
        clearAddFacultyWarnings();
        boolean result = true;
        if (facultyNametxt.getText().isEmpty()) {
            facultyNamelbl.setText("*Enter Faculty name");
            facultyNamelbl.setVisible(true);
            result = false;
        } else if (isFacultyExists(facultyNametxt.getText())) {
            facultyNamelbl.setText("*Faculty already exists");
            facultyNamelbl.setVisible(true);
            result = false;
        }
        if (facultyDesctxtarea.getText().isEmpty()) {
            FacultyDesclbl.setText("*Enter Faculty Description");
            FacultyDesclbl.setVisible(true);
            result = false;
        }

        return result;

    }

    public void clearAddFacultyWarnings() {
        FacultyDesclbl.setVisible(false);
        facultyNamelbl.setVisible(false);
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (isValidFacultyInput()) {
            DB_Connect dc = new DB_Connect();
            dc.connectDatabase();
            String SQL = "insert into faculty values(?,?);";
            try {
                PreparedStatement ps = dc.conn.prepareStatement(SQL);
                ps.setString(1, facultyNametxt.getText());
                ps.setString(2, facultyDesctxtarea.getText());
                int rs = ps.executeUpdate();
                if (rs == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Faculty " + facultyNametxt.getText() + " added successfully");
                    facultyNametxt.setText("");
                    facultyDesctxtarea.setText("");
                }
            } catch (SQLException ex) {
                System.out.println("unable  to connect database");
            }
            dc.closeDBConnection();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void pnlFacultyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlFacultyMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_pnlFacultyMouseClicked

    private void jPanel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel9MouseClicked
        pnlBody.removeAll();
        pnlBody.repaint();
        pnlBody.revalidate();
        pnlBody.add(pnlAddFaculty);
        pnlBody.repaint();
        pnlBody.revalidate();        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel9MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        pnlBody.removeAll();
        pnlBody.repaint();
        pnlBody.revalidate();
        pnlBody.add(pnlFaculty);
        pnlBody.repaint();
        pnlBody.revalidate();        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel2MouseClicked

    public static DefaultTableModel buildTableModel(ResultSet rs)
            throws SQLException {

        ResultSetMetaData metaData = rs.getMetaData();

        // names of columns
        Vector<String> columnNames = new Vector<String>();
        int columnCount = metaData.getColumnCount();
        for (int column = 1; column <= columnCount; column++) {
            columnNames.add(metaData.getColumnName(column));
        }

        // data of the table
        Vector<Vector<Object>> data = new Vector<Vector<Object>>();
        while (rs.next()) {
            Vector<Object> vector = new Vector<Object>();
            for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
                vector.add(rs.getObject(columnIndex));
            }
            data.add(vector);
        }

        return new DefaultTableModel(data, columnNames);
    }
    private void jPanel7KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel7KeyPressed

        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel7KeyPressed
    public void displayFaculty() {

        pnlBody.removeAll();
        pnlBody.repaint();
        pnlBody.revalidate();
        pnlBody.add(pnlmainViewFaculty);

        pnlBody.repaint();
        pnlBody.revalidate();
        pnlViewFaculty.removeAll();
        pnlViewFaculty.repaint();
        pnlViewFaculty.revalidate();

        // noResultFacultylbl.setVisible(false);
        String query;
        ResultSet rs = null;
        try {
            DB_Connect dc = new DB_Connect();
            dc.connectDatabase();
            Statement s = dc.conn.createStatement();
            query = "select * from faculty order by facultyName asc";

            rs = s.executeQuery(query);

            if (!rs.isBeforeFirst()) {
                JOptionPane.showMessageDialog(rootPane, "No faculty found");
            } else {
                JPanel facDetailspnl = null;
                JLabel namelbl = null;
                pnlViewFaculty.setLayout(new FlowLayout(FlowLayout.LEFT, 300, 200));
                while (rs.next()) {

                    facDetailspnl = new JPanel(new BorderLayout(30, 20));
                    facDetailspnl.setSize(250, 251);
                    facDetailspnl.setBackground(new Color(0, 204, 204));
                    Icon icon = new ImageIcon(getClass().getResource("course-info.png"));
                    namelbl = new JLabel();
                    namelbl.setText(rs.getString("facultyName"));
                    namelbl.setIcon(icon);
                    namelbl.setHorizontalTextPosition(SwingConstants.CENTER);
                    namelbl.setVerticalTextPosition(SwingConstants.BOTTOM);
                    namelbl.setFont(new Font("Arial", Font.BOLD, 25));
                    facDetailspnl.add(namelbl, BorderLayout.CENTER);

                    facDetailspnl.setSize(250, 251);
                    facDetailspnl.setName(rs.getString("facultyName"));
                    facDetailspnl.setCursor(Cursor.getPredefinedCursor(12));
                    facDetailspnl.setBorder(BorderFactory.createLineBorder(new Color(0, 204, 204), 3));
                    pnlViewFaculty.add(facDetailspnl);

                    facDetailspnl.addMouseListener(new MouseAdapter() {
                        @Override
                        public void mouseClicked(MouseEvent me) {
                            if (me.getButton() == MouseEvent.BUTTON1) {

                                try {

                                    pnlBody.removeAll();
                                    pnlBody.repaint();
                                    pnlBody.revalidate();
                                    pnlBody.add(pnlViewSemester);
                                    pnlBody.repaint();
                                    pnlBody.revalidate();
                                    facName.setText(me.getComponent().getName());
                                    DB_Connect dc = new DB_Connect();
                                    dc.connectDatabase();
                                    Statement s = dc.conn.createStatement();
                                    String query = "select * from faculty where facultyName='" + me.getComponent().getName() + "';";
                                    ResultSet rs = s.executeQuery(query);
                                    while (rs.next()) {
                                        facultyDescriptionviewsemlbl.setText(rs.getString("facultyDescription"));
                                    }
                                    dc.closeDBConnection();
                                } catch (SQLException ex) {
                                    Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
                                }

                            } else if (me.getButton() == MouseEvent.BUTTON3) {
                                int conf = JOptionPane.showConfirmDialog(rootPane, "Do you wanna delete Faculty " + me.getComponent().getName());
                                if (conf == 0) {
                                    try {
                                        DB_Connect dc = new DB_Connect();
                                        dc.connectDatabase();
                                        Statement s = dc.conn.createStatement();
                                        /* String query = "DELETE t FROM teaches t INNER JOIN subject s ON t.subjectCode=s.code INNER JOIN faculty f On f.facultyName=s.faculty "
                                                + "WHERE f.facultyName='" + me.getComponent().getName() + "';";
                                        int rs = s.executeUpdate(query);
                                        query = "DELETE s FROM subject s INNER JOIN faculty f On f.facultyName=s.faculty WHERE f.facultyName='" + me.getComponent().getName() + "';";
                                        int rs1 = s.executeUpdate(query);
                                         */
                                        String query = "DELETE from faculty where facultyName='" + me.getComponent().getName() + "';";
                                        int rs2 = s.executeUpdate(query);
                                        if (rs2 > 0) {
                                            JOptionPane.showMessageDialog(rootPane, "Faculty " + me.getComponent().getName() + " deleted sucessfully");
                                            displayFaculty();
                                        }
                                        dc.closeDBConnection();
                                    } catch (SQLException ex) {
                                        Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
                                    }
                                }
                            }

                        }
                    });
                }

            }

            dc.closeDBConnection();
        } catch (SQLException ex) {
            System.out.println("cant create statement" + ex);
        }
        // TODO add your handling code here: 

    }

    public void displayClass() {
        pnlBody.removeAll();
        pnlBody.repaint();
        pnlBody.revalidate();
        pnlBody.add(pnlmainViewClass);

        pnlBody.repaint();
        pnlBody.revalidate();
        pnlViewClass.removeAll();
        pnlViewClass.repaint();
        pnlViewClass.revalidate();

        // noResultFacultylbl.setVisible(false);
        String query;
        ResultSet rs = null;
        try {
            DB_Connect dc = new DB_Connect();
            dc.connectDatabase();
            Statement s = dc.conn.createStatement();
            query = "select * from classroom order by classNumber asc";

            rs = s.executeQuery(query);

            if (!rs.isBeforeFirst()) {
                JOptionPane.showMessageDialog(rootPane, "No classes found");
            } else {
                JPanel classDetailspnl = null;
                JLabel namelbl = null;
                pnlViewClass.setLayout(new FlowLayout(FlowLayout.LEFT, 300, 200));
                while (rs.next()) {

                    classDetailspnl = new JPanel(new BorderLayout(30, 20));
                    classDetailspnl.setSize(250, 251);
                    classDetailspnl.setBackground(new Color(0, 204, 204));
                    Icon icon = new ImageIcon(getClass().getResource("class-info.jpg"));
                    namelbl = new JLabel();
                    namelbl.setText(rs.getString("classNumber"));
                    namelbl.setIcon(icon);
                    namelbl.setHorizontalTextPosition(SwingConstants.CENTER);
                    namelbl.setVerticalTextPosition(SwingConstants.BOTTOM);
                    namelbl.setFont(new Font("Arial", Font.BOLD, 25));
                    classDetailspnl.add(namelbl, BorderLayout.CENTER);

                    classDetailspnl.setSize(250, 251);
                    classDetailspnl.setName(rs.getString("classNumber"));
                    classDetailspnl.setCursor(Cursor.getPredefinedCursor(12));
                    classDetailspnl.setBorder(BorderFactory.createLineBorder(new Color(0, 204, 204), 3));

                    pnlViewClass.add(classDetailspnl);

                    classDetailspnl.addMouseListener(new MouseAdapter() {
                        @Override
                        public void mouseClicked(MouseEvent me) {
                            String query;
                            ResultSet rs = null;
                            clearSubjectUpdateWarnings();

                            try {
                                //System.out.println(me.getComponent().getName());
                                clearSubjectUpdateWarnings();
                                DB_Connect dc = new DB_Connect();
                                dc.connectDatabase();
                                Statement s = dc.conn.createStatement();
                                query = "select * from classroom where classNumber='" + me.getComponent().getName() + "';";

                                rs = s.executeQuery(query);

                                while (rs.next()) {

                                    classNumberUpdate = rs.getString("classNumber");
                                    classCapacityUpdate = rs.getString("classCapacity");
                                    classFloorUpdate = rs.getString("classFloor");

                                    classNumbertxt1.setText(classNumberUpdate);
                                    classCapacitytxt1.setText(classCapacityUpdate);
                                    classFloortxt1.setText(classFloorUpdate);

                                }

                                pnlBody.removeAll();
                                pnlBody.repaint();
                                pnlBody.revalidate();
                                pnlBody.add(pnlUpdateClass);
                                pnlBody.repaint();
                                pnlBody.revalidate();
                                clearUpdateClassWarnings();
                                dc.closeDBConnection();
                            } catch (SQLException ex) {
                                Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    });
                }

            }

            dc.closeDBConnection();
        } catch (SQLException ex) {
            System.out.println("cant create statement" + ex);
        }
        // TODO add your handling code here: 
    }

    String facultyName = null;
    String facultyDescription = null;

    String classNumberUpdate = null;
    String classFloorUpdate = null;
    String classCapacityUpdate = null;
    private void jPanel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel7MouseClicked
        displayFaculty();

    }//GEN-LAST:event_jPanel7MouseClicked

    private void subjectNametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectNametxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subjectNametxtActionPerformed
    public void clearAddSubjectWarnings() {
        SubjectNamelbl.setVisible(false);
        subjectCodelbl.setVisible(false);
        subjectFacultylbl.setVisible(false);
        subjectSemesterlbl.setVisible(false);
        subjectProffesorlbl.setVisible(false);
    }

    public boolean isAlphabetWithSpace(String name) {
        return name.matches("[a-zA-Z]+[\\p{javaSpaceChar}]?[a-zA-Z ]+");
    }

    public boolean isValidSubjectInput() {
        clearAddSubjectWarnings();
        boolean result = true;
        if (subjectNametxt.getText().isEmpty()) {
            SubjectNamelbl.setText("*Enter Subject name");
            SubjectNamelbl.setVisible(true);
            result = false;
        } else if (!isAlphabetWithSpace(subjectNametxt.getText())) {
            SubjectNamelbl.setText("*Invalid Subject name");
            SubjectNamelbl.setVisible(true);
            result = false;
        }
        if (subjectCodetxt.getText().isEmpty()) {
            subjectCodelbl.setText("*Enter Subject code");
            subjectCodelbl.setVisible(true);
            result = false;
        } else if (isSubjectExists(subjectCodetxt.getText())) {
            subjectCodelbl.setText("Subject code exists!");
            subjectCodelbl.setVisible(true);
            result = false;
        }
        if (subjectFaultyCombo.getSelectedIndex() == 0) {
            subjectFacultylbl.setVisible(true);
            result = false;
        }
        if (subjectSemesterCombo.getSelectedIndex() == 0) {
            subjectSemesterlbl.setVisible(true);
            result = false;
        }
        if (proflist.isSelectionEmpty()) {
            subjectProffesorlbl.setVisible(true);
        }

        return result;
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (isValidSubjectInput()) {
            DB_Connect dc = new DB_Connect();
            dc.connectDatabase();
            String SQL = "insert into subject values(?,?,?,?);";
            try {
                PreparedStatement ps = dc.conn.prepareStatement(SQL);
                ps.setString(1, subjectNametxt.getText());
                ps.setString(2, subjectCodetxt.getText());
                ps.setString(3, subjectFaultyCombo.getSelectedItem().toString());
                ps.setString(4, subjectSemesterCombo.getSelectedItem().toString());
                int rs1 = ps.executeUpdate();

                SQL = "insert into teaches values(?,?)";
                if (proflist.getSelectedIndices().length > 1) {
                    for (int i = 1; i < proflist.getSelectedIndices().length; i++) {
                        SQL += ",(?,?)";
                    }
                }
                SQL += ";";
                ps = dc.conn.prepareStatement(SQL);

                int j = 1;
                for (int i : proflist.getSelectedIndices()) {
                    ps.setString(j, subjectCodetxt.getText());
                    ps.setString(j + 1, profusername.get(i));
                    j = j + 2;
                }
                int rs2 = ps.executeUpdate();

                if (rs2 >= 1 && rs1 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "subject " + subjectNametxt.getText() + " added successfully");
                    clearAddSubjectForm();
                }
            } catch (SQLException ex) {
                System.out.println("unable  to connect database");
            }
            dc.closeDBConnection();
        }// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
    public void clearAddSubjectForm() {
        subjectNametxt.setText("");
        subjectCodetxt.setText("");
        subjectFaultyCombo.setSelectedIndex(0);
        subjectSemesterCombo.setSelectedIndex(0);
        proflist.clearSelection();

    }
    private void subjectCodetxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectCodetxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subjectCodetxtActionPerformed
    JList proflist = null;
    ArrayList<String> profusername = null;
    private void jPanel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel8MouseClicked
        String query;
        ArrayList data = new ArrayList();
        ResultSet rs = null;
        try {
            DB_Connect dc = new DB_Connect();
            dc.connectDatabase();
            Statement s = dc.conn.createStatement();
            query = "select facultyName from faculty order by facultyName asc";

            rs = s.executeQuery(query);
            subjectFaultyCombo.addItem(" ");
            while (rs.next()) {
                subjectFaultyCombo.addItem(rs.getString("facultyName"));

            }

            query = "select firstName,lastName,username from professor order by firstName";

            rs = s.executeQuery(query);
            String a = "";
            ArrayList<String> profname = new ArrayList();
            profusername = new ArrayList();
            Vector<String> listData = new Vector<>();
            while (rs.next()) {
                a = rs.getString("firstName") + " " + rs.getString("lastName");
                profname.add(a);
                listData.add(a);
                profusername.add(rs.getString("username"));
                //System.out.println(a);

            }
            proflist = new JList(listData);
            profScrollPane.getViewport().add(proflist, null);
            dc.closeDBConnection();
        } catch (SQLException ex) {
            System.out.println("cant create statement" + ex);
        }
        clearAddSubjectForm();
        clearAddSubjectWarnings();
        pnlBody.removeAll();
        pnlBody.repaint();
        pnlBody.revalidate();
        pnlBody.add(pnlAddSubject);
        pnlBody.repaint();
        pnlBody.revalidate();
        // TODO add your handling code here:     // TODO add your handling code here:
    }//GEN-LAST:event_jPanel8MouseClicked

    private void jLabel35MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel35MouseClicked
        pnlBody.removeAll();
        pnlBody.repaint();
        pnlBody.revalidate();
        pnlBody.add(pnlFaculty);
        pnlBody.repaint();
        pnlBody.revalidate();
        subjectFaultyCombo.removeAllItems();
    }//GEN-LAST:event_jLabel35MouseClicked

    private void professorFnametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_professorFnametxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_professorFnametxtActionPerformed

    private void professorUnametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_professorUnametxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_professorUnametxtActionPerformed
    public boolean isValidEmailAddress(String email) {
        String ePattern = "^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$";
        java.util.regex.Pattern p = java.util.regex.Pattern.compile(ePattern);
        java.util.regex.Matcher m = p.matcher(email);
        return m.matches();
    }

    public void clearProfessorWarnings() {
        professorFnamelbl.setVisible(false);
        professorLnamelbl.setVisible(false);
        professorUnamelbl.setVisible(false);
        professorFnamelbl.setVisible(false);
        professorPasswordlbl.setVisible(false);
        professorCpasswordlbl.setVisible(false);
        professorPhonelbl.setVisible(false);
        professorEmaillbl.setVisible(false);

    }

    public void clearProfessorUpdateWarnings() {
        professorFnamelbl1.setVisible(false);
        professorLnamelbl1.setVisible(false);
        professorUnamelbl1.setVisible(false);
        professorFnamelbl1.setVisible(false);
        professorPasswordlbl1.setVisible(false);
        professorCpasswordlbl1.setVisible(false);
        professorPhonelbl1.setVisible(false);
        professorEmaillbl1.setVisible(false);

    }

    public boolean isNumeric(String a) {
        return a.matches("-?\\d+(\\.\\d+)?");
    }

    public boolean isUsernameExists(String uName) {
        boolean result = false;
        try {
            String query;
            ArrayList data = new ArrayList();
            ResultSet rs = null;

            DB_Connect dc = new DB_Connect();
            dc.connectDatabase();
            Statement s = dc.conn.createStatement();
            query = "select * from professor where username='" + uName + "';";

            rs = s.executeQuery(query);
            result = rs.isBeforeFirst();
            dc.closeDBConnection();
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
        return result;
    }

    public boolean isPhoneExists(String phone) {
        boolean result = false;
        try {
            String query;
            ArrayList data = new ArrayList();
            ResultSet rs = null;

            DB_Connect dc = new DB_Connect();
            dc.connectDatabase();
            Statement s = dc.conn.createStatement();
            query = "select * from professor where phone='" + phone + "';";

            rs = s.executeQuery(query);
            result = rs.isBeforeFirst();
            dc.closeDBConnection();
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
        return result;
    }

    public boolean isEmailExists(String email) {
        boolean result = false;
        try {
            String query;
            ArrayList data = new ArrayList();
            ResultSet rs = null;

            DB_Connect dc = new DB_Connect();
            dc.connectDatabase();
            Statement s = dc.conn.createStatement();
            query = "select * from professor where email='" + email + "';";

            rs = s.executeQuery(query);
            result = rs.isBeforeFirst();
            dc.closeDBConnection();
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }

        return result;
    }

    public boolean isFacultyExists(String faculty) {
        boolean result = false;
        try {
            String query;
            ArrayList data = new ArrayList();
            ResultSet rs = null;

            DB_Connect dc = new DB_Connect();
            dc.connectDatabase();
            Statement s = dc.conn.createStatement();
            query = "select * from faculty where facultyName='" + faculty + "';";

            rs = s.executeQuery(query);
            result = rs.isBeforeFirst();
            dc.closeDBConnection();
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }

        return result;
    }

    public boolean isSubjectExists(String code) {
        boolean result = false;
        try {
            String query;
            ArrayList data = new ArrayList();
            ResultSet rs = null;

            DB_Connect dc = new DB_Connect();
            dc.connectDatabase();
            Statement s = dc.conn.createStatement();
            query = "select * from subject where code='" + code + "';";

            rs = s.executeQuery(query);
            result = rs.isBeforeFirst();
            dc.closeDBConnection();
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
        return result;
    }

    public boolean isClassExists(String classNumber) {
        boolean result = false;
        try {
            String query;
            ArrayList data = new ArrayList();
            ResultSet rs = null;

            DB_Connect dc = new DB_Connect();
            dc.connectDatabase();
            Statement s = dc.conn.createStatement();
            query = "select * from classroom where classNumber='" + classNumber + "';";

            rs = s.executeQuery(query);
            result = rs.isBeforeFirst();
            dc.closeDBConnection();
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
        return result;
    }

    public boolean isValidProfessorInput() {
        boolean result = true;
        clearProfessorWarnings();
        if (professorFnametxt.getText().isEmpty()) {
            professorFnamelbl.setText("*Enter firstname");
            professorFnamelbl.setVisible(true);
            result = false;
        } else if (!isAlphabet(professorFnametxt.getText())) {
            professorFnamelbl.setText("*Invalid firstname");
            professorFnamelbl.setVisible(true);
            result = false;
        }
        if (professorLnametxt.getText().isEmpty()) {
            professorLnamelbl.setText("*Enter lastname");
            professorLnamelbl.setVisible(true);
            result = false;
        } else if (!isAlphabet(professorLnametxt.getText())) {
            professorLnamelbl.setText("*Invalid lastname");
            professorLnamelbl.setVisible(true);
            result = false;
        }
        if (professorUnametxt.getText().isEmpty()) {
            professorUnamelbl.setText("*Enter firstname");
            professorUnamelbl.setVisible(true);
            result = false;
        } else if (professorUnametxt.getText().length() < 5) {
            professorUnamelbl.setText("Enter username of length five!");
            professorUnamelbl.setVisible(true);
            result = false;
        } else if (isUsernameExists(professorUnametxt.getText())) {
            professorUnamelbl.setText("Username already exists!");
            professorUnamelbl.setVisible(true);
            result = false;
        }

        if (professorPasswordtxt.getText().isEmpty()) {
            professorPasswordlbl.setText("*Enter password");
            professorPasswordlbl.setVisible(true);
            result = false;
        } else if (professorCpasswordtxt.getText() == null ? professorPasswordtxt.getText() != null : !professorCpasswordtxt.getText().equals(professorPasswordtxt.getText())) {
            professorCpasswordlbl.setText("Password Doesnt Match");
            professorCpasswordlbl.setVisible(true);
            result = false;
        }

        if (!isNumeric(professorPhonetxt.getText())) {
            professorPhonelbl.setText("Enter Number");
            professorPhonelbl.setVisible(true);
            result = false;
        } else if (professorPhonetxt.getText().length() != 10) {
            professorPhonelbl.setText("Enter 10 digit number");
            professorPhonelbl.setVisible(true);
            result = false;
        } else if (isPhoneExists(professorPhonetxt.getText())) {
            professorPhonelbl.setText("Phone already exists");
            professorPhonelbl.setVisible(true);
            result = false;
        }

        if (!isValidEmailAddress(professorEmailtxt.getText())) {
            professorEmaillbl.setText("Enter valid email");

            professorEmaillbl.setVisible(true);
            result = false;
        } else if (isEmailExists(professorEmailtxt.getText())) {
            professorEmaillbl.setText("Email already exists");

            professorEmaillbl.setVisible(true);
            result = false;
        }
        return result;
    }

    public boolean isValidProfessorUpdateInput() {
        boolean result = true;
        clearProfessorUpdateWarnings();
        if (professorFnametxt1.getText().isEmpty()) {
            professorFnamelbl1.setText("*Enter firstname");
            professorFnamelbl1.setVisible(true);
            result = false;
        } else if (!isAlphabet(professorFnametxt1.getText())) {
            professorFnamelbl1.setText("*Invalid firstname");
            professorFnamelbl1.setVisible(true);
            result = false;
        }
        if (professorLnametxt1.getText().isEmpty()) {
            professorLnamelbl1.setText("*Enter lastname");
            professorLnamelbl1.setVisible(true);
            result = false;
        } else if (!isAlphabet(professorLnametxt1.getText())) {
            professorLnamelbl1.setText("*Invalid lastname");
            professorLnamelbl1.setVisible(true);
            result = false;
        }

        if (professorUnametxt1.getText().isEmpty()) {
            professorUnamelbl1.setText("*Enter firstname");
            professorUnamelbl1.setVisible(true);
            result = false;
        } else if (professorUnametxt1.getText().length() < 5) {
            professorUnamelbl1.setText("Enter username of length five!");
            professorUnamelbl1.setVisible(true);
            result = false;
        } else if ((!professorUnametxt1.getText().equals(profUsernameUpdate)) && isUsernameExists(professorUnametxt1.getText())) {
            professorUnamelbl1.setText("Username already exists!");
            professorUnamelbl1.setVisible(true);
            result = false;
        }

        if (professorPasswordtxt1.getText().isEmpty()) {
            professorPasswordlbl1.setText("*Enter password");
            professorPasswordlbl1.setVisible(true);
            result = false;
        } else if (professorCpasswordtxt1.getText() == null ? professorPasswordtxt1.getText() != null : !professorCpasswordtxt1.getText().equals(professorPasswordtxt1.getText())) {
            professorCpasswordlbl1.setText("Password Doesnt Match");
            professorCpasswordlbl1.setVisible(true);
            result = false;
        }

        if (!isNumeric(professorPhonetxt1.getText())) {
            professorPhonelbl1.setText("Enter Number");
            professorPhonelbl1.setVisible(true);
            result = false;
        } else if (professorPhonetxt1.getText().length() != 10) {
            professorPhonelbl1.setText("Enter 10 digit number");
            professorPhonelbl.setText("Enter 10 digit number");

            result = false;
        } else if ((!professorPhonetxt1.getText().equals(profPhoneUpdate)) && isPhoneExists(professorPhonetxt1.getText())) {
            professorPhonelbl1.setText("Phone already exists");
            professorPhonelbl1.setVisible(true);
            result = false;
        }

        if (!isValidEmailAddress(professorEmailtxt1.getText())) {
            professorEmaillbl1.setText("Enter valid email");
            professorEmaillbl1.setVisible(true);
            result = false;
        } else if ((!professorEmailtxt1.getText().equals(profEmailUpdate)) && isEmailExists(professorEmailtxt1.getText())) {
            professorEmaillbl1.setText("Email already exists");
            professorEmaillbl1.setVisible(true);
            result = false;
        }

        return result;
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (isValidProfessorInput()) {
            DB_Connect dc = new DB_Connect();
            dc.connectDatabase();
            String SQL = "insert into professor values(?,?,?,?,?,?);";
            try {
                PreparedStatement ps = dc.conn.prepareStatement(SQL);
                ps.setString(1, professorFnametxt.getText());
                ps.setString(2, professorLnametxt.getText());
                ps.setString(3, professorUnametxt.getText());
                ps.setString(4, professorPasswordtxt.getText());
                ps.setString(5, professorPhonetxt.getText());
                ps.setString(6, professorEmailtxt.getText());

                int rs = ps.executeUpdate();
                if (rs == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Professor " + professorFnametxt.getText() + " added successfully");
                    clearProfessorForm();
                }
            } catch (SQLException ex) {
                System.out.println("unable  to connect database");
            }
            dc.closeDBConnection();
        }
// TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jPanel17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel17MouseClicked
        clearProfessorWarnings();
        clearProfessorForm();
        pnlBody.removeAll();
        pnlBody.repaint();
        pnlBody.revalidate();
        pnlBody.add(pnlAddProffesor);
        pnlBody.repaint();
        pnlBody.revalidate();       // TODO add your handling code here:
    }//GEN-LAST:event_jPanel17MouseClicked

    private void jLabel52MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel52MouseClicked
        pnlBody.removeAll();
        pnlBody.repaint();
        pnlBody.revalidate();
        pnlBody.add(pnlProffesor);
        pnlBody.repaint();
        pnlBody.revalidate();        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel52MouseClicked

    private void jPanel20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel20MouseClicked
        clearAddClassWarnings();
        pnlBody.removeAll();
        pnlBody.repaint();
        pnlBody.revalidate();
        pnlBody.add(pnlAddClass);
        pnlBody.repaint();
        pnlBody.revalidate();
    }//GEN-LAST:event_jPanel20MouseClicked

    private void jPanel21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel21MouseClicked
        displayClass();
    }//GEN-LAST:event_jPanel21MouseClicked

    private void jPanel21KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel21KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel21KeyPressed

    private void classNumbertxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classNumbertxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_classNumbertxtActionPerformed
    public void clearAddClassWarnings() {
        classNumberlbl.setVisible(false);
        classCapacitylbl.setVisible(false);
        classFloorlbl.setVisible(false);
    }

    public void clearUpdateClassWarnings() {
        classNumberlbl1.setVisible(false);
        classCapacitylbl1.setVisible(false);
        classFloorlbl1.setVisible(false);
    }

    public boolean isValidClassInput() {
        clearAddClassWarnings();
        boolean result = true;
        if (classNumbertxt.getText().isEmpty()) {
            classNumberlbl.setText("*Enter Class Number");
            classNumberlbl.setVisible(true);
            result = false;
        } else if (!isNumeric(classNumbertxt.getText())) {
            classNumberlbl.setText("*Invalid Class Number");
            classNumberlbl.setVisible(true);
            result = false;
        }
        if (classCapacitytxt.getText().isEmpty()) {
            classCapacitylbl.setText("*Enter Class Capacity");
            classCapacitylbl.setVisible(true);
            result = false;
        } else if (!isNumeric(classCapacitytxt.getText())) {
            classCapacitylbl.setText("*Invalid Class Capacity");
            classCapacitylbl.setVisible(true);
            result = false;
        }
        if (classFloortxt.getText().isEmpty()) {
            classFloorlbl.setText("*Enter Floor of Class");
            classFloorlbl.setVisible(true);
            result = false;
        } else if (!isNumeric(classFloortxt.getText())) {
            classFloorlbl.setText("*Invalid Floor for Class");
            classFloorlbl.setVisible(true);
            result = false;
        }

        return result;
    }

    public boolean isValidUpdateClassInput() {
        clearUpdateClassWarnings();
        boolean result = true;
        if (classNumbertxt1.getText().isEmpty()) {
            classNumberlbl1.setText("*Enter Class Number");
            classNumberlbl1.setVisible(true);
            result = false;
        } else if (!isNumeric(classNumbertxt1.getText())) {
            classNumberlbl1.setText("*Invalid Class Number");
            classNumberlbl1.setVisible(true);
            result = false;
        } else if ((!classNumbertxt1.getText().equals(classNumberUpdate)) && isClassExists(classNumbertxt1.getText())) {
            classNumberlbl1.setText("*Class Number exists");
            classNumberlbl1.setVisible(true);
            result = false;
        }
        if (classCapacitytxt1.getText().isEmpty()) {
            classCapacitylbl1.setText("*Enter Class Capacity");
            classCapacitylbl1.setVisible(true);
            result = false;
        } else if (!isNumeric(classCapacitytxt1.getText())) {
            classCapacitylbl1.setText("*Invalid Class Capacity");
            classCapacitylbl1.setVisible(true);
            result = false;
        }
        if (classFloortxt1.getText().isEmpty()) {
            classFloorlbl1.setText("*Enter Floor of Class");
            classFloorlbl1.setVisible(true);
            result = false;
        } else if (!isNumeric(classFloortxt1.getText())) {
            classFloorlbl1.setText("*Invalid Floor for Class");
            classFloorlbl1.setVisible(true);
            result = false;
        }

        return result;
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (isValidClassInput()) {
            DB_Connect dc = new DB_Connect();
            dc.connectDatabase();
            String SQL = "insert into classroom values(?,?,?);";
            try {
                PreparedStatement ps = dc.conn.prepareStatement(SQL);
                ps.setString(1, classNumbertxt.getText());
                ps.setString(2, classFloortxt.getText());
                ps.setString(3, classCapacitytxt.getText());

                int rs = ps.executeUpdate();
                if (rs == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Class room " + classNumbertxt.getText() + " added successfully");
                    classNumbertxt.setText("");
                    classFloortxt.setText("");
                    classCapacitytxt.setText("");

                }
            } catch (SQLException ex) {
                System.out.println("unable  to connect database");
            }
            dc.closeDBConnection();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jPanel20KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel20KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel20KeyPressed

    private void jLabel63MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel63MouseClicked
        pnlBody.removeAll();
        pnlBody.repaint();
        pnlBody.revalidate();
        pnlBody.add(pnlClass);
        pnlBody.repaint();
        pnlBody.revalidate();      // TODO add your handling code here:
    }//GEN-LAST:event_jLabel63MouseClicked

    private void jLabel64MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel64MouseClicked
        pnlBody.removeAll();
        pnlBody.repaint();
        pnlBody.revalidate();
        pnlBody.add(pnlClass);
        pnlBody.repaint();
        pnlBody.revalidate();  // TODO add your handling code here:
    }//GEN-LAST:event_jLabel64MouseClicked
    public void displayProfessor() {

        pnlViewProffesor.removeAll();
        pnlViewProffesor.repaint();
        pnlViewProffesor.revalidate();

        pnlBody.removeAll();
        pnlBody.repaint();
        pnlBody.revalidate();
        pnlBody.add(pnlmainViewProfessor);
        pnlBody.repaint();
        pnlBody.revalidate();// TODO add your handling code here:'

        String query;
        ResultSet rs = null;
        try {
            DB_Connect dc = new DB_Connect();
            dc.connectDatabase();
            Statement s = dc.conn.createStatement();
            query = "select * from professor order by username asc";

            rs = s.executeQuery(query);

            if (!rs.isBeforeFirst()) {
                System.out.println("No professor");
            } else {
                JPanel profDetailspnl = null;
                JLabel namelbl = null;
                JLabel teacheslbl = null;
                pnlViewProffesor.setLayout(new FlowLayout(FlowLayout.LEFT, 240, 200));
                while (rs.next()) {

                    profDetailspnl = new JPanel(new BorderLayout(30, 20));
                    profDetailspnl.setSize(250, 251);
                    profDetailspnl.setBackground(new Color(0, 204, 204));
                    Icon icon = new ImageIcon(getClass().getResource("professor-info.png"));
                    namelbl = new JLabel();
                    namelbl.setText(rs.getString("firstName") + " " + rs.getString("lastName"));
                    namelbl.setIcon(icon);
                    namelbl.setHorizontalTextPosition(SwingConstants.CENTER);
                    namelbl.setVerticalTextPosition(SwingConstants.TOP);
                    namelbl.setFont(new Font("Arial", Font.BOLD, 25));
                    profDetailspnl.add(namelbl, BorderLayout.CENTER);

                    profDetailspnl.setSize(300, 300);
                    profDetailspnl.setName(rs.getString("username"));

                    DB_Connect dc1 = new DB_Connect();
                    dc1.connectDatabase();
                    Statement s1 = dc1.conn.createStatement();
                    query = "SELECT subject.name as name FROM teaches INNER JOIN professor ON professor.username = teaches.professorUsername INNER JOIN subject on subject.code=teaches.subjectCode "
                            + "where teaches.professorUsername='" + rs.getString("username") + "';";
                    ResultSet rs1 = s1.executeQuery(query);

                    if (!rs1.isBeforeFirst()) {
                        teacheslbl = new JLabel("No subject yet");
                    } else {
                        String temp = "Teaches ";
                        while (rs1.next()) {
                            temp += rs1.getString("name") + ",";
                        }
                        temp = temp.substring(0, temp.length() - 1);
                        teacheslbl = new JLabel(temp);

                    }
                    profDetailspnl.add(teacheslbl, BorderLayout.SOUTH);
                    profDetailspnl.setCursor(Cursor.getPredefinedCursor(12));
                    profDetailspnl.setBorder(BorderFactory.createLineBorder(new Color(0, 204, 204), 3));
                    pnlViewProffesor.add(profDetailspnl);

                    profDetailspnl.addMouseListener(new MouseAdapter() {
                        @Override
                        public void mouseClicked(MouseEvent me) {
                            try {
                                //System.out.println(me.getComponent().getName());
                                clearProfessorUpdateWarnings();
                                ResultSet rs = null;
                                DB_Connect dc = new DB_Connect();
                                dc.connectDatabase();
                                Statement s = dc.conn.createStatement();
                                String query = "select * from professor where username='" + me.getComponent().getName() + "';";

                                rs = s.executeQuery(query);
                                while (rs.next()) {
                                    profFNameUpdate = rs.getString("firstName");
                                    profLNameUpdate = rs.getString("lastName");
                                    profUsernameUpdate = rs.getString("username");
                                    profPasswordUpdate = rs.getString("password");
                                    profPhoneUpdate = rs.getString("phone");
                                    profEmailUpdate = rs.getString("email");

                                    professorFnametxt1.setText(rs.getString("firstName"));
                                    professorLnametxt1.setText(rs.getString("lastName"));
                                    professorUnametxt1.setText(rs.getString("username"));
                                    professorPasswordtxt1.setText(rs.getString("password"));
                                    professorCpasswordtxt1.setText(rs.getString("password"));
                                    professorPhonetxt1.setText(rs.getString("phone"));
                                    professorEmailtxt1.setText(rs.getString("email"));
                                }
                                pnlBody.removeAll();
                                pnlBody.repaint();
                                pnlBody.revalidate();
                                pnlBody.add(pnlUpdateProfessor);
                                pnlBody.repaint();
                                pnlBody.revalidate();
                                clearProfessorUpdateWarnings();
                                dc.closeDBConnection();
                            } catch (SQLException ex) {
                                Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
                            }

                        }
                    });
                }

            }

            dc.closeDBConnection();
        } catch (SQLException ex) {
            System.out.println("cant create statement" + ex);
        }       // TODO add your handling code here: 

    }
    private void jPanel16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel16MouseClicked
        displayProfessor();
    }//GEN-LAST:event_jPanel16MouseClicked
    String profFNameUpdate = null;
    String profLNameUpdate = null;
    String profUsernameUpdate = null;
    String profPasswordUpdate = null;
    String profPhoneUpdate = null;
    String profEmailUpdate = null;

    public void clearProfessorForm() {
        clearProfessorWarnings();
        professorFnametxt.setText("");
        professorLnametxt.setText("");
        professorUnametxt.setText("");
        professorPasswordtxt.setText("");
        professorCpasswordtxt.setText("");
        professorPhonetxt.setText("");
        professorEmailtxt.setText("");
    }

    public void clearProfessorUpdateForm() {
        clearProfessorUpdateWarnings();
        professorFnametxt1.setText("");
        professorLnametxt1.setText("");
        professorUnametxt1.setText("");
        professorPasswordtxt1.setText("");
        professorPhonetxt1.setText("");
        professorEmailtxt1.setText("");
    }
    private void professorFnametxt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_professorFnametxt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_professorFnametxt1ActionPerformed

    private void professorUnametxt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_professorUnametxt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_professorUnametxt1ActionPerformed

    private void jLabel75MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel75MouseClicked

        displayProfessor();
// TODO add your handling code here:
    }//GEN-LAST:event_jLabel75MouseClicked
    public boolean isProfessorUpdateChanges() {
        return !(profFNameUpdate.equals(professorFnametxt1.getText()) && profLNameUpdate.equals(professorLnametxt1.getText()) && profUsernameUpdate.equals(professorUnametxt1.getText())
                && profPasswordUpdate.equals(professorPasswordtxt1.getText()) && profEmailUpdate.equals(professorEmailtxt1.getText()) && profPhoneUpdate.equals(professorPhonetxt1.getText()));
    }
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if (isValidProfessorUpdateInput()) {
            if (isProfessorUpdateChanges()) {
                DB_Connect dc = new DB_Connect();
                dc.connectDatabase();

                String SQL = "update professor set firstName=? ,lastName=? ,username=?, password=? ,phone=?, email=? where username=?";
                try {
                    PreparedStatement ps = dc.conn.prepareStatement(SQL);
                    ps.setString(1, professorFnametxt1.getText());
                    ps.setString(2, professorLnametxt1.getText());
                    ps.setString(3, professorUnametxt1.getText());
                    ps.setString(4, professorPasswordtxt1.getText());
                    ps.setString(5, professorPhonetxt1.getText());
                    ps.setString(6, professorEmailtxt1.getText());
                    ps.setString(7, profUsernameUpdate);
                    int rs1 = ps.executeUpdate();
                    if (rs1 == 1) {
                        ResultSet rs;

                        Statement s = dc.conn.createStatement();
                        String query = "select * from professor where username='" + professorUnametxt1.getText() + "';";

                        rs = s.executeQuery(query);
                        while (rs.next()) {
                            profFNameUpdate = rs.getString("firstName");
                            profLNameUpdate = rs.getString("lastName");
                            profUsernameUpdate = rs.getString("username");
                            profPasswordUpdate = rs.getString("password");
                            profPhoneUpdate = rs.getString("phone");
                            profEmailUpdate = rs.getString("email");

                            JOptionPane.showMessageDialog(rootPane, "Professor updated");

                        }

                    }
                } catch (SQLException ex) {
                    System.out.println("unable  to connect database");
                }
                dc.closeDBConnection();
            } else {
                JOptionPane.showMessageDialog(rootPane, "No changes detected");
            }
        }// TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        try {

            DB_Connect dc = new DB_Connect();
            dc.connectDatabase();
            Statement s = dc.conn.createStatement();
            /*String query = "DELETE t FROM teaches t INNER JOIN professor p On t.professorUsername=p.username WHERE p.username='" + profUsernameUpdate + "';";
            int rs1 = s.executeUpdate(query);*/

            String SQL = "DELETE FROM professor WHERE username=?;";

            PreparedStatement ps = dc.conn.prepareStatement(SQL);
            ps.setString(1, profUsernameUpdate);
            int rs = ps.executeUpdate();
            dc.closeDBConnection();
            JOptionPane.showMessageDialog(rootPane, "Proffesr " + profUsernameUpdate + " deleted successfully");
            displayProfessor();
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton7ActionPerformed
    public void clearSubjectUpdateWarnings() {
        SubjectNamelbl1.setVisible(false);
        subjectCodelbl1.setVisible(false);
        subjectFacultylbl1.setVisible(false);
        subjectSemesterlbl1.setVisible(false);
        subjectProffesorlbl1.setVisible(false);
    }

    public boolean isValidSubjectUpdateInput() {

        clearSubjectUpdateWarnings();
        boolean result = true;
        if (subjectNametxt1.getText().isEmpty()) {
            SubjectNamelbl1.setText("*Enter Subject name");
            SubjectNamelbl1.setVisible(true);
            result = false;
        } else if (!isAlphabet(subjectNametxt1.getText())) {
            SubjectNamelbl1.setText("*Invalid Subject name");
            SubjectNamelbl1.setVisible(true);
            result = false;
        }
        if (subjectCodetxt1.getText().isEmpty()) {
            subjectCodelbl1.setText("*Enter Subject code");
            subjectCodelbl1.setVisible(true);
            result = false;
        } else if ((!subjectCodetxt1.getText().equals(subjectCodeUpdate)) && isSubjectExists(subjectCodetxt1.getText())) {
            subjectCodelbl1.setText("Subject code already exists!");
            subjectCodelbl1.setVisible(true);
            result = false;
        }
        if (subjectFaultyCombo1.getSelectedIndex() == 0) {
            subjectFacultylbl1.setVisible(true);
            result = false;
        }
        if (subjectSemesterCombo1.getSelectedIndex() == 0) {
            subjectSemesterlbl1.setVisible(true);
            result = false;
        }
        if (proflist.isSelectionEmpty()) {
            subjectProffesorlbl1.setVisible(true);
        }

        return result;

    }

    public void displaySemesterSubject(String sem) {
        pnlBody.removeAll();
        pnlBody.repaint();
        pnlBody.revalidate();
        pnlBody.add(pnlmainViewSubject);
        pnlBody.repaint();
        pnlBody.revalidate();

        pnlSubjectSemester.removeAll();
        pnlSubjectSemester.repaint();
        pnlSubjectSemester.revalidate();

        String query;
        ResultSet rs = null;

        try {
            DB_Connect dc = new DB_Connect();
            dc.connectDatabase();
            Statement s = dc.conn.createStatement();
            query = "select * from subject where faculty='" + facName.getText() + "' and semester='" + sem + "';";

            rs = s.executeQuery(query);

            if (!rs.isBeforeFirst()) {
                JOptionPane.showMessageDialog(rootPane, "No subjects found");
                pnlBody.removeAll();
                pnlBody.repaint();
                pnlBody.revalidate();
                pnlBody.add(pnlViewSemester);
                pnlBody.repaint();
                pnlBody.revalidate();
            } else {
                JPanel semDetailspnl = null;
                JLabel namelbl = null;
                pnlSubjectSemester.setLayout(new FlowLayout(FlowLayout.LEFT, 240, 200));
                while (rs.next()) {

                    semDetailspnl = new JPanel(new BorderLayout(30, 20));
                    semDetailspnl.setSize(250, 251);
                    semDetailspnl.setBackground(new Color(0, 204, 204));
                    Icon icon = new ImageIcon(getClass().getResource("subject-info.png"));
                    namelbl = new JLabel();
                    namelbl.setText(rs.getString("name"));
                    namelbl.setIcon(icon);
                    namelbl.setHorizontalTextPosition(SwingConstants.CENTER);
                    namelbl.setVerticalTextPosition(SwingConstants.BOTTOM);
                    namelbl.setFont(new Font("Arial", Font.BOLD, 25));
                    semDetailspnl.add(namelbl, BorderLayout.CENTER);

                    semDetailspnl.setSize(300, 300);
                    semDetailspnl.setName(rs.getString("code"));
                    semDetailspnl.setCursor(Cursor.getPredefinedCursor(12));
                    semDetailspnl.setBorder(BorderFactory.createLineBorder(new Color(0, 204, 204), 3));
                    pnlSubjectSemester.add(semDetailspnl);

                    semDetailspnl.addMouseListener(new MouseAdapter() {
                        @Override
                        public void mouseClicked(MouseEvent me) {

                            String query;
                            ArrayList data = new ArrayList();
                            ResultSet rs = null;
                            try {
                                DB_Connect dc = new DB_Connect();
                                dc.connectDatabase();
                                Statement s = dc.conn.createStatement();
                                query = "select facultyName from faculty order by facultyName asc";

                                rs = s.executeQuery(query);
                                subjectFaultyCombo1.removeAllItems();
                                subjectFaultyCombo1.addItem(" ");
                                while (rs.next()) {
                                    subjectFaultyCombo1.addItem(rs.getString("facultyName"));

                                }

                                query = "select firstName,lastName,username from professor order by firstName";

                                rs = s.executeQuery(query);
                                String a = "";
                                ArrayList<String> profname = new ArrayList();
                                profusername = new ArrayList();
                                Vector<String> listData = new Vector<>();
                                while (rs.next()) {
                                    a = rs.getString("firstName") + " " + rs.getString("lastName");
                                    profname.add(a);
                                    listData.add(a);
                                    profusername.add(rs.getString("username"));
                                    //System.out.println(a);

                                }
                                proflist = new JList(listData);
                                profScrollPane1.getViewport().add(proflist, null);
                                dc.closeDBConnection();
                            } catch (SQLException ex) {
                                System.out.println("cant create statement" + ex);
                            }
                            clearSubjectUpdateWarnings();

                            try {
                                //System.out.println(me.getComponent().getName());
                                clearSubjectUpdateWarnings();
                                rs = null;
                                DB_Connect dc = new DB_Connect();
                                dc.connectDatabase();
                                Statement s = dc.conn.createStatement();
                                query = "select * from subject where code='" + me.getComponent().getName() + "';";

                                rs = s.executeQuery(query);
                                query = "select * from teaches where subjectCode='" + me.getComponent().getName() + "';";

                                while (rs.next()) {

                                    subjectNameUpdate = rs.getString("name");
                                    subjectCodeUpdate = rs.getString("code");
                                    subjectFacultyUpdate = rs.getString("faculty");
                                    subjectSemesterUpdate = rs.getString("semester");

                                    subjectNametxt1.setText(rs.getString("name"));
                                    subjectCodetxt1.setText(rs.getString("code"));
                                    subjectFaultyCombo1.setSelectedItem(rs.getString("faculty"));
                                    subjectSemesterCombo1.setSelectedItem(rs.getString("semester"));

                                }
                                ResultSet rs1 = s.executeQuery(query);
                                rs1.last();
                                indices = new int[rs1.getRow()];
                                rs1.beforeFirst();
                                int j = 0;
                                while (rs1.next()) {

                                    for (int i = 0; i < profusername.size(); i++) {
                                        if (profusername.get(i).equals(rs1.getString("professorUsername"))) {
                                            indices[j] = i;
                                            j = j + 1;
                                            break;
                                        }
                                    }

                                }

                                proflist.setSelectedIndices(indices);
                                pnlBody.removeAll();
                                pnlBody.repaint();
                                pnlBody.revalidate();
                                pnlBody.add(pnlUpdateProfessor);
                                pnlBody.repaint();
                                pnlBody.revalidate();
                                clearProfessorUpdateWarnings();
                                dc.closeDBConnection();
                            } catch (SQLException ex) {
                                Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
                            }

                            pnlBody.removeAll();
                            pnlBody.repaint();
                            pnlBody.revalidate();
                            pnlBody.add(pnlUpdateSubject);
                            pnlBody.repaint();
                            pnlBody.revalidate();
                        }
                    });
                }

            }

            dc.closeDBConnection();
        } catch (SQLException ex) {
            System.out.println("cant create statement" + ex);
        }       // TODO add your handling code here: 

    }
    int[] indices = null;
    String subjectNameUpdate = null;
    String subjectCodeUpdate = null;
    String subjectFacultyUpdate = null;
    String subjectSemesterUpdate = null;
    String currentSem = null;
    private void semIpnlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_semIpnlMouseClicked
        currentSem = evt.getComponent().getName();
        displaySemesterSubject(evt.getComponent().getName());        // TODO add your handling code here:
    }//GEN-LAST:event_semIpnlMouseClicked

    private void semIIpnlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_semIIpnlMouseClicked
        currentSem = evt.getComponent().getName();
        displaySemesterSubject(evt.getComponent().getName());        // TODO add your handling code here:
    }//GEN-LAST:event_semIIpnlMouseClicked

    private void semIIIpnlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_semIIIpnlMouseClicked
        currentSem = evt.getComponent().getName();
        displaySemesterSubject(evt.getComponent().getName());        // TODO add your handling code here:
    }//GEN-LAST:event_semIIIpnlMouseClicked

    private void semIVpnlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_semIVpnlMouseClicked
        currentSem = evt.getComponent().getName();
        displaySemesterSubject(evt.getComponent().getName());        // TODO add your handling code here:
    }//GEN-LAST:event_semIVpnlMouseClicked

    private void semVIpnlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_semVIpnlMouseClicked
        currentSem = evt.getComponent().getName();
        displaySemesterSubject(evt.getComponent().getName());        // TODO add your handling code here:
    }//GEN-LAST:event_semVIpnlMouseClicked

    private void semVIIpnlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_semVIIpnlMouseClicked
        currentSem = evt.getComponent().getName();
        displaySemesterSubject(evt.getComponent().getName());        // TODO add your handling code here:
    }//GEN-LAST:event_semVIIpnlMouseClicked

    private void semVIIIpnlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_semVIIIpnlMouseClicked
        currentSem = evt.getComponent().getName();
        displaySemesterSubject(evt.getComponent().getName());        // TODO add your handling code here:
    }//GEN-LAST:event_semVIIIpnlMouseClicked

    private void subjectNametxt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectNametxt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subjectNametxt1ActionPerformed
    public boolean isValidSubjectUpdateChanges() {
        boolean result = true;
        if (subjectNameUpdate.equals(subjectNametxt1.getText()) && subjectCodeUpdate.equals(subjectCodetxt1.getText()) && subjectFacultyUpdate.equals(subjectFaultyCombo1.getSelectedItem())
                && subjectSemesterUpdate.equals(subjectSemesterCombo1.getSelectedItem()) && areEqual(indices, proflist.getSelectedIndices())) {
            result = false;
        }
        return result;
    }

    public static boolean areEqual(int arr1[], int arr2[]) {
        int n = arr1.length;
        int m = arr2.length;

        // If lengths of array are not equal means 
        // array are not equal 
        if (n != m) {
            return false;
        }

        // Sort both arrays 
        Arrays.sort(arr1);
        Arrays.sort(arr2);

        // Linearly compare elements 
        for (int i = 0; i < n; i++) {
            if (arr1[i] != arr2[i]) {
                return false;
            }
        }

        // If all elements were same. 
        return true;
    }
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (isValidSubjectUpdateInput()) {
            if (isValidSubjectUpdateChanges()) {
                try {
                    String query;
                    int rs;

                    DB_Connect dc = new DB_Connect();
                    dc.connectDatabase();
                    Statement s = dc.conn.createStatement();
                    query = "delete  from teaches where subjectCode='" + subjectCodeUpdate + "';";
                    rs = s.executeUpdate(query);

                    query = "UPDATE subject SET name='" + subjectNametxt1.getText() + "',code='" + subjectCodetxt1.getText() + "'"
                            + ",faculty='" + subjectFaultyCombo1.getSelectedItem().toString() + "',semester='" + subjectSemesterCombo1.getSelectedItem().toString() + "' WHERE code='" + subjectCodeUpdate
                            + "';";
                    int rs1 = s.executeUpdate(query);

                    String SQL = "insert into teaches values(?,?)";
                    if (proflist.getSelectedIndices().length > 1) {
                        for (int i = 1; i < proflist.getSelectedIndices().length; i++) {
                            SQL += ",(?,?)";
                        }
                    }
                    SQL += ";";

                    PreparedStatement ps = dc.conn.prepareStatement(SQL);

                    int j = 1;
                    for (int i : proflist.getSelectedIndices()) {
                        ps.setString(j, subjectCodetxt1.getText());
                        ps.setString(j + 1, profusername.get(i));
                        j = j + 2;
                    }
                    int rs2 = ps.executeUpdate();

                    JOptionPane.showMessageDialog(rootPane, "Subject " + subjectNametxt1.getText() + " updated successfully");

                    subjectNameUpdate = subjectNametxt1.getText();
                    subjectCodeUpdate = subjectCodetxt1.getText();
                    subjectFacultyUpdate = subjectFaultyCombo1.getSelectedItem().toString();
                    subjectSemesterUpdate = subjectSemesterCombo1.getSelectedItem().toString();
                    indices = proflist.getSelectedIndices();

                } catch (SQLException ex) {
                    Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "No changes detected");
            }
        }// TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void subjectCodetxt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectCodetxt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subjectCodetxt1ActionPerformed

    private void jLabel104MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel104MouseClicked
        displaySemesterSubject(subjectSemesterUpdate);
// TODO add your handling code here:
    }//GEN-LAST:event_jLabel104MouseClicked

    private void jLabel105MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel105MouseClicked
        lblNews.setBackground(new Color(0, 204, 106));

        lblTimeline.setBackground(new Color(255, 255, 255));
        lblTrending.setBackground(new Color(255, 255, 255));
        lblQA.setBackground(new Color(255, 255, 255));

        pnlBody.removeAll();
        pnlBody.repaint();
        pnlBody.revalidate();
        pnlBody.add(pnlProffesor);
        pnlBody.repaint();
        pnlBody.revalidate();
    }//GEN-LAST:event_jLabel105MouseClicked

    private void jLabel77MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel77MouseClicked
        displayFaculty();        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel77MouseClicked

    private void jLabel78MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel78MouseClicked
        lblTrending.setBackground(new Color(0, 204, 106));

        lblTimeline.setBackground(new Color(255, 255, 255));
        lblNews.setBackground(new Color(255, 255, 255));
        lblQA.setBackground(new Color(255, 255, 255));

        pnlBody.removeAll();
        pnlBody.repaint();
        pnlBody.revalidate();
        pnlBody.add(pnlFaculty);
        pnlBody.repaint();
        pnlBody.revalidate();        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel78MouseClicked

    private void jLabel79MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel79MouseClicked
        pnlBody.removeAll();
        pnlBody.repaint();
        pnlBody.revalidate();
        pnlBody.add(pnlViewSemester);
        pnlBody.repaint();
        pnlBody.revalidate();      // TODO add your handling code here:
    }//GEN-LAST:event_jLabel79MouseClicked

    private void semVpnlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_semVpnlMouseClicked
        currentSem = evt.getComponent().getName();
        displaySemesterSubject(evt.getComponent().getName());
    }//GEN-LAST:event_semVpnlMouseClicked

    private void jLabel80MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel80MouseClicked
        displayClass();        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel80MouseClicked

    private void classNumbertxt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classNumbertxt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_classNumbertxt1ActionPerformed
    public boolean isClassUpdateChanges() {
        return !(classNumberUpdate.equals(classNumbertxt1.getText()) && classCapacityUpdate.equals(classCapacitytxt1.getText()) && classFloorUpdate.equals(classFloortxt1.getText()));
    }
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        if (isValidUpdateClassInput()) {
            if (isClassUpdateChanges()) {
                DB_Connect dc = new DB_Connect();
                dc.connectDatabase();
                String SQL = "update classroom set classNumber=? ,classCapacity=? ,classFloor=? where classNumber=?";
                try {
                    PreparedStatement ps = dc.conn.prepareStatement(SQL);
                    ps.setString(1, classNumbertxt1.getText());
                    ps.setString(2, classCapacitytxt1.getText());
                    ps.setString(3, classFloortxt1.getText());
                    ps.setString(4, classNumberUpdate);
                    int rs1 = ps.executeUpdate();
                    if (rs1 == 1) {
                        classNumberUpdate = classNumbertxt1.getText();
                        classCapacityUpdate = classCapacitytxt1.getText();
                        classFloorUpdate = classFloortxt1.getText();
                        JOptionPane.showMessageDialog(rootPane, "Class room updated");

                    }
                } catch (SQLException ex) {
                    System.out.println("unable  to connect database");
                }
                dc.closeDBConnection();
            } else {
                JOptionPane.showMessageDialog(rootPane, "No changes detected");
            }
        }// TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        int x = JOptionPane.showConfirmDialog(rootPane, "Do you want to delete subject " + subjectNameUpdate);
        if (x == 0) {
            try {
                DB_Connect dc = new DB_Connect();
                dc.connectDatabase();
                Statement s = dc.conn.createStatement();
                String query = "delete  from subject where code='" + subjectCodeUpdate + "';";
                int rs = s.executeUpdate(query);
                JOptionPane.showMessageDialog(rootPane, "Subject " + subjectNameUpdate + " deleted successfully");
                displaySemesterSubject(currentSem);
            } catch (SQLException ex) {
                Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        int x = JOptionPane.showConfirmDialog(rootPane, "Do you want to delete class " + classNumberUpdate);
        if (x == 0) {
            try {
                DB_Connect dc = new DB_Connect();
                dc.connectDatabase();
                Statement s = dc.conn.createStatement();
                String query = "delete  from classroom where classNumber='" + classNumberUpdate + "';";
                int rs = s.executeUpdate(query);
                JOptionPane.showMessageDialog(rootPane, "Class " + classNumberUpdate + " deleted successfully");
                displayClass();
            } catch (SQLException ex) {
                Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
            }
        }      // TODO add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jLabel110MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel110MouseClicked
        facultyStudentCombo.removeAllItems();
        pnlBody.removeAll();
        pnlBody.repaint();
        pnlBody.revalidate();
        pnlBody.add(jspSchedule);
        pnlBody.repaint();
        pnlBody.revalidate();
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel110MouseClicked

    private void numberOfStudenttxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numberOfStudenttxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numberOfStudenttxtActionPerformed
    public void clearAddStudentWarnings() {
        facultyStudentlbl.setVisible(false);
        semesterStudentlbl.setVisible(false);
        numberOfStudentlbl.setVisible(false);

    }

    public boolean isValidAddStudentGroupInput() {
        clearAddStudentWarnings();
        boolean result = true;
        if (facultyStudentCombo.getSelectedIndex() == 0) {
            facultyStudentlbl.setText("*Select Faculty");
            facultyStudentlbl.setVisible(true);
            result = false;
        }
        if (semesterStudentCombo.getSelectedIndex() == 0) {
            semesterStudentlbl.setText("*Enter Faculty");
            semesterStudentlbl.setVisible(true);
            result = false;
        }
        if (numberOfStudenttxt.getText().isEmpty()) {
            numberOfStudentlbl.setText("*Enter number of student");
            numberOfStudentlbl.setVisible(true);
            result = false;
        } else if (!isNumeric(numberOfStudenttxt.getText())) {
            numberOfStudentlbl.setText("*Invalid number of student");
            numberOfStudentlbl.setVisible(true);
            result = false;
        }

        return result;
    }

    public boolean isStudentGroupExists(String faculty, String semester) {
        boolean result = false;
        try {
            String query;
            ArrayList data = new ArrayList();
            ResultSet rs = null;

            DB_Connect dc = new DB_Connect();
            dc.connectDatabase();
            Statement s = dc.conn.createStatement();
            query = "select * from studentgroup where faculty='" + faculty + "' and semester='" + semester + "';";

            rs = s.executeQuery(query);
            result = rs.isBeforeFirst();
            dc.closeDBConnection();
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
        return result;
    }

    public void clearAddStudentGroupForm() {
        semesterStudentCombo.setSelectedIndex(0);
        numberOfStudenttxt.setText("");
    }

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        if (isValidAddStudentGroupInput()) {        // TODO add your handling code here:
            if (!isStudentGroupExists(facultyStudentCombo.getSelectedItem().toString(), semesterStudentCombo.getSelectedItem().toString())) {
                try {
                    DB_Connect dc = new DB_Connect();
                    dc.connectDatabase();
                    String SQL = "insert into studentgroup values(?,?,?,?,?);";

                    PreparedStatement ps = dc.conn.prepareStatement(SQL);
                    ps.setString(1, facultyStudentCombo.getSelectedItem().toString());
                    ps.setString(2, semesterStudentCombo.getSelectedItem().toString());
                    ps.setString(3, numberOfStudenttxt.getText());
                    ps.setString(4, facultyStudentCombo.getSelectedItem().toString() + "-" + semesterStudentCombo.getSelectedItem().toString());
                    ps.setString(5, facultyStudentCombo.getSelectedItem().toString() + "-" + semesterStudentCombo.getSelectedItem().toString());
                    //ps.setString(4, subjectSemesterCombo.getSelectedItem().toString());
                    int rs1 = ps.executeUpdate();
                    if (rs1 == 1) {
                        JOptionPane.showMessageDialog(rootPane, "Student group " + facultyStudentCombo.getSelectedItem().toString() + "-" + semesterStudentCombo.getSelectedItem().toString()
                                + " added successfully");
                        clearAddStudentGroupForm();
                        facultyStudentCombo.setSelectedIndex(0);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
                }

            } else {
                facultyStudentlbl.setText("Student Group already exists");
                facultyStudentlbl.setVisible(true);
            }
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked
        try {
            String query;
            ResultSet rs = null;
            DB_Connect dc = new DB_Connect();
            dc.connectDatabase();
            Statement s = dc.conn.createStatement();
            query = "select facultyName from faculty order by facultyName asc";

            rs = s.executeQuery(query);
            facultyStudentCombo.addItem(" ");
            while (rs.next()) {
                facultyStudentCombo.addItem(rs.getString("facultyName"));

            }
        } catch (SQLException s) {

        }
        pnlBody.removeAll();
        pnlBody.repaint();
        pnlBody.revalidate();
        pnlBody.add(pnlAddStudentGroup);
        pnlBody.repaint();
        pnlBody.revalidate();
        clearAddStudentWarnings();
        clearAddStudentGroupForm();
    }//GEN-LAST:event_jPanel2MouseClicked
    public void clearUpdateStudentWarnings() {
        facultyStudentUpdatelbl.setVisible(false);
        semesterStudentUpdatelbl.setVisible(false);
        numberOfStudentUpdatelbl.setVisible(false);
    }

    public void displayStudent() {
        pnlViewStudent.removeAll();
        pnlViewStudent.repaint();
        pnlViewStudent.revalidate();

        pnlBody.removeAll();
        pnlBody.repaint();
        pnlBody.revalidate();
        pnlBody.add(pnlmainViewStudent);
        pnlBody.repaint();
        pnlBody.revalidate();// TODO add your handling code here:'

        String query;
        ResultSet rs = null;
        try {
            DB_Connect dc = new DB_Connect();
            dc.connectDatabase();
            Statement s = dc.conn.createStatement();
            query = "select * from studentgroup order by faculty asc";

            rs = s.executeQuery(query);

            if (!rs.isBeforeFirst()) {
                JOptionPane.showMessageDialog(rootPane, "No student group exist");
                lblTimeline.setBackground(new Color(0, 204, 106));

                lblQA.setBackground(new Color(255, 255, 255));
                lblNews.setBackground(new Color(255, 255, 255));
                lblTrending.setBackground(new Color(255, 255, 255));

                pnlBody.removeAll();
                pnlBody.repaint();
                pnlBody.revalidate();
                pnlBody.add(jspSchedule);
                pnlBody.repaint();
                pnlBody.revalidate();
            } else {
                JPanel stuDetailspnl = null;
                JLabel namelbl = null;
                JLabel numberOfStulbl = null;
                pnlViewStudent.setLayout(new FlowLayout(FlowLayout.LEFT, 240, 200));
                while (rs.next()) {

                    stuDetailspnl = new JPanel(new BorderLayout(30, 20));
                    stuDetailspnl.setSize(250, 251);
                    stuDetailspnl.setBackground(new Color(0, 204, 204));
                    Icon icon = new ImageIcon(getClass().getResource("professor-info.png"));
                    namelbl = new JLabel();
                    namelbl.setText(rs.getString("faculty") + "-" + rs.getString("semester"));
                    namelbl.setIcon(icon);
                    namelbl.setHorizontalTextPosition(SwingConstants.CENTER);
                    namelbl.setVerticalTextPosition(SwingConstants.TOP);
                    namelbl.setFont(new Font("Arial", Font.BOLD, 25));
                    stuDetailspnl.add(namelbl, BorderLayout.CENTER);

                    stuDetailspnl.setSize(300, 300);
                    stuDetailspnl.setName(rs.getString("faculty") + "-" + rs.getString("semester"));
                    numberOfStulbl = new JLabel();
                    numberOfStulbl.setText(rs.getString("NumberOfStudents") + " students.");

                    stuDetailspnl.add(numberOfStulbl, BorderLayout.SOUTH);
                    stuDetailspnl.setCursor(Cursor.getPredefinedCursor(12));
                    stuDetailspnl.setBorder(BorderFactory.createLineBorder(new Color(0, 204, 204), 3));
                    pnlViewStudent.add(stuDetailspnl);

                    stuDetailspnl.addMouseListener(new MouseAdapter() {

                        @Override
                        public void mouseClicked(MouseEvent me) {
                            try {
                                //System.out.println(me.getComponent().getName());
                                String query;
                                ResultSet rs = null;
                                DB_Connect dc = new DB_Connect();
                                dc.connectDatabase();
                                Statement s = dc.conn.createStatement();
                                query = "select facultyName from faculty order by facultyName asc";

                                rs = s.executeQuery(query);
                                facultyStudentUpdateCombo.removeAllItems();
                                facultyStudentUpdateCombo.addItem(" ");
                                while (rs.next()) {
                                    facultyStudentUpdateCombo.addItem(rs.getString("facultyName"));

                                }
                                String facSem = me.getComponent().getName();
                                int col = facSem.indexOf('-');
                                facUpdate = facSem.substring(0, col);
                                semUpdate = facSem.substring(col + 1);
                                clearUpdateClassWarnings();
                                rs = null;

                                s = dc.conn.createStatement();
                                query = "select * from studentgroup where faculty='" + facUpdate + "' and semester='" + semUpdate + "';";

                                rs = s.executeQuery(query);
                                while (rs.next()) {
                                    facultyStudentUpdateCombo.setSelectedItem(facUpdate);
                                    semesterStudentUpdateCombo.setSelectedItem(semUpdate);
                                    numberOfStudentUpdatetxt.setText(rs.getString("NumberOfStudents"));
                                    noOfStUpdate = rs.getString("NumberOfStudents");

                                }
                                pnlBody.removeAll();
                                pnlBody.repaint();
                                pnlBody.revalidate();
                                pnlBody.add(pnlUpdateStudent);
                                pnlBody.repaint();
                                pnlBody.revalidate();
                                clearUpdateStudentWarnings();
                                dc.closeDBConnection();
                            } catch (SQLException ex) {
                                Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
                            }

                        }

                    });
                }

            }

            dc.closeDBConnection();
        } catch (SQLException ex) {
            System.out.println("cant create statement" + ex);
        }       // TODO add your handling code here: 
    }
    String facUpdate = null;
    String semUpdate = null;
    String noOfStUpdate = null;

    private void jPanel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseClicked
        displayStudent();
        clearUpdateStudentWarnings();// TODO add your handling code here:
    }//GEN-LAST:event_jPanel3MouseClicked

    private void jLabel113MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel113MouseClicked
        pnlBody.removeAll();
        pnlBody.repaint();
        pnlBody.revalidate();
        pnlBody.add(jspSchedule);
        pnlBody.repaint();
        pnlBody.revalidate();        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel113MouseClicked
    public boolean isValidUpdateStudentInput() {
        clearUpdateStudentWarnings();
        boolean result = true;
        if (facultyStudentUpdateCombo.getSelectedIndex() == 0) {
            facultyStudentUpdatelbl.setText("*Select Faculty");
            facultyStudentUpdatelbl.setVisible(true);
            result = false;
        } else if (isStudentGroupExists(facultyStudentUpdateCombo.getSelectedItem().toString(), semesterStudentUpdateCombo.getSelectedItem().toString())
                && !facUpdate.equals(facultyStudentUpdateCombo.getSelectedItem().toString()) || !semUpdate.equals(semesterStudentUpdateCombo.getSelectedItem().toString())) {

            facultyStudentUpdatelbl.setText("*Student group already exists");
            facultyStudentUpdatelbl.setVisible(true);
            result = false;
        }
        if (semesterStudentUpdateCombo.getSelectedIndex() == 0) {
            semesterStudentUpdatelbl.setText("*Enter Semester");
            semesterStudentUpdatelbl.setVisible(true);
            result = false;
        }
        if (numberOfStudentUpdatetxt.getText().isEmpty()) {
            numberOfStudentUpdatelbl.setText("*Enter number of student");
            numberOfStudentUpdatelbl.setVisible(true);
            result = false;
        } else if (!isNumeric(numberOfStudentUpdatetxt.getText())) {
            numberOfStudentUpdatelbl.setText("*Invalid number of student");
            numberOfStudentUpdatelbl.setVisible(true);
            result = false;
        }

        return result;
    }

    public boolean isUpdateStudentChanges() {
        return !(facultyStudentUpdateCombo.getSelectedItem().toString().equals(facUpdate) && semesterStudentUpdateCombo.getSelectedItem().toString().equals(semUpdate)
                && numberOfStudentUpdatetxt.getText().equals(noOfStUpdate));
    }
    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        if (isValidUpdateStudentInput()) {
            if (isUpdateStudentChanges()) {
                try {
                    String query;
                    int rs;

                    DB_Connect dc = new DB_Connect();
                    dc.connectDatabase();
                    Statement s = dc.conn.createStatement();

                    query = "UPDATE studentgroup SET faculty='" + facultyStudentUpdateCombo.getSelectedItem().toString() + "',semester='"
                            + semesterStudentUpdateCombo.getSelectedItem().toString() + "'"
                            + ",NumberOfStudents='" + numberOfStudentUpdatetxt.getText() + "' WHERE faculty='" + facUpdate + "' and semester='" + semUpdate
                            + "';";
                    int rs1 = s.executeUpdate(query);

                    JOptionPane.showMessageDialog(rootPane, "Student Group updated successfully");

                    facUpdate = facultyStudentUpdateCombo.getSelectedItem().toString();
                    semUpdate = semesterStudentUpdateCombo.getSelectedItem().toString();
                    noOfStUpdate = numberOfStudentUpdatetxt.getText();

                } catch (SQLException ex) {
                    Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "No changes detected");
            }

        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void numberOfStudentUpdatetxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numberOfStudentUpdatetxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numberOfStudentUpdatetxtActionPerformed

    private void jLabel125MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel125MouseClicked
        displayStudent();        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel125MouseClicked
    JList grouplist = null;
    JList timelist = null;
    JList classlist = null;

    public void clearGenerateWarnings() {
        lblgrouplist.setVisible(false);
        lblclasslist.setVisible(false);
        lbltimelist.setVisible(false);
    }

    public void displayGenerateForm() {
        clearGenerateWarnings();
        try {
            pnlBody.removeAll();
            pnlBody.repaint();
            pnlBody.revalidate();
            pnlBody.add(pnlGenerate);
            pnlBody.repaint();
            pnlBody.revalidate();
            String query = "select * from studentgroup order by faculty";
            DB_Connect dc = new DB_Connect();
            dc.connectDatabase();
            Statement s = dc.conn.createStatement();
            ResultSet rs = s.executeQuery(query);
            String a = "";
            Vector<String> grouplistData = new Vector<>();
            while (rs.next()) {
                a = rs.getString("faculty") + "-" + rs.getString("semester") + "(" + rs.getString("NumberOfStudents") + ")";

                grouplistData.add(a);
                //System.out.println(a);

            }
            grouplist = new JList(grouplistData);
            grouplist.setFont(new Font("Tahoma", Font.PLAIN, 18));
            studentGroupSP.getViewport().add(grouplist, null);

            query = "select * from classtime order by startTime";

            s = dc.conn.createStatement();
            rs = s.executeQuery(query);
            a = "";
            Vector<String> timelistData = new Vector<>();
            while (rs.next()) {
                a = rs.getString("startTime") + "-" + rs.getString("endTime");

                timelistData.add(a);
                //System.out.println(a);

            }
            timelist = new JList(timelistData);
            timelist.setFont(new Font("Tahoma", Font.PLAIN, 18));
            timeSP.getViewport().add(timelist, null);

            query = "select * from classroom ";

            s = dc.conn.createStatement();
            rs = s.executeQuery(query);
            a = "";
            Vector<String> classlistData = new Vector<>();
            while (rs.next()) {
                a = rs.getString("classNumber") + "(" + rs.getString("classCapacity") + ")";

                classlistData.add(a);
                //System.out.println(a);

            }
            classlist = new JList(classlistData);
            classlist.setFont(new Font("Tahoma", Font.PLAIN, 18));
            classSP.getViewport().add(classlist, null);

            // TODO add your handling code here:
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        displayGenerateForm();
    }//GEN-LAST:event_jPanel1MouseClicked
    public boolean isValidGenerateInput() {
        clearGenerateWarnings();
        boolean result = true;
        if (grouplist.isSelectionEmpty()) {
            lblgrouplist.setText("*Select Student Group");
            lblgrouplist.setVisible(true);
            result = false;

        }
        if (classlist.isSelectionEmpty()) {
            lblclasslist.setText("*Select Classes");
            lblclasslist.setVisible(true);
            result = false;

        }
        if (timelist.isSelectionEmpty()) {
            lbltimelist.setText("*Select time");
            lbltimelist.setVisible(true);
            result = false;

        }

        return result;
    }

    static void LoadExistingClasses() {
        try {
            ExistingClass ec = null;
            DB_Connect dc = new DB_Connect();
            dc.connectDatabase();
            Statement s = dc.conn.createStatement();
            ResultSet rs = null;
            String query = "SELECT s.classNumber,ct.startTime,ct.endTime,s.professorUsername,sub.faculty,sub.semester,sub.name FROM schedule s join classtime ct on s.classTimeID = ct.timeID join subject sub on s.subjectCode = sub.code;";
            rs = s.executeQuery(query);
            if (rs.isBeforeFirst()) {
                existingClasses = new ArrayList<>();
                while (rs.next()) {
                    ec = new ExistingClass(Integer.parseInt(rs.getString("classNumber")),
                            rs.getString("startTime") + "-" + rs.getString("endTime"),
                            rs.getString("faculty") + "-" + rs.getString("semester"),
                            rs.getString("professorUsername"), rs.getString("name"));
//                    System.out.println(ec.toString());
                    existingClasses.add(ec);
                }

            } else {
                existingClasses = null;
            }
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public boolean scheduleDoesnotExistForSelectedFaculty(List gl) {
        boolean result = true;
        try {

            DB_Connect dc = new DB_Connect();
            dc.connectDatabase();
            Statement s = dc.conn.createStatement();
            ResultSet rs = null;
            String query = "";
            for (int i = 0; i < gl.size(); i++) {
                query = "SELECT * from schedule sc join subject su on sc.subjectCode=su.code where faculty='" + gl.get(i).toString().substring(0, gl.get(i).toString().indexOf('-'))
                        + "' and semester='" + gl.get(i).toString().substring(gl.get(i).toString().indexOf('-') + 1, gl.get(i).toString().indexOf('(')) + "';";
//                System.out.println(query);
                rs = s.executeQuery(query);
                if (rs.isBeforeFirst()) {
                    result = false;
                    JOptionPane.showMessageDialog(rootPane, "Schdeule exists for selected student group");
                    break;
                }
            }
            dc.closeDBConnection();

        } catch (SQLException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
        return result;
    }
    static List gl, tl, cl;
    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed

        if (isValidGenerateInput()) {
            long startTime;
            long endTime;
            LoadExistingClasses();
            gl = grouplist.getSelectedValuesList();
            tl = timelist.getSelectedValuesList();
            cl = classlist.getSelectedValuesList();
            if (scheduleDoesnotExistForSelectedFaculty(gl)) {
                startTime = System.currentTimeMillis();
                Timetable timetable = initializeTimetable(gl, tl, cl);
                t = timetable;
                GeneticAlgorithm ga = new GeneticAlgorithm(100, 0.01, 0.9, 2, 5);
                Population population = ga.initPopulation(timetable);
                ga.evalPopulation(population, timetable);
                generalFitness = new ArrayList<>();
                generalFitness.add(population.getFittest(0).getFitness());
                int generation = 1;
                while (generation <= 15000 && ga.isTerminationConditionMet(population) == false) {
                    population = ga.crossoverPopulation(population);
                    population = ga.mutatePopulation(population, timetable);
                    ga.evalPopulation(population, timetable);
                    generalFitness.add(population.getFittest(0).getFitness());
                    System.out.println("Generation:" + generation + ",  fitnes=" + population.getFittest(0).getFitness());
                    generation++;
                }
                endTime = System.currentTimeMillis();

                System.out.println(population.getFittest(0));

                /*Timetable timetbl = new Timetable(timetable);
            
            Individual ind = new Individual(population.getFittest(0).getChromosome().clone());
            
            int chromosomeIndex = 0;
            boolean firstClass = true;
            int roomId = -1;
            // Loop through groups
            timetbl.createClasses(ind);
            algorithm.Class[] classess = timetbl.getClasses();
            
            for (Group group : timetbl.getGroupsAsArray()) {
                // Loop through modules
                
                for (int moduleId : group.getModuleIds()) {
                    System.out.println(moduleId);
                    System.out.println(timetbl.getModule(moduleId).getModuleName());
                    if (firstClass) {
                        roomId = ind.getChromosome()[chromosomeIndex + 1];
                        System.out.println("firstclass");
                        firstClass = false;
                        chromosomeIndex += 3;
                    } else {
                        System.out.println("same class");
                        ind.setGene(chromosomeIndex + 1, roomId);
                        chromosomeIndex += 3;
                    }

                }
                firstClass = true;
            }
            
            timetbl.createClasses(ind);
            
            
            System.out.println(population.getFittest(0));
            System.out.println(ind);
            double fitness = 1/(double)(timetbl.calcClashes()+1);
            System.out.println("The fitness of computed object is :" + fitness );
                 */
                timetable.createClasses(population.getFittest(0));
                t = timetable;
                System.out.println();
                System.out.println("Solution found in " + generation + " generations");
                System.out.println("Final solution fitness: " + population.getFittest(0).getFitness());
                System.out.println("Clashes: " + timetable.calcClashes());
                // Print classes
                System.out.println();

                if (population.getFittest(0).getFitness() == 1.0) {
                    algorithmAnalyzed = false;
                    generalTimetaken = endTime - startTime;
                    op = new Output(generalFitness, generation, generalTimetaken);
                    algorithm.Class classes[] = timetable.getClasses();
                    int classIndex = 1;

                    HashMap<Integer, Group> groups = timetable.getGroups();
                    JTable tbl = null;
                    ArrayList<String> timeslots = new ArrayList<String>();
                    for (algorithm.Class bestClass : classes) {
                        if (timeslots.indexOf(timetable.getTimeslot(bestClass.getTimeslotId()).getTimeslot()) == -1) {
                            timeslots.add(timetable.getTimeslot(bestClass.getTimeslotId()).getTimeslot());
                        }
                    }
                    Collections.sort(timeslots);
                    String[] columnNames = new String[timeslots.size()];
                    pnlBody.removeAll();
                    pnlBody.repaint();
                    pnlBody.revalidate();
                    pnlBody.add(pnlDisplaySchedule);
                    pnlBody.repaint();
                    pnlBody.revalidate();
                    schedulePnl.removeAll();
                    schedulePnl.repaint();
                    schedulePnl.revalidate();
                    schedulePnl.setLayout(new FlowLayout(FlowLayout.CENTER, 20, 80));
                    columnNames = timeslots.toArray(columnNames);
                    String[] columnNamesFinal = new String[columnNames.length + 1];
                    columnNamesFinal[0] = "Week Day";
                    String tabletitle = "";
                    for (int i = 0; i < columnNames.length; i++) {
                        columnNamesFinal[i + 1] = columnNames[i];
                    }
                    for (int i = 0; i < groups.size(); i++) {
                        String[][] data = new String[6][columnNamesFinal.length];

                        for (algorithm.Class bestClass : classes) {
//                            System.out.println(timetable.getTimeslot(bestClass.getTimeslotId()).getTimeslot());
                            if (groups.get(i).getGroupId() == bestClass.getGroupId()) {
                                // System.out.println(findIndex(columnNames, timetable.getTimeslot(bestClass.getTimeslotId()).getTimeslot()));
                                data[0][findIndex(columnNamesFinal, timetable.getTimeslot(bestClass.getTimeslotId()).getTimeslot())] = timetable.getModule(bestClass.getModuleId()).getModuleName()
                                        + "(" + timetable.getProfessor(bestClass.getProfessorId()).getProfessorName() + "," + timetable.getRoom(bestClass.getRoomId()).getRoomNumber() + ")";
                                data[1][findIndex(columnNamesFinal, timetable.getTimeslot(bestClass.getTimeslotId()).getTimeslot())] = timetable.getModule(bestClass.getModuleId()).getModuleName()
                                        + "(" + timetable.getProfessor(bestClass.getProfessorId()).getProfessorName() + "," + timetable.getRoom(bestClass.getRoomId()).getRoomNumber() + ")";
                                data[2][findIndex(columnNamesFinal, timetable.getTimeslot(bestClass.getTimeslotId()).getTimeslot())] = timetable.getModule(bestClass.getModuleId()).getModuleName()
                                        + "(" + timetable.getProfessor(bestClass.getProfessorId()).getProfessorName() + "," + timetable.getRoom(bestClass.getRoomId()).getRoomNumber() + ")";
                                data[3][findIndex(columnNamesFinal, timetable.getTimeslot(bestClass.getTimeslotId()).getTimeslot())] = timetable.getModule(bestClass.getModuleId()).getModuleName()
                                        + "(" + timetable.getProfessor(bestClass.getProfessorId()).getProfessorName() + "," + timetable.getRoom(bestClass.getRoomId()).getRoomNumber() + ")";
                                data[4][findIndex(columnNamesFinal, timetable.getTimeslot(bestClass.getTimeslotId()).getTimeslot())] = timetable.getModule(bestClass.getModuleId()).getModuleName()
                                        + "(" + timetable.getProfessor(bestClass.getProfessorId()).getProfessorName() + "," + timetable.getRoom(bestClass.getRoomId()).getRoomNumber() + ")";
                                data[5][findIndex(columnNamesFinal, timetable.getTimeslot(bestClass.getTimeslotId()).getTimeslot())] = timetable.getModule(bestClass.getModuleId()).getModuleName()
                                        + "(" + timetable.getProfessor(bestClass.getProfessorId()).getProfessorName() + "," + timetable.getRoom(bestClass.getRoomId()).getRoomNumber() + ")";

                                tabletitle = timetable.getGroup(bestClass.getGroupId()).getGroupName();
                            }
                        }
                        data[0][0] = "Sunday";
                        data[1][0] = "Monday";
                        data[2][0] = "Tuesday";
                        data[3][0] = "Wednesday";
                        data[4][0] = "Thrusday";
                        data[5][0] = "Friday";

                        tbl = new JTable(data, columnNamesFinal);
                        // tbl.setPreferredSize(new Dimension(1000, 500));
                        tbl.setSize(1600, 170);
                        tbl.setPreferredSize(new Dimension(1600, 170));
                        JScrollPane scrollPane = new JScrollPane(tbl);
                        scrollPane.setSize(1600, 170);
                        scrollPane.setPreferredSize(new Dimension(1600, 170));
                        scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
                        scrollPane.setBorder(BorderFactory.createTitledBorder(tabletitle));
                        schedulePnl.add(scrollPane);

                    }
                    schedulePnl.repaint();
                    schedulePnl.revalidate();

                    for (algorithm.Class bestClass : classes) {
                        System.out.println("Class " + classIndex + ":");
                        System.out.println("Module: "
                                + timetable.getModule(bestClass.getModuleId()).getModuleName());
                        System.out.println("Group: "
                                + timetable.getGroup(bestClass.getGroupId()).getGroupId());
                        System.out.println("Room: "
                                + timetable.getRoom(bestClass.getRoomId()).getRoomNumber());
                        System.out.println("Professor: "
                                + timetable.getProfessor(bestClass.getProfessorId()).getProfessorName());
                        System.out.println("Time: "
                                + timetable.getTimeslot(bestClass.getTimeslotId()).getTimeslot());

                        System.out.println("-----");
                        classIndex++;
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Unable to meet all requirements");
                }
            }

        }

        /*
        HashMap<Integer, Module> modules = timetable.getModules();
        for (int i = 0; i < modules.size(); i++) {
            String a = modules.get(i).getModuleId() + "=" + modules.get(i).getModuleCode() + "taught by ";
            int[] ids = modules.get(i).getprofessorIds();
            for (int j = 0; j < ids.length; j++) {
                a += ids[j] + ",";
            }
            System.out.println(a);
        }
        
        HashMap<Integer, Room> rooms = timetable.getRooms();
        for (int i = 0; i < rooms.size(); i++) {
            System.out.println(rooms.get(i).getRoomId() + "=" + rooms.get(i).getRoomNumber());

        }

        HashMap<Integer, Professor> professors = timetable.getProfessors();
        for (int i = 0; i < professors.size(); i++) {
            System.out.println(professors.get(i).getProfessorId() + "=" + professors.get(i).getProfessorName());

        }
        
        HashMap<Integer, Timeslot> timeslots = timetable.getTimeslots();
        for (int i = 0; i < timeslots.size(); i++) {
            System.out.println(timeslots.get(i).getTimeslotId() + "=" + timeslots.get(i).getTimeslot());

        }
        HashMap<Integer, Group> groups = timetable.getGroups();
        for (int i = 0; i < groups.size(); i++) {
            System.out.println(groups.get(i).toString());
        }
        
         */
        // Initialize GA
        //addModule
        //addGroup

    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jLabel129MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel129MouseClicked
        lblTimeline.setBackground(new Color(0, 204, 106));

        lblQA.setBackground(new Color(255, 255, 255));
        lblNews.setBackground(new Color(255, 255, 255));
        lblTrending.setBackground(new Color(255, 255, 255));

        pnlBody.removeAll();
        pnlBody.repaint();
        pnlBody.revalidate();
        pnlBody.add(jspSchedule);
        pnlBody.repaint();
        pnlBody.revalidate();        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel129MouseClicked

    private void jLabel130MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel130MouseClicked
        displayGenerateForm();        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel130MouseClicked

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        int x = JOptionPane.showConfirmDialog(rootPane, "Do you want to delete Student group " + facultyStudentUpdateCombo.getSelectedItem().toString() + "-" + semesterStudentUpdateCombo.getSelectedItem().toString());
        if (x == 0) {
            try {
                String query = "DELETE FROM studentgroup WHERE faculty='" + facultyStudentUpdateCombo.getSelectedItem().toString()
                        + "' and semester='" + semesterStudentUpdateCombo.getSelectedItem().toString() + "';";
                DB_Connect dc = new DB_Connect();
                dc.connectDatabase();
                Statement s = dc.conn.createStatement();
                s.executeUpdate(query);
                System.out.println(query);

                JOptionPane.showMessageDialog(rootPane, "Student group " + facultyStudentUpdateCombo.getSelectedItem().toString() + "-" + semesterStudentUpdateCombo.getSelectedItem().toString()
                        + " deleted successfully");
                displayStudent();
            } catch (SQLException ex) {
                Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton17ActionPerformed
    public void clearAddTimeslotWarings() {
        lbltime.setVisible(false);
        lblday.setVisible(false);
    }

    public boolean isValidAddTimeslotInput() {
        boolean result = true;
        clearAddTimeslotWarings();
        if (starttime.getFormatedTime().equals(endtime.getFormatedTime())) {
            result = false;
            lbltime.setVisible(true);
        }
        if (txtday.getText().isEmpty()) {
            result = false;
            lblday.setVisible(true);
        }
        return result;
    }
    private void jPanel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MouseClicked
        pnlBody.removeAll();
        pnlBody.repaint();
        pnlBody.revalidate();
        pnlBody.add(pnlAddTimeslot);
        pnlBody.repaint();
        pnlBody.revalidate();
        clearAddTimeslotWarings();

        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel4MouseClicked

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        if (isValidAddTimeslotInput()) {

            try {
                DB_Connect dc = new DB_Connect();
                dc.connectDatabase();
                Statement s = dc.conn.createStatement();
                String query = "select * from classtime where startTime='" + starttime.getFormatedTime() + "' and endTime='" + endtime.getFormatedTime() + "';";
                ResultSet rs = s.executeQuery(query);
                if (rs.isBeforeFirst()) {
                    JOptionPane.showMessageDialog(rootPane, "Time already exists");

                } else {
                    query = "INSERT INTO classtime(`day`, `startTime`, `endTime`) VALUES ('" + txtday.getText() + "','" + starttime.getFormatedTime() + "','" + endtime.getFormatedTime() + "');";
                    int a = s.executeUpdate(query);
                    JOptionPane.showMessageDialog(rootPane, "Time added successfully");
                }

            } // TODO add your handling code here:
            catch (SQLException ex) {
                Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jButton18ActionPerformed
    public boolean scheduleDoesnotExist() {
        boolean result = true;
        for (algorithm.Class c : t.getClasses()) {
            try {
                DB_Connect dc = new DB_Connect();
                dc.connectDatabase();
                Statement s = dc.conn.createStatement();
                String query = "select * from schedule where subjectCode='" + t.getModule(c.getModuleId()).getModuleCode() + "';";
                ResultSet rs = s.executeQuery(query);
                if (rs.isBeforeFirst()) {
                    result = false;
                    break;
                }

            } catch (SQLException ex) {
                Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        return result;
    }
    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        if (scheduleDoesnotExist()) {
            try {
                DB_Connect dc = new DB_Connect();
                dc.connectDatabase();
                Statement s = dc.conn.createStatement();
                ResultSet rs = null;
                String query = "";
                for (algorithm.Class c : t.getClasses()) {
                    int timeId = -1;
                    int classNumber = Integer.parseInt(t.getRoom(c.getRoomId()).getRoomNumber());
                    String timeslot = t.getTimeslot(c.getTimeslotId()).getTimeslot();
                    query = "select timeID from classtime where startTime='" + timeslot.substring(0, timeslot.indexOf('-')) + "' and endTime='" + timeslot.substring(timeslot.indexOf('-') + 1) + "'";
                    rs = s.executeQuery(query);
                    while (rs.next()) {
                        timeId = Integer.parseInt(rs.getString(1));
                    }
                    String subjectCode = t.getModule(c.getModuleId()).getModuleCode();
                    String professorUsername = t.getProfessor(c.getProfessorId()).getProfessorName();

                    query = "INSERT INTO schedule( classNumber, classTimeID, subjectCode, professorUsername) VALUES (" + classNumber + "," + timeId + ",'" + subjectCode + "','" + professorUsername + "');";
                    int rows = s.executeUpdate(query);

                }
            } // TODO add your handling code here:
            catch (SQLException ex) {
                Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(rootPane, "Schedule saved successfully");
        } else {
            JOptionPane.showMessageDialog(rootPane, "Schedule already exists");

        }

    }//GEN-LAST:event_jButton14ActionPerformed

    private void jLabel136MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel136MouseClicked
        lblTimeline.setBackground(new Color(0, 204, 106));

        lblQA.setBackground(new Color(255, 255, 255));
        lblNews.setBackground(new Color(255, 255, 255));
        lblTrending.setBackground(new Color(255, 255, 255));

        pnlBody.removeAll();
        pnlBody.repaint();
        pnlBody.revalidate();
        pnlBody.add(jspSchedule);
        pnlBody.repaint();
        pnlBody.revalidate();        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel136MouseClicked
    public static int stringCompare(String str1, String str2) {

        int l1 = str1.length();
        int l2 = str2.length();
        int lmin = Math.min(l1, l2);

        for (int i = 0; i < lmin; i++) {
            int str1_ch = (int) str1.charAt(i);
            int str2_ch = (int) str2.charAt(i);

            if (str1_ch != str2_ch) {
                return str1_ch - str2_ch;
            }
        }

        // Edge case for strings like 
        // String 1="Geeks" and String 2="Geeksforgeeks" 
        if (l1 != l2) {
            return l1 - l2;
        } // If none of the above conditions is true, 
        // it implies both the strings are equal 
        else {
            return 0;
        }
    }

    public void displaySchedule() {
        LoadExistingClasses();
        pnlBody.removeAll();
        pnlBody.repaint();
        pnlBody.revalidate();
        pnlBody.add(pnlmainViewSchedule);
        pnlBody.repaint();
        pnlBody.revalidate();
        schedulePnl1.removeAll();
        schedulePnl1.repaint();
        schedulePnl1.revalidate();
        schedulePnl1.setLayout(new FlowLayout(FlowLayout.CENTER, 20, 80));

        if (existingClasses == null) {
            JOptionPane.showMessageDialog(rootPane, "No Schedule found");
            lblTimeline.setBackground(new Color(0, 204, 106));

            lblQA.setBackground(new Color(255, 255, 255));
            lblNews.setBackground(new Color(255, 255, 255));
            lblTrending.setBackground(new Color(255, 255, 255));

            pnlBody.removeAll();
            pnlBody.repaint();
            pnlBody.revalidate();
            pnlBody.add(jspSchedule);
            pnlBody.repaint();
            pnlBody.revalidate();
        } else {
            ArrayList<String> timeslots = new ArrayList<String>();
            for (ExistingClass ec : existingClasses) {
                if (timeslots.indexOf(ec.getTimeslot()) == -1) {
                    timeslots.add(ec.getTimeslot());
                }
            }
            Collections.sort(timeslots);
            ArrayList<String> groups = new ArrayList<String>();
            for (ExistingClass ec : existingClasses) {
                if (groups.indexOf(ec.getGroup()) == -1) {
                    groups.add(ec.getGroup());
                }
            }
            Collections.sort(groups);
            String[] columnNames = new String[timeslots.size()];
            columnNames = timeslots.toArray(columnNames);

            String[] columnNamesFinal = new String[columnNames.length + 1];
            columnNamesFinal[0] = "Week Day";
            String tabletitle = "";
            JTable tbl = null;
            JButton btn = null;
            for (int i = 0; i < columnNames.length; i++) {
                columnNamesFinal[i + 1] = columnNames[i];
            }

            for (String group : groups) {
                String[][] data = new String[6][columnNamesFinal.length];

                for (ExistingClass ec : existingClasses) {

                    if (ec.getGroup().equals(group)) {
                        // System.out.println(findIndex(columnNames, timetable.getTimeslot(bestClass.getTimeslotId()).getTimeslot()));
                        data[0][findIndex(columnNamesFinal, ec.getTimeslot())] = ec.getSubjectName()
                                + "(" + ec.getProfessor() + "," + ec.getClassNumber() + ")";
                        data[1][findIndex(columnNamesFinal, ec.getTimeslot())] = ec.getSubjectName()
                                + "(" + ec.getProfessor() + "," + ec.getClassNumber() + ")";
                        data[2][findIndex(columnNamesFinal, ec.getTimeslot())] = ec.getSubjectName()
                                + "(" + ec.getProfessor() + "," + ec.getClassNumber() + ")";
                        data[3][findIndex(columnNamesFinal, ec.getTimeslot())] = ec.getSubjectName()
                                + "(" + ec.getProfessor() + "," + ec.getClassNumber() + ")";
                        data[4][findIndex(columnNamesFinal, ec.getTimeslot())] = ec.getSubjectName()
                                + "(" + ec.getProfessor() + "," + ec.getClassNumber() + ")";
                        data[5][findIndex(columnNamesFinal, ec.getTimeslot())] = ec.getSubjectName()
                                + "(" + ec.getProfessor() + "," + ec.getClassNumber() + ")";

                        tabletitle = ec.getGroup();
                    }
                }
                data[0][0] = "Sunday";
                data[1][0] = "Monday";
                data[2][0] = "Tuesday";
                data[3][0] = "Wednesday";
                data[4][0] = "Thrusday";
                data[5][0] = "Friday";

                tbl = new JTable(data, columnNamesFinal);
                // tbl.setPreferredSize(new Dimension(1000, 500));
                tbl.setSize(1600, 170);
                tbl.setPreferredSize(new Dimension(1600, 170));
                JScrollPane scrollPane = new JScrollPane(tbl);
                scrollPane.setSize(1600, 170);
                scrollPane.setPreferredSize(new Dimension(1600, 170));
                scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
                scrollPane.setBorder(BorderFactory.createTitledBorder(tabletitle));
                schedulePnl1.add(scrollPane);
                btn = new JButton("Delete");
                btn.setBackground(new Color(0, 204, 204));
                btn.setForeground(Color.white);
                btn.setActionCommand(group);
                btn.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        try {

                            String group = e.getActionCommand();
                            int a = JOptionPane.showConfirmDialog(rootPane, "Do you want to delete schedule for" + group);
                            String faculty = group.substring(0, group.indexOf('-'));
                            String sem = group.substring(group.indexOf('-') + 1);
                            DB_Connect dc = new DB_Connect();
                            dc.connectDatabase();
                            Statement s = dc.conn.createStatement();
                            ResultSet rs = null;
                            String query = "DELETE s FROM schedule s LEFT JOIN subject sub ON s.subjectCode = sub.code WHERE sub.faculty='" + faculty + "' and sub.semester='" + sem + "'; ";
                            s.executeUpdate(query);
                            JOptionPane.showMessageDialog(rootPane, "Schedule for student group " + e.getActionCommand() + " deleted sucessfully");
                            dc.closeDBConnection();
                            displaySchedule();
                        } catch (SQLException ex) {
                            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                });
                schedulePnl1.add(btn);

            }
            schedulePnl1.repaint();
            schedulePnl1.revalidate();

        }

    }
    private void jPanel43MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel43MouseClicked
        displaySchedule();        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel43MouseClicked

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        ResultAnalysis ra = new ResultAnalysis(op, "Output");
        ra.setVisible(true);
    }//GEN-LAST:event_jButton19ActionPerformed
    public Output Algorithm(int populationSize, double mutationRate, double crossoverRate, int eliticsmCount, int tournamentSize, int maxGeneration) {
        long startTime;
        long endTime;

        startTime = System.currentTimeMillis();
        Timetable timetable = initializeTimetable(gl, tl, cl);
        GeneticAlgorithm ga = new GeneticAlgorithm(populationSize, mutationRate, crossoverRate, eliticsmCount, tournamentSize);
        Population population = ga.initPopulation(timetable);
        ga.evalPopulation(population, timetable);
        ArrayList<Double> fitness = new ArrayList<>();
        fitness.add(population.getFittest(0).getFitness());
        int generation = 1;
        while (generation <= maxGeneration && ga.isTerminationConditionMet(population) == false) {
            population = ga.crossoverPopulation(population);
            population = ga.mutatePopulation(population, timetable);
            ga.evalPopulation(population, timetable);
            fitness.add(population.getFittest(0).getFitness());
            generation++;
        }
        endTime = System.currentTimeMillis();

        Output op = new Output(fitness, endTime - startTime, populationSize, generation, mutationRate,
                crossoverRate, eliticsmCount, tournamentSize);
        return op;

    }
    AlgorithmAnalysis aa = null;
    boolean algorithmAnalyzed = false;
    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        if (!algorithmAnalyzed) {

            ArrayList<InputToAlgorithm> input = new ArrayList<>();
         
            //new
            AlgorithmAnalysisop = new ArrayList<>();
            for (int ps : AlgorithmAnalysisParameter.populationSizes) {
                for (double cr : AlgorithmAnalysisParameter.crossoverRates) {
                    for (double mr : AlgorithmAnalysisParameter.mutationRates) {
                        input.add(new InputToAlgorithm(ps, AlgorithmAnalysisParameter.maxGenerationStandard, mr, cr,
                                AlgorithmAnalysisParameter.eliticsmCountStandard, AlgorithmAnalysisParameter.tournamentSizeStandard));
                    }

                }
            }

            List<Output> result = input.parallelStream().map(i -> {
                long startTime;
                long endTime;

                startTime = System.currentTimeMillis();
                Timetable timetable = Dashboard.initialTimetable;
                GeneticAlgorithm ga = new GeneticAlgorithm(i.getPopulationSize(), i.getMutationRate(), i.getCrossoverRate(), i.getEliticsmCount(), i.getTournamentSize());
                Population population = ga.initPopulation(timetable);
                ga.evalPopulation(population, timetable);
                ArrayList<Double> fitness = new ArrayList<>();
                fitness.add(population.getFittest(0).getFitness());
                int generation = 1;
                while (generation < i.getMaxGeneration() && ga.isTerminationConditionMet(population) == false) {
                    population = ga.crossoverPopulation(population);
                    population = ga.mutatePopulation(population, timetable);
                    ga.evalPopulation(population, timetable);
                    fitness.add(population.getFittest(0).getFitness());
//                    System.out.println(generation);
                    generation++;
                }
                endTime = System.currentTimeMillis();

                Output op = new Output(fitness, endTime - startTime, i.getPopulationSize(), i.getMaxGeneration(), i.getMutationRate(),
                        i.getCrossoverRate(), i.getEliticsmCount(), i.getTournamentSize());

                Dashboard.AlgorithmAnalysisop.add(op);

                return op;
            }).collect((Collectors.toList()));
            algorithmAnalyzed = true;
            aa = new AlgorithmAnalysis(AlgorithmAnalysisop);
            aa.setVisible(true);
        } else {
            aa.setVisible(true);
        }

    }//GEN-LAST:event_jButton20ActionPerformed

    private void jPanel5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel5KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel5KeyPressed

    private void jLabel142KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel142KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel142KeyPressed
    public void hideUpdateParameterWarning() {
        lblps.setVisible(false);
        lblcr.setVisible(false);
        lblmr.setVisible(false);
    }
    private void jPanel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseClicked
        pnlBody.removeAll();
        pnlBody.repaint();
        pnlBody.revalidate();
        pnlBody.add(pnlUpdateAnalysisParameter);
        pnlBody.repaint();
        pnlBody.revalidate();

        ps1.setText(Integer.toString(AlgorithmAnalysisParameter.populationSizes.get(0)));
        ps2.setText(Integer.toString(AlgorithmAnalysisParameter.populationSizes.get(1)));
        ps3.setText(Integer.toString(AlgorithmAnalysisParameter.populationSizes.get(2)));
        ps4.setText(Integer.toString(AlgorithmAnalysisParameter.populationSizes.get(3)));

        cr1.setText(Double.toString(AlgorithmAnalysisParameter.crossoverRates.get(0)));
        cr2.setText(Double.toString(AlgorithmAnalysisParameter.crossoverRates.get(1)));
        cr3.setText(Double.toString(AlgorithmAnalysisParameter.crossoverRates.get(2)));
        cr4.setText(Double.toString(AlgorithmAnalysisParameter.crossoverRates.get(3)));

        mr1.setText(Double.toString(AlgorithmAnalysisParameter.mutationRates.get(0)));
        mr2.setText(Double.toString(AlgorithmAnalysisParameter.mutationRates.get(1)));
        mr3.setText(Double.toString(AlgorithmAnalysisParameter.mutationRates.get(2)));
        mr4.setText(Double.toString(AlgorithmAnalysisParameter.mutationRates.get(3)));
        hideUpdateParameterWarning();
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel5MouseClicked

    private void jLabel142MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel142MouseClicked
        pnlBody.removeAll();
        pnlBody.repaint();
        pnlBody.revalidate();
        pnlBody.add(jspSchedule);
        pnlBody.repaint();
        pnlBody.revalidate();          // TODO add your handling code here:
    }//GEN-LAST:event_jLabel142MouseClicked

    public boolean isDecimal(String a) {

        boolean result = true;

        try {
            Double.parseDouble(a);
        } catch (NumberFormatException e) {
            result = false;
        }
        return result;
    }

    public boolean isInteger(String a) {

        boolean result = true;

        try {
            Integer.parseInt(a);
        } catch (NumberFormatException e) {
            result = false;
        }
        return result;
    }

    public boolean ValidRangePopulationSize(String a) {

        boolean result = true;

        if (Integer.parseInt(a) > 200 || Integer.parseInt(a) < 25) {
            result = false;
        }
        return result;
    }

    public boolean ValidRangeCrossoverRate(String a) {

        boolean result = true;

        if (Double.parseDouble(a) > 0.9 || Double.parseDouble(a) < 0.1) {
            result = false;
        }
        return result;
    }

    public boolean ValidRangeMutationRate(String a) {

        boolean result = true;

        if (Double.parseDouble(a) > 0.09 || Double.parseDouble(a) < 0.01) {
            result = false;
        }
        return result;
    }

    public boolean isValidUpdateParameter() {
        hideUpdateParameterWarning();
        boolean result = true;
        if (ps1.getText().isEmpty() || ps2.getText().isEmpty() || ps3.getText().isEmpty() || ps4.getText().isEmpty()) {
            result = false;
            lblps.setText("Enter four value");
            lblps.setVisible(true);
        } else if (!isInteger(ps1.getText()) || !isInteger(ps2.getText()) || !isInteger(ps3.getText()) || !isInteger(ps4.getText())) {
            result = false;
            lblps.setText("Enter numerical value");
            lblps.setVisible(true);
        } else if (!ValidRangePopulationSize(ps1.getText()) || !ValidRangePopulationSize(ps2.getText()) || !ValidRangePopulationSize(ps3.getText()) || !ValidRangePopulationSize(ps4.getText())) {
            result = false;
            lblps.setText("Value out of range");
            lblps.setVisible(true);
        }
        if (cr1.getText().isEmpty() || cr2.getText().isEmpty() || cr3.getText().isEmpty() || cr4.getText().isEmpty()) {
            result = false;
            lblcr.setText("Enter four value");
            lblcr.setVisible(true);
        } else if (!isDecimal(cr1.getText()) || !isDecimal(cr2.getText()) || !isDecimal(cr3.getText()) || !isDecimal(cr4.getText())) {
            result = false;
            lblcr.setText("Enter decimal value");
            lblcr.setVisible(true);
        } else if (!ValidRangeCrossoverRate(cr1.getText()) || !ValidRangeCrossoverRate(cr2.getText()) || !ValidRangeCrossoverRate(cr3.getText()) || !ValidRangeCrossoverRate(cr4.getText())) {
            result = false;
            lblcr.setText("Value out of range");
            lblcr.setVisible(true);
        }
        if (mr1.getText().isEmpty() || mr2.getText().isEmpty() || mr3.getText().isEmpty() || mr4.getText().isEmpty()) {
            result = false;
            lblmr.setText("Enter four value");
            lblmr.setVisible(true);
        } else if (!isDecimal(mr1.getText()) || !isDecimal(mr2.getText()) || !isDecimal(mr3.getText()) || !isDecimal(mr4.getText())) {
            result = false;
            lblmr.setText("Enter decimal value");
            lblmr.setVisible(true);
        } else if (!ValidRangeMutationRate(mr1.getText()) || !ValidRangeMutationRate(mr2.getText()) || !ValidRangeMutationRate(mr3.getText()) || !ValidRangeMutationRate(mr4.getText())) {
            result = false;
            lblmr.setText("Value out of range");
            lblmr.setVisible(true);
        }

        return result;
    }

    public boolean parameterValueChanged() {
        boolean result = true;
        if (ps1.getText().equals(Integer.toString(AlgorithmAnalysisParameter.populationSizes.get(0))) && ps2.getText().equals(Integer.toString(AlgorithmAnalysisParameter.populationSizes.get(1)))
                && ps3.getText().equals(Integer.toString(AlgorithmAnalysisParameter.populationSizes.get(2))) && ps4.getText().equals(Integer.toString(AlgorithmAnalysisParameter.populationSizes.get(3)))
                && cr1.getText().equals(Double.toString(AlgorithmAnalysisParameter.crossoverRates.get(0))) && cr2.getText().equals(Double.toString(AlgorithmAnalysisParameter.crossoverRates.get(1)))
                && cr3.getText().equals(Double.toString(AlgorithmAnalysisParameter.crossoverRates.get(2))) && cr4.getText().equals(Double.toString(AlgorithmAnalysisParameter.crossoverRates.get(3)))
                && mr1.getText().equals(Double.toString(AlgorithmAnalysisParameter.mutationRates.get(0))) && mr2.getText().equals(Double.toString(AlgorithmAnalysisParameter.mutationRates.get(1)))
                && mr3.getText().equals(Double.toString(AlgorithmAnalysisParameter.mutationRates.get(2))) && mr4.getText().equals(Double.toString(AlgorithmAnalysisParameter.mutationRates.get(3)))) {

            result = false;
        }
        return result;
    }
    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        if (isValidUpdateParameter()) {
            if (parameterValueChanged()) {
                try {
                    DB_Connect dc = new DB_Connect();
                    ResultSet rs = null;
                    dc.connectDatabase();

                    Statement s = dc.conn.createStatement();
                    String query = "Delete from analysisparameter";
                    int b = s.executeUpdate(query);
                    query = "Insert into analysisparameter values"
                            + "('" + Integer.parseInt(ps1.getText()) + "','" + cr1.getText() + "','" + mr1.getText() + "'),('" + Integer.parseInt(ps2.getText()) + "','" + cr2.getText() + "','" + mr2.getText() + "'),"
                            + "('" + Integer.parseInt(ps3.getText()) + "','" + cr3.getText() + "','" + mr3.getText() + "'),('" + Integer.parseInt(ps4.getText()) + "','" + cr4.getText() + "','" + mr4.getText() + "')";
                    int a = s.executeUpdate(query);
                    ps1.setText(Integer.parseInt(ps1.getText()) + "");
                    ps2.setText(Integer.parseInt(ps2.getText()) + "");
                    ps3.setText(Integer.parseInt(ps3.getText()) + "");
                    ps4.setText(Integer.parseInt(ps4.getText()) + "");
                    JOptionPane.showMessageDialog(rootPane, "Parameters updated successfully");
                    AlgorithmAnalysisParameter.loadParameter();
                } catch (SQLException ex) {
                    Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "No changes detected");
            }

        }// TODO add your handling code here:
    }//GEN-LAST:event_jButton21ActionPerformed

    public static Timetable initialTimetable = null;

    private static Timetable initializeTimetable(List gl, List tl, List cl) {
        Timetable timetable = new Timetable();
        DB_Connect dc = new DB_Connect();
        ResultSet rs = null;
        dc.connectDatabase();
        int i;
        try {
            Statement s = dc.conn.createStatement();
            String query = null;
            // Set up rooms
            i = 0;
            String capacity = null;
            for (Object classNumber : cl) {
                query = "select classCapacity from classroom where classNumber='" + classNumber.toString().substring(0, classNumber.toString().indexOf("(")) + "'";
                rs = s.executeQuery(query);
                while (rs.next()) {
                    capacity = rs.getString("classCapacity");

                }
                timetable.addRoom(i, classNumber.toString().substring(0, classNumber.toString().indexOf("(")), Integer.parseInt(capacity));
                i = i + 1;
            }

            // Set up timeslots
            // Set up professors
            query = "SELECT DISTINCT t.professorUsername from subject s inner join teaches t on s.code = t.subjectCode WHERE (";
            for (Object fac : gl) {
                query += "s.faculty='" + fac.toString().substring(0, fac.toString().indexOf("-")) + "' or ";
            }
            query = query.substring(0, query.length() - 3);
            query += ") and (";
            for (Object fac : gl) {
                query += "s.semester='" + fac.toString().substring(fac.toString().indexOf("-") + 1, fac.toString().indexOf("(")) + "' or ";
            }
            query = query.substring(0, query.length() - 3) + ")";
            rs = s.executeQuery(query);
            rs.last();
            String[] prof = new String[rs.getRow()];
            rs.beforeFirst();
            i = 0;
            while (rs.next()) {
                prof[i] = rs.getString("professorUsername");
                timetable.addProfessor(i, rs.getString("professorUsername"));
                i = i + 1;
            }

            // Set up modules and define the professors that teach them
            int[] subjects = null;
            ResultSet rs1 = null;
            Statement s1 = null;
            s1 = dc.conn.createStatement();
            int[] teachingProf = null;
            int l = 0;
            i = 0;
            int maxSubject = 0;
            int subjectCount = 0;
            for (Object fac : gl) {
                int k = 0;
                query = "select s.name,s.code from subject s "
                        + "where s.faculty='" + fac.toString().substring(0, fac.toString().indexOf("-")) + "' and s.semester='"
                        + fac.toString().substring(fac.toString().indexOf("-") + 1, fac.toString().indexOf("(")) + "';";
                rs = s.executeQuery(query);

                rs.last();
                subjects = new int[rs.getRow()];
                rs.beforeFirst();
                while (rs.next()) {
                    subjectCount++;
                    query = "select professorUsername from teaches where subjectCode='" + rs.getString("code") + "'";
                    rs1 = s1.executeQuery(query);
                    rs1.last();
                    teachingProf = new int[rs1.getRow()];
                    rs1.beforeFirst();
                    int j = 0;

                    while (rs1.next()) {
                        teachingProf[j] = findIndex(prof, rs1.getString("professorUsername"));
                        j = j + 1;
                    }
                    timetable.addModule(i, rs.getString("code"), rs.getString("name"), teachingProf);
                    subjects[k] = i;
                    k = k + 1;
                    i = i + 1;
                }
                if (maxSubject < subjectCount) {
                    maxSubject = subjectCount;
                }

                subjectCount = 0;
                query = "select s.NumberOfStudents from studentgroup s "
                        + "where s.faculty='" + fac.toString().substring(0, fac.toString().indexOf("-")) + "' and s.semester='"
                        + fac.toString().substring(fac.toString().indexOf("-") + 1, fac.toString().indexOf("(")) + "';";
                rs = s.executeQuery(query);
                while (rs.next()) {
                    timetable.addGroup(l, fac.toString(), Integer.parseInt(rs.getString("NumberOfStudents")), subjects);
                    l = l + 1;
                }

            }
            if (maxSubject < tl.size()) {
                tl = tl.subList(0, maxSubject);
            }
            i = 0;
            for (Object time : tl) {
                timetable.addTimeslot(i, time.toString());
                i = i + 1;
            }

            dc.closeDBConnection();

        } catch (SQLException ex) {
            Logger.getLogger(TimetableGa.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
        initialTimetable = new Timetable(timetable);
        return timetable;

    }

    public static int findIndex(String arr[], String t) {

        // if array is Null 
        if (arr == null) {
            return -1;
        }

        // find length of array 
        int len = arr.length;
        int i = 0;

        // traverse in the array 
        while (i < len) {

            // if the i-th element is t 
            // then return the index 
            if (arr[i].equals(t)) {
                return i;
            } else {
                i = i + 1;
            }
        }
        return -1;
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel FacultyDesclbl;
    private javax.swing.JLabel FacultyDesclbl1;
    private javax.swing.JLabel FacultyDesclbl3;
    private javax.swing.JScrollPane SPclass;
    private javax.swing.JScrollPane SPfaculty;
    private javax.swing.JScrollPane SPprofessor;
    private javax.swing.JScrollPane SPschedule;
    private javax.swing.JScrollPane SPstudent;
    private javax.swing.JScrollPane SPsubject;
    private javax.swing.JLabel SubjectNamelbl;
    private javax.swing.JLabel SubjectNamelbl1;
    private javax.swing.JButton btnClass;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnFaculty;
    private javax.swing.JButton btnMaximize;
    private javax.swing.JButton btnMinimize;
    private javax.swing.JButton btnProffessor;
    private javax.swing.JButton btnSchedule;
    private javax.swing.JLabel classCapacitylbl;
    private javax.swing.JLabel classCapacitylbl1;
    private javax.swing.JTextField classCapacitytxt;
    private javax.swing.JTextField classCapacitytxt1;
    private javax.swing.JLabel classFloorlbl;
    private javax.swing.JLabel classFloorlbl1;
    private javax.swing.JTextField classFloortxt;
    private javax.swing.JTextField classFloortxt1;
    private javax.swing.JLabel classNumberlbl;
    private javax.swing.JLabel classNumberlbl1;
    private javax.swing.JTextField classNumbertxt;
    private javax.swing.JTextField classNumbertxt1;
    private javax.swing.JScrollPane classSP;
    private javax.swing.JTextField cr1;
    private javax.swing.JTextField cr2;
    private javax.swing.JTextField cr3;
    private javax.swing.JTextField cr4;
    private lu.tudor.santec.jtimechooser.JTimeChooser endtime;
    private javax.swing.JLabel facName;
    private javax.swing.JLabel facultyDescriptionviewsemlbl;
    private javax.swing.JTextArea facultyDesctxtarea;
    private javax.swing.JLabel facultyNamelbl;
    private javax.swing.JTextField facultyNametxt;
    private javax.swing.JComboBox<String> facultyStudentCombo;
    private javax.swing.JComboBox<String> facultyStudentUpdateCombo;
    private javax.swing.JLabel facultyStudentUpdatelbl;
    private javax.swing.JLabel facultyStudentlbl;
    private javax.swing.JPanel formPnl;
    private javax.swing.JPanel formPnl1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel100;
    private javax.swing.JLabel jLabel101;
    private javax.swing.JLabel jLabel102;
    private javax.swing.JLabel jLabel103;
    private javax.swing.JLabel jLabel104;
    private javax.swing.JLabel jLabel105;
    private javax.swing.JLabel jLabel106;
    private javax.swing.JLabel jLabel107;
    private javax.swing.JLabel jLabel108;
    private javax.swing.JLabel jLabel109;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel110;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel113;
    private javax.swing.JLabel jLabel114;
    private javax.swing.JLabel jLabel115;
    private javax.swing.JLabel jLabel116;
    private javax.swing.JLabel jLabel117;
    private javax.swing.JLabel jLabel118;
    private javax.swing.JLabel jLabel119;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel120;
    private javax.swing.JLabel jLabel121;
    private javax.swing.JLabel jLabel122;
    private javax.swing.JLabel jLabel123;
    private javax.swing.JLabel jLabel124;
    private javax.swing.JLabel jLabel125;
    private javax.swing.JLabel jLabel126;
    private javax.swing.JLabel jLabel127;
    private javax.swing.JLabel jLabel128;
    private javax.swing.JLabel jLabel129;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel130;
    private javax.swing.JLabel jLabel131;
    private javax.swing.JLabel jLabel132;
    private javax.swing.JLabel jLabel133;
    private javax.swing.JLabel jLabel134;
    private javax.swing.JLabel jLabel135;
    private javax.swing.JLabel jLabel136;
    private javax.swing.JLabel jLabel137;
    private javax.swing.JLabel jLabel138;
    private javax.swing.JLabel jLabel139;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel140;
    private javax.swing.JLabel jLabel141;
    private javax.swing.JLabel jLabel142;
    private javax.swing.JLabel jLabel143;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JLabel jLabel99;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel39;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel43;
    private javax.swing.JPanel jPanel44;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jspSchedule;
    private javax.swing.JLabel lblNews;
    private javax.swing.JLabel lblQA;
    private javax.swing.JLabel lblTimeline;
    private javax.swing.JLabel lblTrending;
    private javax.swing.JLabel lblclasslist;
    private javax.swing.JLabel lblcr;
    private javax.swing.JLabel lblday;
    private javax.swing.JLabel lblgrouplist;
    private javax.swing.JLabel lblmr;
    private javax.swing.JLabel lblmr1;
    private javax.swing.JLabel lblps;
    private javax.swing.JLabel lbltime;
    private javax.swing.JLabel lbltimelist;
    private javax.swing.JLabel logoutlbl;
    private javax.swing.JTextField mr1;
    private javax.swing.JTextField mr2;
    private javax.swing.JTextField mr3;
    private javax.swing.JTextField mr4;
    private javax.swing.JLabel numberOfStudentUpdatelbl;
    private javax.swing.JTextField numberOfStudentUpdatetxt;
    private javax.swing.JLabel numberOfStudentlbl;
    private javax.swing.JTextField numberOfStudenttxt;
    private javax.swing.JLabel phonelbl1;
    private javax.swing.JLabel phonelbl2;
    private javax.swing.JPanel pnlAddClass;
    private javax.swing.JPanel pnlAddFaculty;
    private javax.swing.JPanel pnlAddProffesor;
    private javax.swing.JPanel pnlAddStudentGroup;
    private javax.swing.JPanel pnlAddSubject;
    private javax.swing.JPanel pnlAddTimeslot;
    private javax.swing.JPanel pnlBody;
    private javax.swing.JPanel pnlClass;
    private javax.swing.JPanel pnlDisplaySchedule;
    private javax.swing.JPanel pnlFaculty;
    private javax.swing.JPanel pnlGenerate;
    private javax.swing.JPanel pnlHeader;
    private javax.swing.JPanel pnlMenu;
    private javax.swing.JPanel pnlProffesor;
    private javax.swing.JPanel pnlSchedule;
    private javax.swing.JPanel pnlSubjectSemester;
    private javax.swing.JPanel pnlUpdateAnalysisParameter;
    private javax.swing.JPanel pnlUpdateClass;
    private javax.swing.JPanel pnlUpdateFaculty;
    private javax.swing.JPanel pnlUpdateProfessor;
    private javax.swing.JPanel pnlUpdateStudent;
    private javax.swing.JPanel pnlUpdateSubject;
    private javax.swing.JPanel pnlViewClass;
    private javax.swing.JPanel pnlViewFaculty;
    private javax.swing.JPanel pnlViewProffesor;
    private javax.swing.JPanel pnlViewSemester;
    private javax.swing.JPanel pnlViewStudent;
    private javax.swing.JPanel pnlmainViewClass;
    private javax.swing.JPanel pnlmainViewFaculty;
    private javax.swing.JPanel pnlmainViewProfessor;
    private javax.swing.JPanel pnlmainViewSchedule;
    private javax.swing.JPanel pnlmainViewStudent;
    private javax.swing.JPanel pnlmainViewSubject;
    private javax.swing.JScrollPane profScrollPane;
    private javax.swing.JScrollPane profScrollPane1;
    private javax.swing.JLabel professorCpasswordlbl;
    private javax.swing.JLabel professorCpasswordlbl1;
    private javax.swing.JPasswordField professorCpasswordtxt;
    private javax.swing.JPasswordField professorCpasswordtxt1;
    private javax.swing.JLabel professorEmaillbl;
    private javax.swing.JLabel professorEmaillbl1;
    private javax.swing.JTextField professorEmailtxt;
    private javax.swing.JTextField professorEmailtxt1;
    private javax.swing.JLabel professorFnamelbl;
    private javax.swing.JLabel professorFnamelbl1;
    private javax.swing.JTextField professorFnametxt;
    private javax.swing.JTextField professorFnametxt1;
    private javax.swing.JLabel professorLnamelbl;
    private javax.swing.JLabel professorLnamelbl1;
    private javax.swing.JTextField professorLnametxt;
    private javax.swing.JTextField professorLnametxt1;
    private javax.swing.JLabel professorPasswordlbl;
    private javax.swing.JLabel professorPasswordlbl1;
    private javax.swing.JPasswordField professorPasswordtxt;
    private javax.swing.JPasswordField professorPasswordtxt1;
    private javax.swing.JLabel professorPhonelbl;
    private javax.swing.JLabel professorPhonelbl1;
    private javax.swing.JTextField professorPhonetxt;
    private javax.swing.JTextField professorPhonetxt1;
    private javax.swing.JLabel professorUnamelbl;
    private javax.swing.JLabel professorUnamelbl1;
    private javax.swing.JTextField professorUnametxt;
    private javax.swing.JTextField professorUnametxt1;
    private javax.swing.JTextField ps1;
    private javax.swing.JTextField ps2;
    private javax.swing.JTextField ps3;
    private javax.swing.JTextField ps4;
    private javax.swing.JPanel schedulePnl;
    private javax.swing.JPanel schedulePnl1;
    private javax.swing.JPanel semIIIpnl;
    private javax.swing.JPanel semIIpnl;
    private javax.swing.JPanel semIVpnl;
    private javax.swing.JPanel semIpnl;
    private javax.swing.JPanel semVIIIpnl;
    private javax.swing.JPanel semVIIpnl;
    private javax.swing.JPanel semVIpnl;
    private javax.swing.JPanel semVpnl;
    private javax.swing.JComboBox<String> semesterStudentCombo;
    private javax.swing.JComboBox<String> semesterStudentUpdateCombo;
    private javax.swing.JLabel semesterStudentUpdatelbl;
    private javax.swing.JLabel semesterStudentlbl;
    private lu.tudor.santec.jtimechooser.JTimeChooser starttime;
    private javax.swing.JScrollPane studentGroupSP;
    private javax.swing.JLabel subjectCodelbl;
    private javax.swing.JLabel subjectCodelbl1;
    private javax.swing.JTextField subjectCodetxt;
    private javax.swing.JTextField subjectCodetxt1;
    private javax.swing.JLabel subjectFacultylbl;
    private javax.swing.JLabel subjectFacultylbl1;
    private javax.swing.JComboBox<String> subjectFaultyCombo;
    private javax.swing.JComboBox<String> subjectFaultyCombo1;
    private javax.swing.JTextField subjectNametxt;
    private javax.swing.JTextField subjectNametxt1;
    private javax.swing.JLabel subjectProffesorlbl;
    private javax.swing.JLabel subjectProffesorlbl1;
    private javax.swing.JComboBox<String> subjectSemesterCombo;
    private javax.swing.JComboBox<String> subjectSemesterCombo1;
    private javax.swing.JLabel subjectSemesterlbl;
    private javax.swing.JLabel subjectSemesterlbl1;
    private javax.swing.JScrollPane timeSP;
    private javax.swing.JTextField txtday;
    private javax.swing.JLabel welcomelbl;
    // End of variables declaration//GEN-END:variables
}
